{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Aura - Next Generation Business Suite\n\n## Overview\n\nAura is a comprehensive business suite application inspired by Zoho's ecosystem, designed to provide 80+ integrated applications across multiple business categories. The platform features a modern, futuristic design with a dark theme and neon accents, targeting enterprise users who need a unified platform for managing various business operations from sales and marketing to finance and project management.\n\nThe application is built as a full-stack web application with a React frontend and Express backend, featuring a clean architecture that separates concerns between client, server, and shared components. The system is designed to showcase different business application categories, individual apps within those categories, and curated business suites.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern development practices\n- **Routing**: Wouter for lightweight client-side routing with pages for home, category views, and individual app details\n- **State Management**: TanStack Query (React Query) for server state management, caching, and data synchronization\n- **Styling**: Tailwind CSS with custom design system featuring dark theme, neon accents, and glassmorphism effects\n- **UI Components**: Radix UI primitives with shadcn/ui component library for consistent, accessible interface elements\n- **Build Tool**: Vite for fast development and optimized production builds\n\n### Backend Architecture\n- **Framework**: Express.js with TypeScript providing RESTful API endpoints\n- **Data Layer**: In-memory storage implementation (MemStorage) simulating database operations for categories, apps, and suites\n- **API Design**: RESTful endpoints for CRUD operations on categories (`/api/categories`), apps (`/api/apps`), and suites (`/api/suites`) with search and filtering capabilities\n- **Development**: Hot module replacement and development middleware integration for seamless development experience\n\n### Database Schema Design\n- **ORM**: Drizzle ORM configured for PostgreSQL with type-safe schema definitions\n- **Tables**: \n  - Categories: Business application categories with metadata (icons, colors, app counts)\n  - Apps: Individual applications with features, shortcuts, and category associations\n  - Suites: Curated collections of related applications\n- **Schema Management**: Drizzle Kit for migrations and schema management with environment-based configuration\n\n### Component Architecture\n- **Layout System**: Responsive layout with fixed navigation header and main content area\n- **Reusable Components**: Modular card components for apps, categories, and suites with consistent styling\n- **Search Functionality**: Real-time search with debouncing and query-based filtering across all applications\n- **Responsive Design**: Mobile-first approach with adaptive layouts for different screen sizes\n\n### Development Workflow\n- **TypeScript**: Strict type checking across frontend, backend, and shared modules\n- **Code Organization**: Monorepo structure with shared schema and types between client and server\n- **Path Aliases**: Configured import aliases for clean, maintainable import statements\n- **Development Scripts**: Integrated scripts for development, building, and database management\n\n## External Dependencies\n\n### UI and Styling Libraries\n- **Radix UI**: Comprehensive suite of accessible, unstyled UI primitives for building the interface\n- **Tailwind CSS**: Utility-first CSS framework with custom configuration for dark theme and design system\n- **Lucide React**: Modern icon library providing consistent iconography throughout the application\n- **Font Awesome**: Icon library for business application category representations\n\n### Data Management\n- **TanStack Query**: Server state management with caching, background updates, and optimistic updates\n- **Drizzle ORM**: Type-safe database ORM with PostgreSQL support and schema validation\n- **Zod**: Runtime type validation integrated with Drizzle for schema validation\n\n### Development and Build Tools\n- **Vite**: Modern build tool with fast HMR and optimized production builds\n- **Wouter**: Lightweight routing library for client-side navigation\n- **PostCSS**: CSS processing with Tailwind CSS and Autoprefixer plugins\n\n### Database Infrastructure\n- **Neon Database**: Serverless PostgreSQL database service for production data storage\n- **Connection Management**: Environment-based database connection configuration with fallback handling\n\n### Replit Integration\n- **Development Environment**: Configured for Replit development with runtime error handling and development banners\n- **Cartographer Plugin**: Development-time navigation and debugging assistance within Replit environment","size_bytes":4863},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        'aura-dark': \"var(--aura-dark)\",\n        'aura-dark-secondary': \"var(--aura-dark-secondary)\",\n        'aura-neon-blue': \"var(--aura-neon-blue)\",\n        'aura-neon-purple': \"var(--aura-neon-purple)\",\n        'aura-accent-cyan': \"var(--aura-accent-cyan)\",\n        'aura-gray': \"var(--aura-gray)\",\n        'aura-gray-light': \"var(--aura-gray-light)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      boxShadow: {\n        'neon-blue': '0 0 20px rgba(0, 212, 255, 0.3)',\n        'neon-purple': '0 0 20px rgba(139, 92, 246, 0.3)',\n        'neon-cyan': '0 0 20px rgba(6, 255, 165, 0.3)',\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        float: {\n          '0%, 100%': { transform: 'translateY(0px)' },\n          '50%': { transform: 'translateY(-10px)' },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        float: \"float 6s ease-in-out infinite\",\n        \"pulse-slow\": \"pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2913},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Categories\n  app.get(\"/api/categories\", async (req, res) => {\n    try {\n      const categories = await storage.getCategories();\n      res.json(categories);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch categories\" });\n    }\n  });\n\n  app.get(\"/api/categories/:id\", async (req, res) => {\n    try {\n      const category = await storage.getCategoryById(req.params.id);\n      if (!category) {\n        return res.status(404).json({ message: \"Category not found\" });\n      }\n      res.json(category);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch category\" });\n    }\n  });\n\n  // Apps\n  app.get(\"/api/apps\", async (req, res) => {\n    try {\n      const { category, search } = req.query;\n      \n      let apps;\n      if (search) {\n        apps = await storage.searchApps(search as string);\n      } else if (category) {\n        apps = await storage.getAppsByCategory(category as string);\n      } else {\n        apps = await storage.getApps();\n      }\n      \n      res.json(apps);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch apps\" });\n    }\n  });\n\n  app.get(\"/api/apps/:id\", async (req, res) => {\n    try {\n      const app = await storage.getAppById(req.params.id);\n      if (!app) {\n        return res.status(404).json({ message: \"App not found\" });\n      }\n      res.json(app);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch app\" });\n    }\n  });\n\n  // Suites\n  app.get(\"/api/suites\", async (req, res) => {\n    try {\n      const suites = await storage.getSuites();\n      res.json(suites);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch suites\" });\n    }\n  });\n\n  app.get(\"/api/suites/:id\", async (req, res) => {\n    try {\n      const suite = await storage.getSuiteById(req.params.id);\n      if (!suite) {\n        return res.status(404).json({ message: \"Suite not found\" });\n      }\n      res.json(suite);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch suite\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":2316},"server/storage.ts":{"content":"import { type Category, type App, type Suite, type InsertCategory, type InsertApp, type InsertSuite } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // Categories\n  getCategories(): Promise<Category[]>;\n  getCategoryById(id: string): Promise<Category | undefined>;\n  createCategory(category: InsertCategory): Promise<Category>;\n\n  // Apps\n  getApps(): Promise<App[]>;\n  getAppsByCategory(categoryId: string): Promise<App[]>;\n  getAppById(id: string): Promise<App | undefined>;\n  createApp(app: InsertApp): Promise<App>;\n  searchApps(query: string): Promise<App[]>;\n\n  // Suites\n  getSuites(): Promise<Suite[]>;\n  getSuiteById(id: string): Promise<Suite | undefined>;\n  createSuite(suite: InsertSuite): Promise<Suite>;\n}\n\nexport class MemStorage implements IStorage {\n  private categories: Map<string, Category>;\n  private apps: Map<string, App>;\n  private suites: Map<string, Suite>;\n\n  constructor() {\n    this.categories = new Map();\n    this.apps = new Map();\n    this.suites = new Map();\n    this.initializeData();\n  }\n\n  private initializeData() {\n    // Initialize categories with accurate app counts\n    const categoriesData: Array<Omit<Category, 'id'>> = [\n      { name: \"Sales\", description: \"Complete sales automation and CRM solutions\", icon: \"fas fa-chart-line\", color: \"#00d4ff\", appCount: 8 },\n      { name: \"Marketing\", description: \"Comprehensive marketing automation suite\", icon: \"fas fa-bullhorn\", color: \"#8b5cf6\", appCount: 16 },\n      { name: \"Commerce\", description: \"Complete eCommerce platform solution\", icon: \"fas fa-shopping-cart\", color: \"#06ffa5\", appCount: 1 },\n      { name: \"Service\", description: \"Customer service and support tools\", icon: \"fas fa-headset\", color: \"#eab308\", appCount: 6 },\n      { name: \"Finance\", description: \"Complete financial management suite\", icon: \"fas fa-calculator\", color: \"#22c55e\", appCount: 10 },\n      { name: \"Email & Collaboration\", description: \"Complete collaboration and productivity suite\", icon: \"fas fa-envelope\", color: \"#3b82f6\", appCount: 20 },\n      { name: \"Human Resources\", description: \"Complete HR management platform\", icon: \"fas fa-users\", color: \"#ec4899\", appCount: 7 },\n      { name: \"Legal\", description: \"Legal and contract management tools\", icon: \"fas fa-gavel\", color: \"#f97316\", appCount: 2 },\n      { name: \"Security & IT\", description: \"Enterprise security and IT management\", icon: \"fas fa-shield-alt\", color: \"#ef4444\", appCount: 12 },\n      { name: \"BI & Analytics\", description: \"Business intelligence and analytics platform\", icon: \"fas fa-chart-bar\", color: \"#6366f1\", appCount: 4 },\n      { name: \"Project Management\", description: \"Complete project management suite\", icon: \"fas fa-tasks\", color: \"#14b8a6\", appCount: 3 },\n      { name: \"Developer Platforms\", description: \"Development tools and platforms\", icon: \"fas fa-code\", color: \"#a855f7\", appCount: 12 }\n    ];\n\n    categoriesData.forEach(cat => {\n      const id = randomUUID();\n      this.categories.set(id, { ...cat, id });\n    });\n\n    // Initialize apps for each category\n    this.initializeApps();\n    this.initializeSuites();\n  }\n\n  private initializeApps() {\n    const categories = Array.from(this.categories.values());\n    \n    const appsData: Array<Omit<App, 'id'>> = [\n      // Sales Apps (8 Apps)\n      { name: \"CRM\", description: \"Comprehensive CRM platform\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-users\", features: [\"Lead Management\", \"Contact Management\", \"Deal Tracking\", \"Sales Analytics\"], shortcuts: [\"Dashboard\", \"Leads\", \"Contacts\", \"Deals\", \"Activities\", \"Reports\", \"Settings\"] },\n      { name: \"Bigin\", description: \"Simple CRM for small businesses\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-seedling\", features: [\"Pipeline Management\", \"Contact Organization\", \"Deal Insights\"], shortcuts: [\"Pipeline\", \"Contacts\", \"Deals\", \"Reports\"] },\n      { name: \"Sign\", description: \"Digital signature app\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-signature\", features: [\"Digital Signatures\", \"Document Templates\", \"Workflow Management\"], shortcuts: [\"Documents\", \"Templates\", \"Workflows\", \"Settings\"] },\n      { name: \"SalesIQ\", description: \"Live chat and visitor engagement\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-comments\", features: [\"Live Chat\", \"Visitor Tracking\", \"Lead Scoring\"], shortcuts: [\"Chat\", \"Visitors\", \"Analytics\", \"Settings\"] },\n      { name: \"Forms\", description: \"Online form builder\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-clipboard-list\", features: [\"Form Builder\", \"Response Collection\", \"Data Analysis\"], shortcuts: [\"Forms\", \"Responses\", \"Analytics\", \"Settings\"] },\n      { name: \"RouteIQ\", description: \"Sales map visualization and route planning\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-route\", features: [\"Route Optimization\", \"Territory Management\", \"Sales Mapping\"], shortcuts: [\"Routes\", \"Territories\", \"Maps\", \"Reports\"] },\n      { name: \"Bookings\", description: \"Appointment scheduling\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-calendar-alt\", features: [\"Online Scheduling\", \"Calendar Integration\", \"Automated Reminders\"], shortcuts: [\"Calendar\", \"Bookings\", \"Services\", \"Settings\"] },\n      { name: \"Thrive\", description: \"Loyalty and affiliate management\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-trophy\", features: [\"Loyalty Programs\", \"Affiliate Tracking\", \"Reward Management\"], shortcuts: [\"Programs\", \"Affiliates\", \"Rewards\", \"Analytics\"] },\n\n      // Marketing Apps (16 Apps)\n      { name: \"Campaigns\", description: \"Email campaign creator\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-mail-bulk\", features: [\"Email Templates\", \"Campaign Management\", \"A/B Testing\"], shortcuts: [\"Campaigns\", \"Templates\", \"Analytics\", \"Settings\"] },\n      { name: \"Sign\", description: \"Digital signature app\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-signature\", features: [\"Digital Signatures\", \"Document Templates\", \"Workflow Management\"], shortcuts: [\"Documents\", \"Templates\", \"Workflows\", \"Settings\"] },\n      { name: \"SalesIQ\", description: \"Live chat and visitor engagement\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-comments\", features: [\"Live Chat\", \"Visitor Tracking\", \"Lead Scoring\"], shortcuts: [\"Chat\", \"Visitors\", \"Analytics\", \"Settings\"] },\n      { name: \"Forms\", description: \"Online form builder\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-clipboard-list\", features: [\"Form Builder\", \"Response Collection\", \"Data Analysis\"], shortcuts: [\"Forms\", \"Responses\", \"Analytics\", \"Settings\"] },\n      { name: \"Backstage\", description: \"Event management software\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-calendar-check\", features: [\"Event Planning\", \"Registration Management\", \"Ticketing\"], shortcuts: [\"Events\", \"Registrations\", \"Tickets\", \"Analytics\"] },\n      { name: \"Social\", description: \"Social media management\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-share-alt\", features: [\"Multi-platform Publishing\", \"Content Scheduling\", \"Social Analytics\"], shortcuts: [\"Posts\", \"Calendar\", \"Analytics\", \"Settings\"] },\n      { name: \"Survey\", description: \"Survey design and distribution\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-poll\", features: [\"Survey Builder\", \"Response Collection\", \"Data Visualization\"], shortcuts: [\"Surveys\", \"Responses\", \"Reports\", \"Settings\"] },\n      { name: \"Marketing Automation\", description: \"All-in-one marketing automation\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-robot\", features: [\"Workflow Automation\", \"Lead Nurturing\", \"Behavioral Triggers\"], shortcuts: [\"Workflows\", \"Leads\", \"Analytics\", \"Settings\"] },\n      { name: \"Sites\", description: \"Website builder\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-globe\", features: [\"Drag & Drop Builder\", \"Responsive Templates\", \"SEO Optimization\"], shortcuts: [\"Sites\", \"Templates\", \"SEO\", \"Analytics\"] },\n      { name: \"Webinar\", description: \"Webinar platform\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-video\", features: [\"Live Streaming\", \"Registration Management\", \"Recording\"], shortcuts: [\"Webinars\", \"Registrations\", \"Recordings\", \"Analytics\"] },\n      { name: \"PageSense\", description: \"Website conversion optimization\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-chart-line\", features: [\"A/B Testing\", \"Heatmaps\", \"Conversion Tracking\"], shortcuts: [\"Tests\", \"Heatmaps\", \"Analytics\", \"Settings\"] },\n      { name: \"LandingPage\", description: \"Landing page builder\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-window-maximize\", features: [\"Template Library\", \"Conversion Optimization\", \"Lead Capture\"], shortcuts: [\"Pages\", \"Templates\", \"Analytics\", \"Settings\"] },\n      { name: \"Domains\", description: \"Domain registration and DNS management\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-server\", features: [\"Domain Registration\", \"DNS Management\", \"SSL Certificates\"], shortcuts: [\"Domains\", \"DNS\", \"SSL\", \"Settings\"] },\n      { name: \"CommunitySpaces\", description: \"Online community platform\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-users\", features: [\"Forum Management\", \"Member Engagement\", \"Content Moderation\"], shortcuts: [\"Communities\", \"Members\", \"Posts\", \"Settings\"] },\n      { name: \"Publish\", description: \"Local business listings management\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-map-marked-alt\", features: [\"Listing Management\", \"Review Monitoring\", \"Local SEO\"], shortcuts: [\"Listings\", \"Reviews\", \"Analytics\", \"Settings\"] },\n      { name: \"Thrive\", description: \"Loyalty and affiliate management\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-trophy\", features: [\"Loyalty Programs\", \"Affiliate Tracking\", \"Reward Management\"], shortcuts: [\"Programs\", \"Affiliates\", \"Rewards\", \"Analytics\"] },\n\n      // Commerce and POS (1 App)\n      { name: \"Commerce\", description: \"eCommerce platform\", categoryId: categories.find(c => c.name === \"Commerce\")!.id, icon: \"fas fa-store\", features: [\"Online Store\", \"Inventory Management\", \"Payment Processing\"], shortcuts: [\"Store\", \"Products\", \"Orders\", \"Analytics\", \"Settings\"] },\n\n      // Service Apps (6 Apps)\n      { name: \"Desk\", description: \"Helpdesk software\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-life-ring\", features: [\"Ticket Management\", \"Knowledge Base\", \"Customer Support\"], shortcuts: [\"Tickets\", \"Knowledge Base\", \"Reports\", \"Settings\"] },\n      { name: \"Assist\", description: \"Remote support and access\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-hands-helping\", features: [\"Remote Desktop\", \"Screen Sharing\", \"File Transfer\"], shortcuts: [\"Sessions\", \"Computers\", \"Reports\", \"Settings\"] },\n      { name: \"SalesIQ\", description: \"Live chat and visitor engagement\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-comments\", features: [\"Live Chat\", \"Visitor Tracking\", \"Lead Scoring\"], shortcuts: [\"Chat\", \"Visitors\", \"Analytics\", \"Settings\"] },\n      { name: \"Bookings\", description: \"Appointment scheduling\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-calendar-alt\", features: [\"Online Scheduling\", \"Calendar Integration\", \"Automated Reminders\"], shortcuts: [\"Calendar\", \"Bookings\", \"Services\", \"Settings\"] },\n      { name: \"FSM\", description: \"Field Service Management platform for service businesses\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-tools\", features: [\"Work Order Management\", \"Technician Scheduling\", \"Inventory Tracking\"], shortcuts: [\"Work Orders\", \"Schedule\", \"Inventory\", \"Reports\"] },\n      { name: \"Lens\", description: \"Remote assistance with augmented reality\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-eye\", features: [\"AR Support\", \"Visual Assistance\", \"Real-time Collaboration\"], shortcuts: [\"Sessions\", \"Contacts\", \"Analytics\", \"Settings\"] },\n\n      // Finance Apps (10 Apps)\n      { name: \"Books\", description: \"Accounting platform\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-book\", features: [\"Double-entry Accounting\", \"Financial Reports\", \"Tax Management\"], shortcuts: [\"Dashboard\", \"Transactions\", \"Reports\", \"Settings\"] },\n      { name: \"Payroll\", description: \"Payroll processing software\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-money-check-alt\", features: [\"Salary Processing\", \"Tax Calculations\", \"Compliance Management\"], shortcuts: [\"Employees\", \"Payroll\", \"Reports\", \"Settings\"] },\n      { name: \"Expense\", description: \"Expense reporting\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-receipt\", features: [\"Expense Tracking\", \"Receipt Management\", \"Approval Workflows\"], shortcuts: [\"Expenses\", \"Reports\", \"Approvals\", \"Settings\"] },\n      { name: \"Inventory\", description: \"Stock and inventory control\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-boxes\", features: [\"Stock Management\", \"Warehouse Tracking\", \"Order Fulfillment\"], shortcuts: [\"Items\", \"Warehouses\", \"Orders\", \"Reports\"] },\n      { name: \"Sign\", description: \"Digital signature app\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-signature\", features: [\"Digital Signatures\", \"Document Templates\", \"Workflow Management\"], shortcuts: [\"Documents\", \"Templates\", \"Workflows\", \"Settings\"] },\n      { name: \"Billing\", description: \"End-to-end billing solution\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-file-invoice-dollar\", features: [\"Recurring Billing\", \"Payment Processing\", \"Revenue Recognition\"], shortcuts: [\"Subscriptions\", \"Invoices\", \"Payments\", \"Analytics\"] },\n      { name: \"Invoice\", description: \"Free invoicing solution\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-file-invoice\", features: [\"Invoice Creation\", \"Payment Tracking\", \"Client Management\"], shortcuts: [\"Invoices\", \"Clients\", \"Payments\", \"Reports\"] },\n      { name: \"Practice\", description: \"Practice management for accounting firms\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-briefcase\", features: [\"Client Management\", \"Time Tracking\", \"Workflow Management\"], shortcuts: [\"Clients\", \"Projects\", \"Time\", \"Reports\"] },\n      { name: \"Checkout\", description: \"Online payment page collector\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-credit-card\", features: [\"Payment Pages\", \"Checkout Flows\", \"Payment Analytics\"], shortcuts: [\"Pages\", \"Payments\", \"Analytics\", \"Settings\"] },\n      { name: \"Payments\", description: \"Unified payment solution\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-wallet\", features: [\"Payment Gateway\", \"Multi-currency Support\", \"Fraud Protection\"], shortcuts: [\"Transactions\", \"Gateways\", \"Analytics\", \"Settings\"] },\n\n      // Email, Storage, and Collaboration Apps (20 Apps)\n      { name: \"Mail\", description: \"Secure email service\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-envelope\", features: [\"Secure Email\", \"Calendar Integration\", \"Contact Management\"], shortcuts: [\"Inbox\", \"Calendar\", \"Contacts\", \"Settings\"] },\n      { name: \"Sign\", description: \"Digital signature app\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-signature\", features: [\"Digital Signatures\", \"Document Templates\", \"Workflow Management\"], shortcuts: [\"Documents\", \"Templates\", \"Workflows\", \"Settings\"] },\n      { name: \"WorkDrive\", description: \"Online file management\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-cloud\", features: [\"File Storage\", \"Team Collaboration\", \"Version Control\"], shortcuts: [\"Files\", \"Shared\", \"Recent\", \"Settings\"] },\n      { name: \"Connect\", description: \"Employee experience platform\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-network-wired\", features: [\"Social Networking\", \"Employee Engagement\", \"Communication\"], shortcuts: [\"Feed\", \"Groups\", \"Events\", \"Settings\"] },\n      { name: \"Cliq\", description: \"Team chat\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-comment-dots\", features: [\"Team Messaging\", \"File Sharing\", \"Video Calls\"], shortcuts: [\"Chats\", \"Channels\", \"Calls\", \"Settings\"] },\n      { name: \"ZeptoMail\", description: \"Transactional email sending service\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-paper-plane\", features: [\"Email API\", \"Delivery Analytics\", \"Template Management\"], shortcuts: [\"Emails\", \"Templates\", \"Analytics\", \"Settings\"] },\n      { name: \"Meeting\", description: \"Online meeting and webinar software\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-video\", features: [\"Video Conferencing\", \"Screen Sharing\", \"Recording\"], shortcuts: [\"Meetings\", \"Schedule\", \"Recordings\", \"Settings\"] },\n      { name: \"Bookings\", description: \"Appointment scheduling\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-calendar-alt\", features: [\"Online Scheduling\", \"Calendar Integration\", \"Automated Reminders\"], shortcuts: [\"Calendar\", \"Bookings\", \"Services\", \"Settings\"] },\n      { name: \"Learn\", description: \"Knowledge and learning management\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-graduation-cap\", features: [\"Course Creation\", \"Learning Paths\", \"Progress Tracking\"], shortcuts: [\"Courses\", \"Progress\", \"Reports\", \"Settings\"] },\n      { name: \"TeamInbox\", description: \"Shared inboxes for teams\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-inbox\", features: [\"Shared Email Management\", \"Team Collaboration\", \"Ticket Assignment\"], shortcuts: [\"Inbox\", \"Teams\", \"Reports\", \"Settings\"] },\n      { name: \"Office Integrator\", description: \"Built-in document editors\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-file-alt\", features: [\"Document Editing\", \"Real-time Collaboration\", \"Format Support\"], shortcuts: [\"Documents\", \"Recent\", \"Shared\", \"Settings\"] },\n      { name: \"Writer\", description: \"Word processor\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-pen\", features: [\"Document Creation\", \"Collaboration\", \"Templates\"], shortcuts: [\"Documents\", \"Templates\", \"Recent\", \"Settings\"] },\n      { name: \"Tables\", description: \"Work management tool\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-table\", features: [\"Database Management\", \"Workflow Automation\", \"Team Collaboration\"], shortcuts: [\"Tables\", \"Forms\", \"Workflows\", \"Reports\"] },\n      { name: \"Notebook\", description: \"Note-taking app\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-sticky-note\", features: [\"Note Organization\", \"Collaboration\", \"Cross-platform Sync\"], shortcuts: [\"Notes\", \"Notebooks\", \"Tags\", \"Search\"] },\n      { name: \"Show\", description: \"Presentation software\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-presentation\", features: [\"Slide Creation\", \"Collaboration\", \"Templates\"], shortcuts: [\"Presentations\", \"Templates\", \"Shared\", \"Settings\"] },\n      { name: \"Sheet\", description: \"Spreadsheet software\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-file-excel\", features: [\"Spreadsheet Creation\", \"Data Analysis\", \"Collaboration\"], shortcuts: [\"Sheets\", \"Templates\", \"Charts\", \"Settings\"] },\n      { name: \"Office Suite\", description: \"Collaborative work platform\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-briefcase\", features: [\"Integrated Office Tools\", \"Team Collaboration\", \"Document Management\"], shortcuts: [\"Documents\", \"Spreadsheets\", \"Presentations\", \"Settings\"] },\n      { name: \"Calendar\", description: \"Online business calendar\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-calendar\", features: [\"Event Scheduling\", \"Team Calendars\", \"Meeting Integration\"], shortcuts: [\"Calendar\", \"Events\", \"Meetings\", \"Settings\"] },\n      { name: \"ToDo\", description: \"Collaborative task management\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-tasks\", features: [\"Task Management\", \"Project Organization\", \"Team Collaboration\"], shortcuts: [\"Tasks\", \"Projects\", \"Teams\", \"Reports\"] },\n      { name: \"PDF Editor\", description: \"Online PDF editing tool\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-file-pdf\", features: [\"PDF Editing\", \"Annotation\", \"Form Creation\"], shortcuts: [\"Editor\", \"Forms\", \"Convert\", \"Settings\"] },\n\n      // Human Resources Apps (7 Apps)\n      { name: \"People\", description: \"HR process management\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-user-tie\", features: [\"Employee Management\", \"Performance Reviews\", \"Onboarding\"], shortcuts: [\"Employees\", \"Performance\", \"Onboarding\", \"Reports\"] },\n      { name: \"Payroll\", description: \"Payroll processing software\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-money-check-alt\", features: [\"Salary Processing\", \"Tax Calculations\", \"Compliance Management\"], shortcuts: [\"Employees\", \"Payroll\", \"Reports\", \"Settings\"] },\n      { name: \"Expense\", description: \"Expense reporting\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-receipt\", features: [\"Expense Tracking\", \"Receipt Management\", \"Approval Workflows\"], shortcuts: [\"Expenses\", \"Reports\", \"Approvals\", \"Settings\"] },\n      { name: \"Recruit\", description: \"Recruiting and hiring platform\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-search\", features: [\"Job Posting\", \"Candidate Management\", \"Interview Scheduling\"], shortcuts: [\"Jobs\", \"Candidates\", \"Interviews\", \"Reports\"] },\n      { name: \"Sign\", description: \"Digital signature app\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-signature\", features: [\"Digital Signatures\", \"Document Templates\", \"Workflow Management\"], shortcuts: [\"Documents\", \"Templates\", \"Workflows\", \"Settings\"] },\n      { name: \"Workerly\", description: \"Temporary staffing management\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-clock\", features: [\"Staff Scheduling\", \"Time Tracking\", \"Payroll Integration\"], shortcuts: [\"Staff\", \"Schedule\", \"Time\", \"Payroll\"] },\n      { name: \"Shifts\", description: \"Employee scheduling and time tracking\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-clock\", features: [\"Shift Scheduling\", \"Time Tracking\", \"Attendance Management\"], shortcuts: [\"Shifts\", \"Schedule\", \"Attendance\", \"Reports\"] },\n\n      // Legal Apps (2 Apps)\n      { name: \"Sign\", description: \"Digital signature app\", categoryId: categories.find(c => c.name === \"Legal\")!.id, icon: \"fas fa-signature\", features: [\"Digital Signatures\", \"Document Templates\", \"Workflow Management\"], shortcuts: [\"Documents\", \"Templates\", \"Workflows\", \"Settings\"] },\n      { name: \"Contracts\", description: \"Contract lifecycle management\", categoryId: categories.find(c => c.name === \"Legal\")!.id, icon: \"fas fa-file-contract\", features: [\"Contract Creation\", \"Lifecycle Management\", \"Compliance Tracking\"], shortcuts: [\"Contracts\", \"Templates\", \"Approvals\", \"Reports\"] },\n\n      // Security and IT Management Apps (12 Apps)\n      { name: \"Creator\", description: \"Custom business app platform\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-code\", features: [\"App Development\", \"Workflow Automation\", \"Database Management\"], shortcuts: [\"Apps\", \"Forms\", \"Workflows\", \"Database\"] },\n      { name: \"Assist\", description: \"Remote support and access\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-hands-helping\", features: [\"Remote Desktop\", \"Screen Sharing\", \"File Transfer\"], shortcuts: [\"Sessions\", \"Computers\", \"Reports\", \"Settings\"] },\n      { name: \"Vault\", description: \"Online password manager\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-lock\", features: [\"Password Management\", \"Secure Storage\", \"Team Sharing\"], shortcuts: [\"Passwords\", \"Secure Notes\", \"Settings\", \"Reports\"] },\n      { name: \"eProtect\", description: \"Email security and archiving\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-shield-alt\", features: [\"Email Security\", \"Archiving\", \"Compliance\"], shortcuts: [\"Security\", \"Archive\", \"Policies\", \"Reports\"] },\n      { name: \"Directory\", description: \"Workforce identity and access management\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-users-cog\", features: [\"Identity Management\", \"Access Control\", \"Single Sign-On\"], shortcuts: [\"Users\", \"Groups\", \"Policies\", \"Reports\"] },\n      { name: \"Catalyst\", description: \"Pro-code app deployment platform\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-rocket\", features: [\"Application Deployment\", \"Serverless Functions\", \"Database Management\"], shortcuts: [\"Functions\", \"Database\", \"Deployments\", \"Logs\"] },\n      { name: \"RPA\", description: \"Robotic Process Automation task automation\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-robot\", features: [\"Process Automation\", \"Task Scheduling\", \"Bot Management\"], shortcuts: [\"Bots\", \"Workflows\", \"Schedule\", \"Analytics\"] },\n      { name: \"QEngine\", description: \"Test automation software\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-vial\", features: [\"Automated Testing\", \"Test Management\", \"Quality Assurance\"], shortcuts: [\"Tests\", \"Suites\", \"Results\", \"Reports\"] },\n      { name: \"Lens\", description: \"Remote assistance with augmented reality\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-eye\", features: [\"AR Support\", \"Visual Assistance\", \"Real-time Collaboration\"], shortcuts: [\"Sessions\", \"Contacts\", \"Analytics\", \"Settings\"] },\n      { name: \"OneAuth\", description: \"Multi-factor authenticator\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-key\", features: [\"Multi-factor Authentication\", \"Token Generation\", \"Security Management\"], shortcuts: [\"Tokens\", \"Accounts\", \"Security\", \"Settings\"] },\n      { name: \"Toolkit\", description: \"Admin lookup queries\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-toolbox\", features: [\"Database Queries\", \"Admin Tools\", \"Data Analysis\"], shortcuts: [\"Queries\", \"Tools\", \"Reports\", \"Settings\"] },\n      { name: \"ManageEngine\", description: \"Enterprise IT management solutions\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-server\", features: [\"IT Asset Management\", \"Network Monitoring\", \"Help Desk\"], shortcuts: [\"Assets\", \"Network\", \"Tickets\", \"Reports\"] },\n\n      // BI and Analytics Apps (4 Apps)\n      { name: \"Analytics\", description: \"Self-service BI and analytics\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-chart-bar\", features: [\"Data Visualization\", \"Report Generation\", \"Dashboard Creation\"], shortcuts: [\"Dashboards\", \"Reports\", \"Data Sources\", \"Settings\"] },\n      { name: \"IoT\", description: \"IoT analytics for operational intelligence\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-wifi\", features: [\"Device Management\", \"Data Analytics\", \"Real-time Monitoring\"], shortcuts: [\"Devices\", \"Analytics\", \"Monitoring\", \"Settings\"] },\n      { name: \"DataPrep\", description: \"ETL tool for data integration\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-database\", features: [\"Data Preparation\", \"ETL Processes\", \"Data Integration\"], shortcuts: [\"Sources\", \"Flows\", \"Jobs\", \"Settings\"] },\n      { name: \"Embedded BI\", description: \"Embedded and white-label BI solutions\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-chart-pie\", features: [\"Embedded Analytics\", \"White-label Solutions\", \"API Integration\"], shortcuts: [\"Embeds\", \"APIs\", \"Analytics\", \"Settings\"] },\n\n      // Project Management Apps (3 Apps)\n      { name: \"Projects\", description: \"Project management and tracking\", categoryId: categories.find(c => c.name === \"Project Management\")!.id, icon: \"fas fa-project-diagram\", features: [\"Project Planning\", \"Task Management\", \"Time Tracking\"], shortcuts: [\"Projects\", \"Tasks\", \"Time\", \"Reports\"] },\n      { name: \"Sprints\", description: \"Planning tool for scrum teams\", categoryId: categories.find(c => c.name === \"Project Management\")!.id, icon: \"fas fa-running\", features: [\"Sprint Planning\", \"Backlog Management\", \"Scrum Boards\"], shortcuts: [\"Sprints\", \"Backlog\", \"Board\", \"Reports\"] },\n      { name: \"BugTracker\", description: \"Bug tracking software\", categoryId: categories.find(c => c.name === \"Project Management\")!.id, icon: \"fas fa-bug\", features: [\"Bug Tracking\", \"Issue Management\", \"Quality Assurance\"], shortcuts: [\"Bugs\", \"Issues\", \"Projects\", \"Reports\"] },\n\n      // Developer Platforms Apps (12 Apps)\n      { name: \"Creator\", description: \"Custom business app platform\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-code\", features: [\"App Development\", \"Workflow Automation\", \"Database Management\"], shortcuts: [\"Apps\", \"Forms\", \"Workflows\", \"Database\"] },\n      { name: \"ZeptoMail\", description: \"Transactional email sending service\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-paper-plane\", features: [\"Email API\", \"Delivery Analytics\", \"Template Management\"], shortcuts: [\"Emails\", \"Templates\", \"Analytics\", \"Settings\"] },\n      { name: \"IoT\", description: \"IoT platform for connected businesses\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-wifi\", features: [\"Device Management\", \"Data Analytics\", \"Real-time Monitoring\"], shortcuts: [\"Devices\", \"Analytics\", \"Monitoring\", \"Settings\"] },\n      { name: \"Flow\", description: \"Workflow automation and integration\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-sitemap\", features: [\"Workflow Automation\", \"API Integration\", \"Process Management\"], shortcuts: [\"Flows\", \"Integrations\", \"Triggers\", \"Settings\"] },\n      { name: \"Catalyst\", description: \"Pro-code app deployment platform\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-rocket\", features: [\"Application Deployment\", \"Serverless Functions\", \"Database Management\"], shortcuts: [\"Functions\", \"Database\", \"Deployments\", \"Logs\"] },\n      { name: \"DataPrep\", description: \"ETL tool for data integration\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-database\", features: [\"Data Preparation\", \"ETL Processes\", \"Data Integration\"], shortcuts: [\"Sources\", \"Flows\", \"Jobs\", \"Settings\"] },\n      { name: \"Office Integrator\", description: \"Built-in document editors\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-file-alt\", features: [\"Document Editing\", \"Real-time Collaboration\", \"Format Support\"], shortcuts: [\"Documents\", \"Recent\", \"Shared\", \"Settings\"] },\n      { name: \"Tables\", description: \"Work management tool\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-table\", features: [\"Database Management\", \"Workflow Automation\", \"Team Collaboration\"], shortcuts: [\"Tables\", \"Forms\", \"Workflows\", \"Reports\"] },\n      { name: \"RPA\", description: \"Robotic Process Automation task automation\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-robot\", features: [\"Process Automation\", \"Task Scheduling\", \"Bot Management\"], shortcuts: [\"Bots\", \"Workflows\", \"Schedule\", \"Analytics\"] },\n      { name: \"QEngine\", description: \"Test automation software\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-vial\", features: [\"Automated Testing\", \"Test Management\", \"Quality Assurance\"], shortcuts: [\"Tests\", \"Suites\", \"Results\", \"Reports\"] },\n      { name: \"Apptics\", description: \"Application analytics\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-mobile-alt\", features: [\"App Analytics\", \"User Behavior\", \"Performance Monitoring\"], shortcuts: [\"Analytics\", \"Users\", \"Performance\", \"Reports\"] },\n      { name: \"Embedded BI\", description: \"Embedded and white-label BI solutions\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-chart-pie\", features: [\"Embedded Analytics\", \"White-label Solutions\", \"API Integration\"], shortcuts: [\"Embeds\", \"APIs\", \"Analytics\", \"Settings\"] }\n    ];\n\n    appsData.forEach(app => {\n      const id = randomUUID();\n      this.apps.set(id, { ...app, id });\n    });\n  }\n\n  private initializeSuites() {\n    const apps = Array.from(this.apps.values());\n    \n    const suitesData: Array<Omit<Suite, 'id'>> = [\n      { name: \"CRM Plus\", description: \"Unified customer experience platform\", color: \"#00d4ff\", appIds: apps.filter(app => [\"CRM\", \"SalesIQ\", \"Desk\", \"Campaigns\", \"Social\"].includes(app.name)).map(app => app.id) },\n      { name: \"Service Plus\", description: \"Unified customer service platform\", color: \"#eab308\", appIds: apps.filter(app => [\"Desk\", \"Assist\", \"SalesIQ\", \"Lens\", \"FSM\"].includes(app.name)).map(app => app.id) },\n      { name: \"Finance Plus\", description: \"All-in-one finance and operations suite\", color: \"#22c55e\", appIds: apps.filter(app => [\"Books\", \"Payroll\", \"Expense\", \"Inventory\", \"Billing\", \"Invoice\"].includes(app.name)).map(app => app.id) },\n      { name: \"People Plus\", description: \"Comprehensive HR platform\", color: \"#ec4899\", appIds: apps.filter(app => [\"People\", \"Recruit\", \"Payroll\", \"Expense\", \"Shifts\"].includes(app.name)).map(app => app.id) },\n      { name: \"Workplace\", description: \"Team productivity and collaboration suite\", color: \"#3b82f6\", appIds: apps.filter(app => [\"Mail\", \"Cliq\", \"WorkDrive\", \"Connect\", \"Writer\", \"Sheet\", \"Show\"].includes(app.name)).map(app => app.id) },\n      { name: \"Marketing Plus\", description: \"Unified marketing platform\", color: \"#8b5cf6\", appIds: apps.filter(app => [\"Campaigns\", \"Social\", \"Sites\", \"PageSense\", \"Survey\", \"Webinar\"].includes(app.name)).map(app => app.id) },\n      { name: \"Projects Plus\", description: \"Unified project management platform\", color: \"#14b8a6\", appIds: apps.filter(app => [\"Projects\", \"Sprints\", \"BugTracker\"].includes(app.name)).map(app => app.id) }\n    ];\n\n    suitesData.forEach(suite => {\n      const id = randomUUID();\n      this.suites.set(id, { ...suite, id });\n    });\n  }\n\n  // Categories\n  async getCategories(): Promise<Category[]> {\n    return Array.from(this.categories.values());\n  }\n\n  async getCategoryById(id: string): Promise<Category | undefined> {\n    return this.categories.get(id);\n  }\n\n  async createCategory(category: InsertCategory): Promise<Category> {\n    const id = randomUUID();\n    const newCategory: Category = { ...category, id, appCount: category.appCount || 0 };\n    this.categories.set(id, newCategory);\n    return newCategory;\n  }\n\n  // Apps\n  async getApps(): Promise<App[]> {\n    return Array.from(this.apps.values());\n  }\n\n  async getAppsByCategory(categoryId: string): Promise<App[]> {\n    return Array.from(this.apps.values()).filter(app => app.categoryId === categoryId);\n  }\n\n  async getAppById(id: string): Promise<App | undefined> {\n    return this.apps.get(id);\n  }\n\n  async createApp(app: InsertApp): Promise<App> {\n    const id = randomUUID();\n    const newApp: App = { ...app, id };\n    this.apps.set(id, newApp);\n    return newApp;\n  }\n\n  async searchApps(query: string): Promise<App[]> {\n    const lowercaseQuery = query.toLowerCase();\n    return Array.from(this.apps.values()).filter(app => \n      app.name.toLowerCase().includes(lowercaseQuery) ||\n      app.description.toLowerCase().includes(lowercaseQuery)\n    );\n  }\n\n  // Suites\n  async getSuites(): Promise<Suite[]> {\n    return Array.from(this.suites.values());\n  }\n\n  async getSuiteById(id: string): Promise<Suite | undefined> {\n    return this.suites.get(id);\n  }\n\n  async createSuite(suite: InsertSuite): Promise<Suite> {\n    const id = randomUUID();\n    const newSuite: Suite = { ...suite, id };\n    this.suites.set(id, newSuite);\n    return newSuite;\n  }\n}\n\nexport const storage = new MemStorage();","size_bytes":37335},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, jsonb, integer } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const categories = pgTable(\"categories\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  icon: text(\"icon\").notNull(),\n  color: text(\"color\").notNull(),\n  appCount: integer(\"app_count\").notNull().default(0),\n});\n\nexport const apps = pgTable(\"apps\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  categoryId: varchar(\"category_id\").notNull(),\n  icon: text(\"icon\").notNull(),\n  features: jsonb(\"features\").$type<string[]>().notNull(),\n  shortcuts: jsonb(\"shortcuts\").$type<string[]>().notNull(),\n});\n\nexport const suites = pgTable(\"suites\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  color: text(\"color\").notNull(),\n  appIds: jsonb(\"app_ids\").$type<string[]>().notNull(),\n});\n\nexport const insertCategorySchema = createInsertSchema(categories).omit({\n  id: true,\n});\n\nexport const insertAppSchema = createInsertSchema(apps).omit({\n  id: true,\n});\n\nexport const insertSuiteSchema = createInsertSchema(suites).omit({\n  id: true,\n});\n\nexport type InsertCategory = z.infer<typeof insertCategorySchema>;\nexport type Category = typeof categories.$inferSelect;\n\nexport type InsertApp = z.infer<typeof insertAppSchema>;\nexport type App = typeof apps.$inferSelect;\n\nexport type InsertSuite = z.infer<typeof insertSuiteSchema>;\nexport type Suite = typeof suites.$inferSelect;\n","size_bytes":1766},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\nimport Category from \"@/pages/category\";\nimport AllApps from \"@/pages/all-apps\";\nimport App from \"@/pages/app\";\nimport Layout from \"@/components/ui/layout\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/app/:appId\">\n        {params => <App />}\n      </Route>\n      <Route path=\"*\">\n        <Layout>\n          <Switch>\n            <Route path=\"/\" component={Home} />\n            <Route path=\"/category/:categoryId\" component={Category} />\n            <Route path=\"/apps\" component={AllApps} />\n            <Route component={NotFound} />\n          </Switch>\n        </Layout>\n      </Route>\n    </Switch>\n  );\n}\n\nfunction AppComponent() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default AppComponent;\n","size_bytes":1201},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500;600&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(240, 50%, 6%);\n  --foreground: hsl(0, 0%, 100%);\n  --card: hsl(240, 38%, 11%);\n  --card-foreground: hsl(0, 0%, 100%);\n  --popover: hsl(240, 38%, 11%);\n  --popover-foreground: hsl(0, 0%, 100%);\n  --primary: hsl(195, 100%, 50%);\n  --primary-foreground: hsl(240, 50%, 6%);\n  --secondary: hsl(240, 38%, 11%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(240, 25%, 15%);\n  --muted-foreground: hsl(240, 5%, 65%);\n  --accent: hsl(240, 38%, 11%);\n  --accent-foreground: hsl(195, 100%, 50%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(240, 25%, 20%);\n  --input: hsl(240, 25%, 15%);\n  --ring: hsl(195, 100%, 50%);\n  --radius: 0.5rem;\n  --aura-dark: hsl(240, 50%, 6%);\n  --aura-dark-secondary: hsl(240, 38%, 11%);\n  --aura-neon-blue: hsl(195, 100%, 50%);\n  --aura-neon-purple: hsl(258, 84%, 68%);\n  --aura-accent-cyan: hsl(158, 100%, 51%);\n  --aura-gray: hsl(220, 14%, 28%);\n  --aura-gray-light: hsl(218, 12%, 34%);\n  --font-sans: 'Inter', sans-serif;\n  --font-mono: 'JetBrains Mono', monospace;\n}\n\n.dark {\n  --background: hsl(240, 50%, 6%);\n  --foreground: hsl(0, 0%, 100%);\n  --card: hsl(240, 38%, 11%);\n  --card-foreground: hsl(0, 0%, 100%);\n  --popover: hsl(240, 38%, 11%);\n  --popover-foreground: hsl(0, 0%, 100%);\n  --primary: hsl(195, 100%, 50%);\n  --primary-foreground: hsl(240, 50%, 6%);\n  --secondary: hsl(240, 38%, 11%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(240, 25%, 15%);\n  --muted-foreground: hsl(240, 5%, 65%);\n  --accent: hsl(240, 38%, 11%);\n  --accent-foreground: hsl(195, 100%, 50%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(240, 25%, 20%);\n  --input: hsl(240, 25%, 15%);\n  --ring: hsl(195, 100%, 50%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  \n  body {\n    @apply bg-background text-foreground font-sans antialiased;\n    background: linear-gradient(135deg, hsl(240, 50%, 6%) 0%, hsl(240, 38%, 11%) 100%);\n    min-height: 100vh;\n  }\n}\n\n@layer utilities {\n  .gradient-text {\n    background: linear-gradient(135deg, hsl(195, 100%, 50%), hsl(258, 84%, 68%));\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n  \n  .glass-effect {\n    background: rgba(26, 26, 46, 0.7);\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(139, 92, 246, 0.2);\n  }\n  \n  .neon-border {\n    position: relative;\n    overflow: hidden;\n  }\n  \n  .neon-border::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    padding: 1px;\n    background: linear-gradient(45deg, hsl(195, 100%, 50%), hsl(258, 84%, 68%), hsl(158, 100%, 51%));\n    border-radius: inherit;\n    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\n    mask-composite: subtract;\n    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\n    -webkit-mask-composite: subtract;\n  }\n  \n  .app-card {\n    transition: all 0.3s ease;\n    border: 1px solid rgba(139, 92, 246, 0.1);\n  }\n  \n  .app-card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 0 30px rgba(139, 92, 246, 0.4);\n    border-color: rgba(139, 92, 246, 0.5);\n  }\n  \n  .suite-card:hover {\n    transform: translateY(-5px) scale(1.02);\n    box-shadow: 0 0 30px rgba(0, 212, 255, 0.4);\n  }\n\n  @keyframes float {\n    0%, 100% { transform: translateY(0px); }\n    50% { transform: translateY(-10px); }\n  }\n  \n  .animate-float {\n    animation: float 6s ease-in-out infinite;\n  }\n  \n  .animate-pulse-slow {\n    animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n  }\n\n  .line-clamp-2 {\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n}\n","size_bytes":3964},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/app-card.tsx":{"content":"import { Link } from \"wouter\";\nimport { type Category } from \"@shared/schema\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type App } from \"@shared/schema\";\n\ninterface AppCardProps {\n  category: Category;\n}\n\nexport default function AppCard({ category }: AppCardProps) {\n  const { data: apps } = useQuery<App[]>({\n    queryKey: [\"/api/apps\"],\n    select: (allApps: App[]) => allApps.filter(app => app.categoryId === category.id),\n  });\n\n  const displayApps = apps?.slice(0, 3) || [];\n  const remainingCount = (apps?.length || 0) - 3;\n\n  return (\n    <Link href={`/category/${category.id}`}>\n      <div className=\"app-card bg-aura-dark-secondary rounded-xl p-6 neon-border cursor-pointer\">\n        <div className=\"flex items-center mb-4\">\n          <i className={`${category.icon} text-2xl mr-3`} style={{ color: category.color }}></i>\n          <h3 className=\"text-xl font-semibold\">{category.name}</h3>\n          <span \n            className=\"ml-auto text-black text-xs px-2 py-1 rounded-full font-medium\"\n            style={{ backgroundColor: category.color }}\n          >\n            {category.appCount} Apps\n          </span>\n        </div>\n        <p className=\"text-gray-300 text-sm mb-4\">{category.description}</p>\n        <div className=\"space-y-2 text-sm\">\n          {displayApps.map((app) => (\n            <div key={app.id} className=\"flex justify-between\">\n              <span>{app.name}</span>\n              <i className=\"fas fa-arrow-right\" style={{ color: category.color }}></i>\n            </div>\n          ))}\n          {remainingCount > 0 && (\n            <div className=\"text-gray-400\">+{remainingCount} more apps</div>\n          )}\n        </div>\n      </div>\n    </Link>\n  );\n}\n","size_bytes":1712},"client/src/components/search-bar.tsx":{"content":"import { useState } from \"react\";\nimport { Search } from \"lucide-react\";\nimport { Input } from \"@/components/ui/input\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type App } from \"@shared/schema\";\nimport { Link } from \"wouter\";\nimport { useSearchHook } from \"@/hooks/use-search\";\n\nexport default function SearchBar() {\n  const [query, setQuery] = useState(\"\");\n  const { searchResults, isSearching } = useSearchHook(query);\n\n  return (\n    <div className=\"relative max-w-2xl mx-auto\">\n      <div className=\"relative\">\n        <Search className=\"absolute left-4 top-4 h-5 w-5 text-gray-400\" />\n        <Input\n          type=\"text\"\n          placeholder=\"Search across all 80+ apps...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          className=\"pl-12 py-4 text-lg bg-aura-dark-secondary border-aura-gray focus:border-aura-neon-blue focus:shadow-neon-blue rounded-xl\"\n        />\n      </div>\n      \n      {query && (\n        <div className=\"absolute top-full mt-2 w-full bg-aura-dark-secondary border border-aura-gray rounded-xl shadow-lg z-50 max-h-96 overflow-y-auto\">\n          {isSearching ? (\n            <div className=\"p-4 text-center text-gray-400\">Searching...</div>\n          ) : searchResults?.length === 0 ? (\n            <div className=\"p-4 text-center text-gray-400\">No apps found for \"{query}\"</div>\n          ) : (\n            <div className=\"p-2\">\n              {searchResults?.map((app) => (\n                <Link key={app.id} href={`/app/${app.id}`}>\n                  <div className=\"flex items-center p-3 hover:bg-aura-gray rounded-lg cursor-pointer transition-colors\">\n                    <i className={`${app.icon} text-xl mr-3 text-aura-neon-blue`}></i>\n                    <div>\n                      <div className=\"font-medium\">{app.name}</div>\n                      <div className=\"text-sm text-gray-400\">{app.description}</div>\n                    </div>\n                  </div>\n                </Link>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","size_bytes":2077},"client/src/components/suite-card.tsx":{"content":"import { type Suite } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface SuiteCardProps {\n  suite: Suite;\n}\n\nexport default function SuiteCard({ suite }: SuiteCardProps) {\n  return (\n    <div \n      className=\"suite-card rounded-xl p-6 border transition-all duration-300\"\n      style={{ \n        background: `linear-gradient(135deg, ${suite.color}10 0%, ${suite.color}05 100%)`,\n        borderColor: `${suite.color}30`\n      }}\n    >\n      <div className=\"flex items-center mb-4\">\n        <i \n          className=\"fas fa-star text-2xl mr-3\"\n          style={{ color: suite.color }}\n        ></i>\n        <h3 className=\"text-xl font-semibold\">{suite.name}</h3>\n      </div>\n      <p className=\"text-gray-300 text-sm mb-4\">{suite.description}</p>\n      <Button \n        className=\"w-full py-2 rounded-lg font-medium transition-colors\"\n        style={{ \n          backgroundColor: suite.color,\n          color: suite.color === '#3b82f6' ? '#fff' : '#000'\n        }}\n      >\n        Explore Suite\n      </Button>\n    </div>\n  );\n}\n","size_bytes":1059},"client/src/data/apps.ts":{"content":"// This file contains the comprehensive app data structure for Aura\n// All apps are organized by category with complete feature sets\n\nexport const CATEGORY_COLORS = {\n  Sales: \"#00d4ff\",\n  Marketing: \"#8b5cf6\",\n  Commerce: \"#06ffa5\",\n  Service: \"#eab308\",\n  Finance: \"#22c55e\",\n  \"Email & Collaboration\": \"#3b82f6\",\n  \"Human Resources\": \"#ec4899\",\n  Legal: \"#f97316\",\n  \"Security & IT\": \"#ef4444\",\n  \"BI & Analytics\": \"#6366f1\",\n  \"Project Management\": \"#14b8a6\",\n  \"Developer Platforms\": \"#a855f7\"\n} as const;\n\nexport const SUITE_COLORS = {\n  \"CRM Plus\": \"#00d4ff\",\n  \"Service Plus\": \"#eab308\",\n  \"Finance Plus\": \"#22c55e\",\n  \"People Plus\": \"#ec4899\",\n  \"Workplace\": \"#3b82f6\",\n  \"Marketing Plus\": \"#8b5cf6\",\n  \"Projects Plus\": \"#14b8a6\"\n} as const;\n","size_bytes":751},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-search.ts":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type App } from \"@shared/schema\";\n\nexport function useSearchHook(query: string) {\n  const [debouncedQuery, setDebouncedQuery] = useState(query);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedQuery(query);\n    }, 300);\n\n    return () => clearTimeout(timer);\n  }, [query]);\n\n  const { data: searchResults, isLoading: isSearching } = useQuery<App[]>({\n    queryKey: [\"/api/apps\", { search: debouncedQuery }],\n    enabled: debouncedQuery.length > 0,\n  });\n\n  return {\n    searchResults: debouncedQuery.length > 0 ? searchResults : [],\n    isSearching: isSearching && debouncedQuery.length > 0,\n  };\n}\n","size_bytes":731},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/app.tsx":{"content":"import { useParams } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type App, type Category } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowLeft, Bell, UserCircle, Search, Plus } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport AppSidebar from \"@/components/app-sidebar\";\n\nexport default function AppPage() {\n  const { appId } = useParams<{ appId: string }>();\n\n  const { data: app, isLoading: appLoading } = useQuery<App>({\n    queryKey: [\"/api/apps\", appId],\n  });\n\n  const { data: category, isLoading: categoryLoading } = useQuery<Category>({\n    queryKey: [\"/api/categories\", app?.categoryId],\n    enabled: !!app?.categoryId,\n  });\n\n  if (appLoading || categoryLoading) {\n    return (\n      <div className=\"min-h-screen bg-aura-dark\">\n        <div className=\"bg-aura-dark-secondary border-b border-aura-gray\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex items-center justify-between h-14\">\n              <Skeleton className=\"h-6 w-32\" />\n              <Skeleton className=\"h-8 w-96\" />\n              <div className=\"flex space-x-4\">\n                <Skeleton className=\"h-8 w-8 rounded-full\" />\n                <Skeleton className=\"h-8 w-8 rounded-full\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex\">\n          <Skeleton className=\"w-64 h-screen\" />\n          <div className=\"flex-1 p-8\">\n            <Skeleton className=\"h-12 w-64 mb-4\" />\n            <Skeleton className=\"h-6 w-96 mb-8\" />\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {Array.from({ length: 4 }).map((_, i) => (\n                <Skeleton key={i} className=\"h-32 rounded-lg\" />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!app || !category) {\n    return (\n      <div className=\"min-h-screen bg-aura-dark pt-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <h1 className=\"text-2xl font-bold text-red-400 mb-4\">App Not Found</h1>\n            <Link href=\"/\">\n              <Button>Back to Home</Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-aura-dark\">\n      {/* App-specific Top Navigation */}\n      <nav className=\"bg-aura-dark-secondary border-b border-aura-gray\">\n        <div className=\"flex items-center justify-between h-14 px-4\">\n          {/* Left section */}\n          <div className=\"flex items-center space-x-4\">\n            <Link href=\"/\">\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-300 hover:text-white\">\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                Home\n              </Button>\n            </Link>\n            <div className=\"h-6 w-px bg-aura-gray\"></div>\n            <span \n              className=\"text-lg font-semibold\"\n              style={{ color: category.color }}\n            >\n              {app.name}\n            </span>\n          </div>\n\n          {/* Center search */}\n          <div className=\"flex-1 max-w-2xl mx-8\">\n            <div className=\"relative\">\n              <input \n                type=\"text\" \n                placeholder={`Search in ${app.name}...`}\n                className=\"w-full bg-aura-dark border border-aura-gray rounded-lg px-4 py-2 pl-10 text-sm focus:outline-none focus:border-opacity-50 transition-all\"\n                style={{ focusBorderColor: category.color }}\n              />\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n            </div>\n          </div>\n\n          {/* Right section */}\n          <div className=\"flex items-center space-x-2\">\n            <Button \n              size=\"sm\" \n              className=\"text-black font-medium\"\n              style={{ backgroundColor: category.color }}\n            >\n              <Plus className=\"h-4 w-4 mr-1\" />\n              New\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-300 hover:text-white\">\n              <Bell className=\"h-4 w-4\" />\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-300 hover:text-white\">\n              <UserCircle className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </nav>\n\n      {/* Main Layout with Sidebar */}\n      <div className=\"flex\">\n        {/* App-specific Sidebar */}\n        <AppSidebar app={app} category={category} currentPage=\"Dashboard\" />\n\n        {/* Main Content Area */}\n        <div className=\"flex-1 bg-aura-dark\">\n          <div className=\"p-8\">\n            {/* Dashboard Header */}\n            <div className=\"mb-8\">\n              <h1 className=\"text-3xl font-bold mb-2\">Dashboard</h1>\n              <p className=\"text-gray-300\">Welcome back! Here's what's happening with your {app.name}.</p>\n            </div>\n\n            {/* Quick Stats Cards */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n              {app.features.map((feature, index) => (\n                <div \n                  key={index}\n                  className=\"bg-aura-dark-secondary rounded-lg p-6 border border-aura-gray hover:border-opacity-50 transition-all duration-200\"\n                  style={{ borderColor: `${category.color}20` }}\n                >\n                  <div className=\"flex items-center\">\n                    <div \n                      className=\"p-3 rounded-full mr-4\"\n                      style={{ \n                        backgroundColor: `${category.color}20`,\n                        color: category.color \n                      }}\n                    >\n                      <i className={`${app.icon} text-xl`}></i>\n                    </div>\n                    <div>\n                      <p className=\"text-2xl font-bold\">{(index + 1) * 1247}</p>\n                      <p className=\"text-gray-400 text-sm\">{feature}</p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Quick Actions Section */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n              <div className=\"bg-aura-dark-secondary rounded-lg p-6 border border-aura-gray\">\n                <h3 className=\"text-xl font-semibold mb-4\">Quick Actions</h3>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  {app.shortcuts.slice(0, 4).map((shortcut, index) => (\n                    <Button \n                      key={index}\n                      variant=\"outline\"\n                      className=\"p-4 h-auto flex flex-col items-center justify-center space-y-2 border-aura-gray hover:border-opacity-50\"\n                      style={{ \n                        borderColor: `${category.color}40`,\n                        color: category.color,\n                      }}\n                    >\n                      <i className=\"fas fa-plus text-lg\"></i>\n                      <span className=\"text-sm\">{shortcut}</span>\n                    </Button>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"bg-aura-dark-secondary rounded-lg p-6 border border-aura-gray\">\n                <h3 className=\"text-xl font-semibold mb-4\">Recent Activity</h3>\n                <div className=\"space-y-3\">\n                  {[\n                    { action: \"New record created\", time: \"2 minutes ago\" },\n                    { action: \"Report generated\", time: \"1 hour ago\" },\n                    { action: \"Data imported\", time: \"3 hours ago\" },\n                    { action: \"Settings updated\", time: \"1 day ago\" }\n                  ].map((activity, index) => (\n                    <div key={index} className=\"flex items-center justify-between py-2 border-b border-aura-gray/30 last:border-b-0\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div \n                          className=\"w-2 h-2 rounded-full\"\n                          style={{ backgroundColor: category.color }}\n                        ></div>\n                        <span className=\"text-sm\">{activity.action}</span>\n                      </div>\n                      <span className=\"text-xs text-gray-400\">{activity.time}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* App-specific Content Grid */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              <div className=\"lg:col-span-2 bg-aura-dark-secondary rounded-lg p-6 border border-aura-gray\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-xl font-semibold\">Overview Chart</h3>\n                  <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-400 hover:text-white\">\n                    View Details\n                  </Button>\n                </div>\n                <div className=\"h-64 bg-aura-dark rounded-lg flex items-center justify-center border border-aura-gray\">\n                  <div className=\"text-center\">\n                    <i \n                      className=\"fas fa-chart-line text-4xl mb-4\"\n                      style={{ color: category.color }}\n                    ></i>\n                    <p className=\"text-gray-400\">Interactive charts and analytics will be displayed here</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-aura-dark-secondary rounded-lg p-6 border border-aura-gray\">\n                <h3 className=\"text-xl font-semibold mb-4\">Key Metrics</h3>\n                <div className=\"space-y-4\">\n                  {app.features.slice(0, 3).map((feature, index) => (\n                    <div key={index} className=\"space-y-2\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span>{feature}</span>\n                        <span style={{ color: category.color }}>{85 + index * 5}%</span>\n                      </div>\n                      <div className=\"w-full bg-aura-gray rounded-full h-2\">\n                        <div \n                          className=\"h-2 rounded-full transition-all duration-300\"\n                          style={{ \n                            backgroundColor: category.color,\n                            width: `${85 + index * 5}%` \n                          }}\n                        ></div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":10822},"client/src/pages/category.tsx":{"content":"import { useParams } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type Category, type App } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowLeft } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\nexport default function CategoryPage() {\n  const { categoryId } = useParams<{ categoryId: string }>();\n\n  const { data: category, isLoading: categoryLoading } = useQuery<Category>({\n    queryKey: [\"/api/categories\", categoryId],\n  });\n\n  const { data: apps, isLoading: appsLoading } = useQuery<App[]>({\n    queryKey: [\"/api/apps\"],\n    select: (allApps: App[]) => allApps.filter(app => app.categoryId === categoryId),\n  });\n\n  if (categoryLoading || appsLoading) {\n    return (\n      <div className=\"min-h-screen bg-aura-dark pt-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <Skeleton className=\"h-10 w-32 mb-8\" />\n          <Skeleton className=\"h-12 w-64 mb-4\" />\n          <Skeleton className=\"h-6 w-96 mb-8\" />\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {Array.from({ length: 6 }).map((_, i) => (\n              <Skeleton key={i} className=\"h-48 rounded-xl\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!category) {\n    return (\n      <div className=\"min-h-screen bg-aura-dark pt-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <h1 className=\"text-2xl font-bold text-red-400 mb-4\">Category Not Found</h1>\n            <Link href=\"/\">\n              <Button>Back to Home</Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-aura-dark pt-20\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <Link href=\"/\">\n          <Button variant=\"ghost\" className=\"mb-8 text-gray-300 hover:text-white\">\n            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n            Back to Home\n          </Button>\n        </Link>\n\n        <div className=\"mb-8\">\n          <div className=\"flex items-center mb-4\">\n            <i className={`${category.icon} text-3xl mr-4`} style={{ color: category.color }}></i>\n            <h1 className=\"text-4xl font-bold\">{category.name}</h1>\n            <span \n              className=\"ml-4 text-black text-sm px-3 py-1 rounded-full font-medium\"\n              style={{ backgroundColor: category.color }}\n            >\n              {category.appCount} Apps\n            </span>\n          </div>\n          <p className=\"text-gray-300 text-lg\">{category.description}</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {apps?.map((app) => (\n            <Link key={app.id} href={`/app/${app.id}`}>\n              <div className=\"app-card bg-aura-dark-secondary rounded-xl p-6 cursor-pointer\">\n                <div className=\"flex items-center mb-4\">\n                  <i className={`${app.icon} text-2xl mr-3`} style={{ color: category.color }}></i>\n                  <h3 className=\"text-xl font-semibold\">{app.name}</h3>\n                </div>\n                <p className=\"text-gray-300 text-sm mb-4\">{app.description}</p>\n                <div className=\"space-y-2 text-sm\">\n                  {app.features.slice(0, 3).map((feature, index) => (\n                    <div key={index} className=\"flex justify-between items-center\">\n                      <span>{feature}</span>\n                      <i className=\"fas fa-arrow-right\" style={{ color: category.color }}></i>\n                    </div>\n                  ))}\n                  {app.features.length > 3 && (\n                    <div className=\"text-gray-400\">+{app.features.length - 3} more features</div>\n                  )}\n                </div>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4004},"client/src/pages/home.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { type Category, type Suite, type App } from \"@shared/schema\";\nimport SuiteCard from \"@/components/suite-card\";\nimport SearchBar from \"@/components/search-bar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Link } from \"wouter\";\n\nexport default function Home() {\n  const { data: categories, isLoading: categoriesLoading } = useQuery<Category[]>({\n    queryKey: [\"/api/categories\"],\n  });\n\n  const { data: apps, isLoading: appsLoading } = useQuery<App[]>({\n    queryKey: [\"/api/apps\"],\n  });\n\n  const { data: suites, isLoading: suitesLoading } = useQuery<Suite[]>({\n    queryKey: [\"/api/suites\"],\n  });\n\n  // Group apps by category\n  const appsByCategory = categories?.reduce((acc, category) => {\n    acc[category.id] = apps?.filter(app => app.categoryId === category.id) || [];\n    return acc;\n  }, {} as Record<string, App[]>) || {};\n\n  if (categoriesLoading || appsLoading || suitesLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-aura-dark via-aura-dark-secondary to-aura-dark\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20\">\n          <div className=\"text-center mb-16\">\n            <Skeleton className=\"h-16 w-96 mx-auto mb-6\" />\n            <Skeleton className=\"h-6 w-[600px] mx-auto mb-8\" />\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Skeleton className=\"h-12 w-32\" />\n              <Skeleton className=\"h-12 w-32\" />\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            {Array.from({ length: 12 }).map((_, i) => (\n              <Skeleton key={i} className=\"h-64 rounded-xl\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-aura-dark via-aura-dark-secondary to-aura-dark\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-16\">\n          <h1 className=\"text-5xl md:text-7xl font-bold mb-6 animate-float\">\n            Welcome to <span className=\"gradient-text\">AURA</span>\n          </h1>\n          <p className=\"text-xl text-gray-300 mb-8 max-w-3xl mx-auto\">\n            The next generation business suite with 80+ integrated applications.\n            Transform your workflow with our futuristic, AI-powered platform.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link href=\"/apps\">\n              <Button className=\"bg-aura-neon-blue hover:bg-blue-600 text-black px-8 py-3 rounded-lg font-semibold transition-all hover:shadow-neon-blue\">\n                View All Apps\n              </Button>\n            </Link>\n            <Button variant=\"outline\" className=\"border border-aura-neon-purple text-aura-neon-purple hover:bg-aura-neon-purple hover:text-black px-8 py-3 rounded-lg font-semibold transition-all hover:shadow-neon-purple\">\n              Watch Demo\n            </Button>\n          </div>\n        </div>\n\n        {/* Search Bar */}\n        <div className=\"mb-12\">\n          <SearchBar />\n        </div>\n\n        {/* Stats Summary */}\n        <div className=\"bg-aura-dark-secondary rounded-2xl p-8 mb-12 text-center border border-aura-gray\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div className=\"space-y-2\">\n              <h3 className=\"text-3xl font-bold gradient-text\">{apps?.length || 0}</h3>\n              <p className=\"text-gray-300\">Total Applications</p>\n            </div>\n            <div className=\"space-y-2\">\n              <h3 className=\"text-3xl font-bold gradient-text\">{categories?.length || 0}</h3>\n              <p className=\"text-gray-300\">Business Categories</p>\n            </div>\n            <div className=\"space-y-2\">\n              <h3 className=\"text-3xl font-bold gradient-text\">{suites?.length || 0}</h3>\n              <p className=\"text-gray-300\">Integrated Suites</p>\n            </div>\n          </div>\n        </div>\n\n        {/* All Apps Organized by Categories */}\n        <div className=\"space-y-16 mb-20\">\n          {categories?.map((category) => {\n            const categoryApps = appsByCategory[category.id] || [];\n            if (categoryApps.length === 0) return null;\n\n            return (\n              <div key={category.id} className=\"space-y-6\">\n                {/* Category Header */}\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <i className={`${category.icon} text-3xl`} style={{ color: category.color }}></i>\n                    <div>\n                      <h2 className=\"text-2xl font-bold\">{category.name}</h2>\n                      <p className=\"text-gray-300 text-sm\">{category.description}</p>\n                    </div>\n                    <span \n                      className=\"text-black text-xs px-3 py-1 rounded-full font-medium\"\n                      style={{ backgroundColor: category.color }}\n                    >\n                      {categoryApps.length} Apps\n                    </span>\n                  </div>\n                  <Link href={`/category/${category.id}`}>\n                    <Button \n                      variant=\"outline\" \n                      className=\"text-sm\"\n                      style={{ \n                        borderColor: category.color,\n                        color: category.color \n                      }}\n                    >\n                      View All <i className=\"fas fa-arrow-right ml-2\"></i>\n                    </Button>\n                  </Link>\n                </div>\n\n                {/* Apps Grid for this Category - Show ALL apps */}\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\">\n                  {categoryApps.map((app) => (\n                    <Link key={app.id} href={`/app/${app.id}`}>\n                      <div className=\"app-card bg-aura-dark-secondary rounded-lg p-6 cursor-pointer transition-all duration-300 border border-transparent hover:border-opacity-80 hover:shadow-lg hover:scale-105\" style={{ borderColor: `${category.color}40` }}>\n                        <div className=\"text-center\">\n                          <div \n                            className=\"w-12 h-12 rounded-xl mx-auto mb-4 flex items-center justify-center\"\n                            style={{ backgroundColor: `${category.color}20` }}\n                          >\n                            <i \n                              className={`${app.icon} text-xl`} \n                              style={{ color: category.color }}\n                            ></i>\n                          </div>\n                          <h3 className=\"text-sm font-semibold mb-2\">{app.name}</h3>\n                          <p className=\"text-xs text-gray-400 line-clamp-2 mb-3\">{app.description}</p>\n                          <div className=\"flex flex-wrap gap-1 justify-center\">\n                            {app.shortcuts.slice(0, 2).map((shortcut, idx) => (\n                              <span \n                                key={idx}\n                                className=\"text-xs px-2 py-1 rounded-full\"\n                                style={{ \n                                  backgroundColor: `${category.color}15`,\n                                  color: category.color \n                                }}\n                              >\n                                {shortcut}\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Suites Section */}\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl font-bold mb-4 gradient-text\">Integrated Suites</h2>\n          <p className=\"text-gray-300 max-w-2xl mx-auto\">\n            Pre-configured bundles of apps working seamlessly together for specific business needs\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n          {suites?.map((suite) => (\n            <SuiteCard key={suite.id} suite={suite} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":8567},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/layout.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Search } from \"lucide-react\";\nimport { ReactNode } from \"react\";\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  return (\n    <div className=\"min-h-screen bg-aura-dark\">\n      {/* Top Navigation */}\n      <nav className=\"fixed top-0 w-full z-50 glass-effect\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <Link href=\"/\">\n                  <span className=\"text-2xl font-bold gradient-text font-mono cursor-pointer\">AURA</span>\n                </Link>\n              </div>\n              <div className=\"hidden md:block ml-10\">\n                <div className=\"flex items-baseline space-x-4\">\n                  <Link href=\"/\" className=\"text-aura-neon-blue hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors\">\n                    Home\n                  </Link>\n                  <Link href=\"/apps\" className=\"text-gray-300 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors\">\n                    All Apps\n                  </Link>\n                  <a href=\"#\" className=\"text-gray-300 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors\">\n                    Suites\n                  </a>\n                  <a href=\"#\" className=\"text-gray-300 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors\">\n                    Pricing\n                  </a>\n                  <a href=\"#\" className=\"text-gray-300 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors\">\n                    Support\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"relative hidden sm:block\">\n                <input \n                  type=\"text\" \n                  placeholder=\"Search apps...\" \n                  className=\"bg-aura-dark-secondary border border-aura-gray rounded-lg px-4 py-2 pl-10 text-sm focus:outline-none focus:border-aura-neon-blue focus:shadow-neon-blue transition-all\"\n                />\n                <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n              </div>\n              <Button className=\"bg-aura-neon-blue hover:bg-blue-600 text-black px-4 py-2 rounded-lg font-medium transition-colors\">\n                Sign In\n              </Button>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Main Content */}\n      <main className=\"pt-16\">\n        {children}\n      </main>\n\n      {/* Footer */}\n      <footer className=\"bg-aura-dark-secondary border-t border-aura-gray\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            <div>\n              <span className=\"text-2xl font-bold gradient-text font-mono\">AURA</span>\n              <p className=\"text-gray-300 mt-4\">\n                The next generation business suite with 80+ integrated applications.\n              </p>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-4\">Products</h4>\n              <ul className=\"space-y-2 text-gray-300\">\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Sales Suite</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Marketing Suite</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Finance Suite</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">All Apps</a></li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-4\">Resources</h4>\n              <ul className=\"space-y-2 text-gray-300\">\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Documentation</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">API Reference</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Support</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Training</a></li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-4\">Company</h4>\n              <ul className=\"space-y-2 text-gray-300\">\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">About</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Careers</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Blog</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Contact</a></li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"border-t border-aura-gray mt-8 pt-8 text-center text-gray-400\">\n            <p>&copy; 2024 Aura Corporation. All rights reserved.</p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","size_bytes":5277},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\n\nconst ScrollArea = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, children, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={`relative overflow-hidden ${className}`}\n    {...props}\n  >\n    <div className=\"h-full w-full rounded-[inherit] overflow-y-auto scrollbar-thin scrollbar-thumb-aura-gray scrollbar-track-transparent\">\n      {children}\n    </div>\n  </div>\n))\nScrollArea.displayName = \"ScrollArea\"\n\nexport { ScrollArea }","size_bytes":509},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"server/storage_old.ts":{"content":"import { type Category, type App, type Suite, type InsertCategory, type InsertApp, type InsertSuite } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // Categories\n  getCategories(): Promise<Category[]>;\n  getCategoryById(id: string): Promise<Category | undefined>;\n  createCategory(category: InsertCategory): Promise<Category>;\n\n  // Apps\n  getApps(): Promise<App[]>;\n  getAppsByCategory(categoryId: string): Promise<App[]>;\n  getAppById(id: string): Promise<App | undefined>;\n  createApp(app: InsertApp): Promise<App>;\n  searchApps(query: string): Promise<App[]>;\n\n  // Suites\n  getSuites(): Promise<Suite[]>;\n  getSuiteById(id: string): Promise<Suite | undefined>;\n  createSuite(suite: InsertSuite): Promise<Suite>;\n}\n\nexport class MemStorage implements IStorage {\n  private categories: Map<string, Category>;\n  private apps: Map<string, App>;\n  private suites: Map<string, Suite>;\n\n  constructor() {\n    this.categories = new Map();\n    this.apps = new Map();\n    this.suites = new Map();\n    this.initializeData();\n  }\n\n  private initializeData() {\n    // Initialize categories\n    const categoriesData: Array<Omit<Category, 'id'>> = [\n      { name: \"Sales\", description: \"Complete sales automation and CRM solutions\", icon: \"fas fa-chart-line\", color: \"#00d4ff\", appCount: 8 },\n      { name: \"Marketing\", description: \"Comprehensive marketing automation suite\", icon: \"fas fa-bullhorn\", color: \"#8b5cf6\", appCount: 16 },\n      { name: \"Commerce\", description: \"Complete eCommerce platform solution\", icon: \"fas fa-shopping-cart\", color: \"#06ffa5\", appCount: 1 },\n      { name: \"Service\", description: \"Customer service and support tools\", icon: \"fas fa-headset\", color: \"#eab308\", appCount: 6 },\n      { name: \"Finance\", description: \"Complete financial management suite\", icon: \"fas fa-calculator\", color: \"#22c55e\", appCount: 10 },\n      { name: \"Email & Collaboration\", description: \"Complete collaboration and productivity suite\", icon: \"fas fa-envelope\", color: \"#3b82f6\", appCount: 20 },\n      { name: \"Human Resources\", description: \"Complete HR management platform\", icon: \"fas fa-users\", color: \"#ec4899\", appCount: 7 },\n      { name: \"Legal\", description: \"Legal and contract management tools\", icon: \"fas fa-gavel\", color: \"#f97316\", appCount: 2 },\n      { name: \"Security & IT\", description: \"Enterprise security and IT management\", icon: \"fas fa-shield-alt\", color: \"#ef4444\", appCount: 12 },\n      { name: \"BI & Analytics\", description: \"Business intelligence and analytics platform\", icon: \"fas fa-chart-bar\", color: \"#6366f1\", appCount: 4 },\n      { name: \"Project Management\", description: \"Complete project management suite\", icon: \"fas fa-tasks\", color: \"#14b8a6\", appCount: 3 },\n      { name: \"Developer Platforms\", description: \"Development tools and platforms\", icon: \"fas fa-code\", color: \"#a855f7\", appCount: 12 }\n    ];\n\n    categoriesData.forEach(cat => {\n      const id = randomUUID();\n      this.categories.set(id, { ...cat, id });\n    });\n\n    // Initialize apps for each category\n    this.initializeApps();\n    this.initializeSuites();\n  }\n\n  private initializeApps() {\n    const categories = Array.from(this.categories.values());\n    \n    const appsData: Array<Omit<App, 'id'>> = [\n      // Sales Apps\n      { name: \"CRM\", description: \"Comprehensive CRM platform\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-users\", features: [\"Lead Management\", \"Contact Management\", \"Deal Tracking\", \"Sales Analytics\"], shortcuts: [\"Dashboard\", \"Leads\", \"Contacts\", \"Deals\", \"Activities\", \"Reports\", \"Settings\"] },\n      { name: \"Bigin\", description: \"Simple CRM for small businesses\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-seedling\", features: [\"Pipeline Management\", \"Contact Organization\", \"Deal Insights\"], shortcuts: [\"Pipeline\", \"Contacts\", \"Deals\", \"Reports\"] },\n      { name: \"Sign\", description: \"Digital signature app\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-signature\", features: [\"Digital Signatures\", \"Document Templates\", \"Workflow Management\"], shortcuts: [\"Documents\", \"Templates\", \"Workflows\", \"Settings\"] },\n      { name: \"SalesIQ\", description: \"Live chat and visitor engagement\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-comments\", features: [\"Live Chat\", \"Visitor Tracking\", \"Lead Scoring\"], shortcuts: [\"Chat\", \"Visitors\", \"Analytics\", \"Settings\"] },\n      { name: \"Forms\", description: \"Online form builder\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-clipboard-list\", features: [\"Form Builder\", \"Response Collection\", \"Data Analysis\"], shortcuts: [\"Forms\", \"Responses\", \"Analytics\", \"Settings\"] },\n      { name: \"RouteIQ\", description: \"Sales map visualization and route planning\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-route\", features: [\"Route Optimization\", \"Territory Management\", \"Sales Mapping\"], shortcuts: [\"Routes\", \"Territories\", \"Maps\", \"Reports\"] },\n      { name: \"Bookings\", description: \"Appointment scheduling\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-calendar-alt\", features: [\"Online Scheduling\", \"Calendar Integration\", \"Automated Reminders\"], shortcuts: [\"Calendar\", \"Bookings\", \"Services\", \"Settings\"] },\n      { name: \"Thrive\", description: \"Loyalty and affiliate management\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-trophy\", features: [\"Loyalty Programs\", \"Affiliate Tracking\", \"Reward Management\"], shortcuts: [\"Programs\", \"Affiliates\", \"Rewards\", \"Analytics\"] },\n\n      // Marketing Apps\n      { name: \"Campaigns\", description: \"Email campaign creator\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-mail-bulk\", features: [\"Email Templates\", \"Campaign Management\", \"A/B Testing\"], shortcuts: [\"Campaigns\", \"Templates\", \"Analytics\", \"Settings\"] },\n      { name: \"Social\", description: \"Social media management\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-share-alt\", features: [\"Multi-platform Publishing\", \"Content Scheduling\", \"Social Analytics\"], shortcuts: [\"Posts\", \"Calendar\", \"Analytics\", \"Settings\"] },\n      { name: \"Survey\", description: \"Survey design and distribution\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-poll\", features: [\"Survey Builder\", \"Response Collection\", \"Data Visualization\"], shortcuts: [\"Surveys\", \"Responses\", \"Reports\", \"Settings\"] },\n      { name: \"Marketing Automation\", description: \"All-in-one marketing automation\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-robot\", features: [\"Workflow Automation\", \"Lead Nurturing\", \"Behavioral Triggers\"], shortcuts: [\"Workflows\", \"Leads\", \"Analytics\", \"Settings\"] },\n      { name: \"Sites\", description: \"Website builder\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-globe\", features: [\"Drag & Drop Builder\", \"Responsive Templates\", \"SEO Optimization\"], shortcuts: [\"Sites\", \"Templates\", \"SEO\", \"Analytics\"] },\n      { name: \"Webinar\", description: \"Webinar platform\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-video\", features: [\"Live Streaming\", \"Registration Management\", \"Recording\"], shortcuts: [\"Webinars\", \"Registrations\", \"Recordings\", \"Analytics\"] },\n      { name: \"PageSense\", description: \"Website conversion optimization\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-chart-line\", features: [\"A/B Testing\", \"Heatmaps\", \"Conversion Tracking\"], shortcuts: [\"Tests\", \"Heatmaps\", \"Analytics\", \"Settings\"] },\n      { name: \"LandingPage\", description: \"Landing page builder\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-window-maximize\", features: [\"Template Library\", \"Conversion Optimization\", \"Lead Capture\"], shortcuts: [\"Pages\", \"Templates\", \"Analytics\", \"Settings\"] },\n      { name: \"Domains\", description: \"Domain registration and DNS management\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-server\", features: [\"Domain Registration\", \"DNS Management\", \"SSL Certificates\"], shortcuts: [\"Domains\", \"DNS\", \"SSL\", \"Settings\"] },\n      { name: \"CommunitySpaces\", description: \"Online community platform\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-users\", features: [\"Forum Management\", \"Member Engagement\", \"Content Moderation\"], shortcuts: [\"Communities\", \"Members\", \"Posts\", \"Settings\"] },\n      { name: \"Publish\", description: \"Local business listings management\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-map-marked-alt\", features: [\"Listing Management\", \"Review Monitoring\", \"Local SEO\"], shortcuts: [\"Listings\", \"Reviews\", \"Analytics\", \"Settings\"] },\n      { name: \"Backstage\", description: \"Event management software\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-calendar-check\", features: [\"Event Planning\", \"Registration Management\", \"Ticketing\"], shortcuts: [\"Events\", \"Registrations\", \"Tickets\", \"Analytics\"] },\n\n      // Commerce Apps\n      { name: \"Commerce\", description: \"eCommerce platform\", categoryId: categories.find(c => c.name === \"Commerce\")!.id, icon: \"fas fa-store\", features: [\"Online Store\", \"Inventory Management\", \"Payment Processing\"], shortcuts: [\"Store\", \"Products\", \"Orders\", \"Analytics\", \"Settings\"] },\n\n      // Service Apps\n      { name: \"Desk\", description: \"Helpdesk software\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-life-ring\", features: [\"Ticket Management\", \"Knowledge Base\", \"Customer Support\"], shortcuts: [\"Tickets\", \"Knowledge Base\", \"Reports\", \"Settings\"] },\n      { name: \"Assist\", description: \"Remote support and access\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-hands-helping\", features: [\"Remote Desktop\", \"Screen Sharing\", \"File Transfer\"], shortcuts: [\"Sessions\", \"Computers\", \"Reports\", \"Settings\"] },\n      { name: \"FSM\", description: \"Field Service Management\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-tools\", features: [\"Work Order Management\", \"Technician Scheduling\", \"Inventory Tracking\"], shortcuts: [\"Work Orders\", \"Schedule\", \"Inventory\", \"Reports\"] },\n      { name: \"Lens\", description: \"Remote assistance with augmented reality\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-eye\", features: [\"AR Support\", \"Visual Assistance\", \"Real-time Collaboration\"], shortcuts: [\"Sessions\", \"Contacts\", \"Analytics\", \"Settings\"] },\n\n      // Finance Apps\n      { name: \"Books\", description: \"Accounting platform\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-book\", features: [\"Double-entry Accounting\", \"Financial Reports\", \"Tax Management\"], shortcuts: [\"Dashboard\", \"Transactions\", \"Reports\", \"Settings\"] },\n      { name: \"Payroll\", description: \"Payroll processing software\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-money-check-alt\", features: [\"Salary Processing\", \"Tax Calculations\", \"Compliance Management\"], shortcuts: [\"Employees\", \"Payroll\", \"Reports\", \"Settings\"] },\n      { name: \"Expense\", description: \"Expense reporting\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-receipt\", features: [\"Expense Tracking\", \"Receipt Management\", \"Approval Workflows\"], shortcuts: [\"Expenses\", \"Reports\", \"Approvals\", \"Settings\"] },\n      { name: \"Inventory\", description: \"Stock and inventory control\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-boxes\", features: [\"Stock Management\", \"Warehouse Tracking\", \"Order Fulfillment\"], shortcuts: [\"Items\", \"Warehouses\", \"Orders\", \"Reports\"] },\n      { name: \"Billing\", description: \"End-to-end billing solution\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-file-invoice-dollar\", features: [\"Recurring Billing\", \"Payment Processing\", \"Revenue Recognition\"], shortcuts: [\"Subscriptions\", \"Invoices\", \"Payments\", \"Analytics\"] },\n      { name: \"Invoice\", description: \"Free invoicing solution\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-file-invoice\", features: [\"Invoice Creation\", \"Payment Tracking\", \"Client Management\"], shortcuts: [\"Invoices\", \"Clients\", \"Payments\", \"Reports\"] },\n      { name: \"Practice\", description: \"Practice management for accounting firms\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-briefcase\", features: [\"Client Management\", \"Time Tracking\", \"Workflow Management\"], shortcuts: [\"Clients\", \"Projects\", \"Time\", \"Reports\"] },\n      { name: \"Checkout\", description: \"Online payment page collector\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-credit-card\", features: [\"Payment Pages\", \"Checkout Flows\", \"Payment Analytics\"], shortcuts: [\"Pages\", \"Payments\", \"Analytics\", \"Settings\"] },\n      { name: \"Payments\", description: \"Unified payment solution\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-wallet\", features: [\"Payment Gateway\", \"Multi-currency Support\", \"Fraud Protection\"], shortcuts: [\"Transactions\", \"Gateways\", \"Analytics\", \"Settings\"] },\n\n      // Email & Collaboration Apps (first 10)\n      { name: \"Mail\", description: \"Secure email service\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-envelope\", features: [\"Secure Email\", \"Calendar Integration\", \"Contact Management\"], shortcuts: [\"Inbox\", \"Calendar\", \"Contacts\", \"Settings\"] },\n      { name: \"WorkDrive\", description: \"Online file management\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-cloud\", features: [\"File Storage\", \"Team Collaboration\", \"Version Control\"], shortcuts: [\"Files\", \"Shared\", \"Recent\", \"Settings\"] },\n      { name: \"Connect\", description: \"Employee experience platform\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-network-wired\", features: [\"Social Networking\", \"Employee Engagement\", \"Communication\"], shortcuts: [\"Feed\", \"Groups\", \"Events\", \"Settings\"] },\n      { name: \"Cliq\", description: \"Team chat\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-comment-dots\", features: [\"Team Messaging\", \"File Sharing\", \"Video Calls\"], shortcuts: [\"Chats\", \"Channels\", \"Calls\", \"Settings\"] },\n      { name: \"ZeptoMail\", description: \"Transactional email sending service\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-paper-plane\", features: [\"Email API\", \"Delivery Analytics\", \"Template Management\"], shortcuts: [\"Emails\", \"Templates\", \"Analytics\", \"Settings\"] },\n      { name: \"Meeting\", description: \"Online meeting and webinar software\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-video\", features: [\"Video Conferencing\", \"Screen Sharing\", \"Recording\"], shortcuts: [\"Meetings\", \"Schedule\", \"Recordings\", \"Settings\"] },\n      { name: \"Learn\", description: \"Knowledge and learning management\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-graduation-cap\", features: [\"Course Creation\", \"Learning Paths\", \"Progress Tracking\"], shortcuts: [\"Courses\", \"Progress\", \"Reports\", \"Settings\"] },\n      { name: \"TeamInbox\", description: \"Shared inboxes for teams\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-inbox\", features: [\"Shared Email Management\", \"Team Collaboration\", \"Ticket Assignment\"], shortcuts: [\"Inbox\", \"Teams\", \"Reports\", \"Settings\"] },\n      { name: \"Office Integrator\", description: \"Built-in document editors\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-file-alt\", features: [\"Document Editing\", \"Real-time Collaboration\", \"Format Support\"], shortcuts: [\"Documents\", \"Recent\", \"Shared\", \"Settings\"] },\n      { name: \"Writer\", description: \"Word processor\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-pen\", features: [\"Document Creation\", \"Collaboration\", \"Templates\"], shortcuts: [\"Documents\", \"Templates\", \"Recent\", \"Settings\"] },\n\n      // Human Resources Apps\n      { name: \"People\", description: \"HR process management\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-user-tie\", features: [\"Employee Management\", \"Performance Reviews\", \"Onboarding\"], shortcuts: [\"Employees\", \"Performance\", \"Onboarding\", \"Reports\"] },\n      { name: \"Recruit\", description: \"Recruiting and hiring platform\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-search\", features: [\"Job Posting\", \"Candidate Management\", \"Interview Scheduling\"], shortcuts: [\"Jobs\", \"Candidates\", \"Interviews\", \"Reports\"] },\n      { name: \"Workerly\", description: \"Temporary staffing management\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-clock\", features: [\"Staff Scheduling\", \"Time Tracking\", \"Payroll Integration\"], shortcuts: [\"Staff\", \"Schedule\", \"Timesheets\", \"Reports\"] },\n      { name: \"Shifts\", description: \"Employee scheduling and time tracking\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-calendar-times\", features: [\"Shift Scheduling\", \"Time Clock\", \"Attendance Tracking\"], shortcuts: [\"Schedule\", \"Time Clock\", \"Attendance\", \"Reports\"] },\n\n      // Legal Apps\n      { name: \"Contracts\", description: \"Contract lifecycle management\", categoryId: categories.find(c => c.name === \"Legal\")!.id, icon: \"fas fa-file-contract\", features: [\"Contract Creation\", \"Approval Workflows\", \"Compliance Tracking\"], shortcuts: [\"Contracts\", \"Templates\", \"Approvals\", \"Reports\"] },\n\n      // Security & IT Apps (first 8)\n      { name: \"Creator\", description: \"Custom business app platform\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-cogs\", features: [\"App Development\", \"Workflow Automation\", \"Data Management\"], shortcuts: [\"Apps\", \"Workflows\", \"Data\", \"Settings\"] },\n      { name: \"Vault\", description: \"Online password manager\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-lock\", features: [\"Password Storage\", \"Secure Sharing\", \"Access Control\"], shortcuts: [\"Passwords\", \"Sharing\", \"Reports\", \"Settings\"] },\n      { name: \"eProtect\", description: \"Email security and archiving\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-shield-alt\", features: [\"Email Security\", \"Threat Protection\", \"Archiving\"], shortcuts: [\"Security\", \"Archive\", \"Reports\", \"Settings\"] },\n      { name: \"Directory\", description: \"Workforce identity and access management\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-address-book\", features: [\"Identity Management\", \"Access Control\", \"Single Sign-On\"], shortcuts: [\"Users\", \"Groups\", \"Access\", \"Settings\"] },\n      { name: \"Catalyst\", description: \"Pro-code app deployment platform\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-rocket\", features: [\"App Deployment\", \"Serverless Functions\", \"Database Management\"], shortcuts: [\"Apps\", \"Functions\", \"Database\", \"Analytics\"] },\n      { name: \"RPA\", description: \"Robotic Process Automation\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-robot\", features: [\"Process Automation\", \"Bot Management\", \"Workflow Optimization\"], shortcuts: [\"Bots\", \"Workflows\", \"Analytics\", \"Settings\"] },\n      { name: \"QEngine\", description: \"Test automation software\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-vial\", features: [\"Automated Testing\", \"Test Management\", \"Quality Assurance\"], shortcuts: [\"Tests\", \"Results\", \"Reports\", \"Settings\"] },\n      { name: \"OneAuth\", description: \"Multi-factor authenticator\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-key\", features: [\"Two-Factor Authentication\", \"Security Tokens\", \"Access Control\"], shortcuts: [\"Tokens\", \"Devices\", \"Security\", \"Settings\"] },\n\n      // BI & Analytics Apps\n      { name: \"Analytics\", description: \"Self-service BI and analytics\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-chart-area\", features: [\"Data Visualization\", \"Report Building\", \"Dashboard Creation\"], shortcuts: [\"Dashboards\", \"Reports\", \"Data\", \"Settings\"] },\n      { name: \"IoT\", description: \"IoT analytics for operational intelligence\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-wifi\", features: [\"Device Management\", \"Data Collection\", \"Real-time Analytics\"], shortcuts: [\"Devices\", \"Data\", \"Analytics\", \"Settings\"] },\n      { name: \"DataPrep\", description: \"ETL tool for data integration\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-database\", features: [\"Data Integration\", \"ETL Pipelines\", \"Data Transformation\"], shortcuts: [\"Pipelines\", \"Data\", \"Transforms\", \"Settings\"] },\n      { name: \"Embedded BI\", description: \"Embedded and white-label BI solutions\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-chart-pie\", features: [\"Embedded Analytics\", \"White-label Solutions\", \"API Integration\"], shortcuts: [\"Embeds\", \"APIs\", \"Analytics\", \"Settings\"] },\n\n      // Project Management Apps\n      { name: \"Projects\", description: \"Project management and tracking\", categoryId: categories.find(c => c.name === \"Project Management\")!.id, icon: \"fas fa-project-diagram\", features: [\"Project Planning\", \"Task Management\", \"Resource Allocation\"], shortcuts: [\"Projects\", \"Tasks\", \"Resources\", \"Reports\"] },\n      { name: \"Sprints\", description: \"Planning tool for scrum teams\", categoryId: categories.find(c => c.name === \"Project Management\")!.id, icon: \"fas fa-running\", features: [\"Sprint Planning\", \"Backlog Management\", \"Velocity Tracking\"], shortcuts: [\"Sprints\", \"Backlog\", \"Reports\", \"Settings\"] },\n      { name: \"BugTracker\", description: \"Bug tracking software\", categoryId: categories.find(c => c.name === \"Project Management\")!.id, icon: \"fas fa-bug\", features: [\"Issue Tracking\", \"Bug Reports\", \"Resolution Management\"], shortcuts: [\"Issues\", \"Reports\", \"Analytics\", \"Settings\"] },\n\n      // Developer Platforms Apps (first 8)\n      { name: \"Flow\", description: \"Workflow automation and integration\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-sitemap\", features: [\"Workflow Automation\", \"API Integration\", \"Process Management\"], shortcuts: [\"Flows\", \"Integrations\", \"Analytics\", \"Settings\"] },\n      { name: \"Tables\", description: \"Work management tool\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-table\", features: [\"Data Management\", \"Collaboration\", \"Automation\"], shortcuts: [\"Tables\", \"Views\", \"Automations\", \"Settings\"] },\n      { name: \"Notebook\", description: \"Note-taking app\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-sticky-note\", features: [\"Note Organization\", \"Rich Text Editing\", \"Collaboration\"], shortcuts: [\"Notes\", \"Notebooks\", \"Search\", \"Settings\"] },\n      { name: \"Show\", description: \"Presentation software\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-presentation\", features: [\"Slide Creation\", \"Templates\", \"Collaboration\"], shortcuts: [\"Presentations\", \"Templates\", \"Recent\", \"Settings\"] },\n      { name: \"Sheet\", description: \"Spreadsheet software\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-file-excel\", features: [\"Spreadsheet Creation\", \"Data Analysis\", \"Collaboration\"], shortcuts: [\"Sheets\", \"Recent\", \"Templates\", \"Settings\"] },\n      { name: \"Office Suite\", description: \"Collaborative work platform\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-briefcase\", features: [\"Document Management\", \"Team Collaboration\", \"Integration\"], shortcuts: [\"Documents\", \"Teams\", \"Recent\", \"Settings\"] },\n      { name: \"Calendar\", description: \"Online business calendar\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-calendar\", features: [\"Event Scheduling\", \"Meeting Management\", \"Team Calendars\"], shortcuts: [\"Calendar\", \"Events\", \"Tasks\", \"Settings\"] },\n      { name: \"ToDo\", description: \"Collaborative task management\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-check-circle\", features: [\"Task Management\", \"Team Collaboration\", \"Project Organization\"], shortcuts: [\"Tasks\", \"Projects\", \"Reports\", \"Settings\"] }\n    ];\n\n    appsData.forEach(app => {\n      const id = randomUUID();\n      this.apps.set(id, { ...app, id });\n    });\n  }\n\n  private initializeSuites() {\n    const suitesData: Array<Omit<Suite, 'id'>> = [\n      { name: \"CRM Plus\", description: \"Unified customer experience platform\", color: \"#00d4ff\", appIds: [] },\n      { name: \"Service Plus\", description: \"Unified customer service platform\", color: \"#eab308\", appIds: [] },\n      { name: \"Finance Plus\", description: \"All-in-one finance and operations suite\", color: \"#22c55e\", appIds: [] },\n      { name: \"People Plus\", description: \"Comprehensive HR platform\", color: \"#ec4899\", appIds: [] },\n      { name: \"Workplace\", description: \"Team productivity and collaboration suite\", color: \"#3b82f6\", appIds: [] },\n      { name: \"Marketing Plus\", description: \"Unified marketing platform\", color: \"#8b5cf6\", appIds: [] },\n      { name: \"Projects Plus\", description: \"Unified project management platform\", color: \"#14b8a6\", appIds: [] }\n    ];\n\n    suitesData.forEach(suite => {\n      const id = randomUUID();\n      this.suites.set(id, { ...suite, id });\n    });\n  }\n\n  // Categories\n  async getCategories(): Promise<Category[]> {\n    return Array.from(this.categories.values());\n  }\n\n  async getCategoryById(id: string): Promise<Category | undefined> {\n    return this.categories.get(id);\n  }\n\n  async createCategory(category: InsertCategory): Promise<Category> {\n    const id = randomUUID();\n    const newCategory: Category = { ...category, id, appCount: category.appCount || 0 };\n    this.categories.set(id, newCategory);\n    return newCategory;\n  }\n\n  // Apps\n  async getApps(): Promise<App[]> {\n    return Array.from(this.apps.values());\n  }\n\n  async getAppsByCategory(categoryId: string): Promise<App[]> {\n    return Array.from(this.apps.values()).filter(app => app.categoryId === categoryId);\n  }\n\n  async getAppById(id: string): Promise<App | undefined> {\n    return this.apps.get(id);\n  }\n\n  async createApp(app: InsertApp): Promise<App> {\n    const id = randomUUID();\n    const newApp: App = { ...app, id };\n    this.apps.set(id, newApp);\n    return newApp;\n  }\n\n  async searchApps(query: string): Promise<App[]> {\n    const lowercaseQuery = query.toLowerCase();\n    return Array.from(this.apps.values()).filter(app => \n      app.name.toLowerCase().includes(lowercaseQuery) ||\n      app.description.toLowerCase().includes(lowercaseQuery)\n    );\n  }\n\n  // Suites\n  async getSuites(): Promise<Suite[]> {\n    return Array.from(this.suites.values());\n  }\n\n  async getSuiteById(id: string): Promise<Suite | undefined> {\n    return this.suites.get(id);\n  }\n\n  async createSuite(suite: InsertSuite): Promise<Suite> {\n    const id = randomUUID();\n    const newSuite: Suite = { ...suite, id };\n    this.suites.set(id, newSuite);\n    return newSuite;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":27684},"client/src/components/app-sidebar.tsx":{"content":"import { type App, type Category } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Link } from \"wouter\";\nimport { \n  ChevronDown, \n  ChevronRight, \n  Home, \n  Settings,\n  BarChart3,\n  Users,\n  FileText,\n  Calendar,\n  MessageSquare,\n  Phone,\n  Mail,\n  CreditCard,\n  Package,\n  Truck,\n  Shield,\n  Database,\n  Code,\n  Zap,\n  Globe,\n  Camera,\n  Video,\n  Headphones,\n  Monitor,\n  Smartphone,\n  Cloud,\n  Share2,\n  Edit3,\n  BookOpen,\n  GraduationCap,\n  Target,\n  PieChart,\n  TrendingUp,\n  TrendingDown,\n  Search,\n  Filter,\n  Upload,\n  Download,\n  Lock,\n  Key,\n  UserCheck,\n  Wifi,\n  Server,\n  HardDrive,\n  Layers,\n  GitBranch,\n  PlayCircle,\n  PauseCircle,\n  RotateCcw,\n  RefreshCw,\n  Eye,\n  EyeOff,\n  MousePointer,\n  Palette,\n  Brush,\n  Image,\n  FileImage,\n  Music,\n  FileMusic,\n  Film,\n  FileVideo,\n  Mic,\n  Volume2,\n  Clock,\n  Timer,\n  MapPin,\n  Map,\n  Navigation,\n  Compass,\n  Star,\n  Heart,\n  ThumbsUp,\n  MessageCircle,\n  Send,\n  Inbox,\n  Archive,\n  Tag,\n  Bookmark,\n  Flag,\n  Bell,\n  AlertCircle,\n  CheckCircle,\n  XCircle,\n  Plus,\n  Minus,\n  X,\n  Check,\n  ArrowRight,\n  ArrowLeft,\n  ArrowUp,\n  ArrowDown,\n  ExternalLink,\n  Paperclip,\n  Scissors,\n  Copy,\n  Clipboard,\n  Save,\n  FolderOpen,\n  Folder,\n  Files,\n  FileCheck,\n  FilePlus,\n  FileX,\n  Grid,\n  List,\n  Table,\n  Columns,\n  Rows,\n  MoreHorizontal,\n  MoreVertical,\n  Menu,\n  Sidebar,\n  Layout,\n  Maximize2,\n  Minimize2,\n  Fullscreen,\n  Crosshair,\n  Move,\n  RotateCw,\n  FlipHorizontal,\n  FlipVertical,\n  Crop,\n  ZoomIn,\n  ZoomOut,\n  Focus,\n  Aperture,\n  Sliders,\n  ToggleLeft,\n  ToggleRight,\n  Power,\n  PowerOff,\n  Plug,\n  Unplug,\n  Battery,\n  BatteryLow,\n  Cpu,\n  MemoryStick,\n  HardDrive as Storage,\n  Router,\n  Bluetooth,\n  Printer,\n  Webcam,\n  Gamepad2,\n  Joystick,\n  Keyboard,\n  Mouse,\n  Tablet,\n  Laptop,\n  Tv,\n  Watch,\n  Radio,\n  Satellite,\n  Bot,\n  DollarSign,\n  Building,\n  Building2,\n  Hash,\n  Calculator,\n  Link2,\n  User\n} from \"lucide-react\";\nimport { useState } from \"react\";\n\ninterface AppSidebarProps {\n  app: App;\n  category: Category;\n  currentPage?: string;\n}\n\n// App-specific navigation structure based on Zoho.com\nconst getAppNavigation = (appName: string) => {\n  const navigationMap: Record<string, any> = {\n    \"CRM\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Dashboard\", \"Today's Activities\", \"Recent Items\", \"My CRM Home\", \"Home Page Designer\"]\n        },\n        {\n          title: \"Leads\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Leads\", \"Today's Leads\", \"Recently Created Leads\", \"Recently Modified Leads\", \"Overdue Leads\", \"My Leads\", \"Converted Leads\", \"Unqualified Leads\"]\n        },\n        {\n          title: \"Contacts\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Contacts\", \"Today's Contacts\", \"Recently Created Contacts\", \"Recently Modified Contacts\", \"My Contacts\", \"Mailing Labels\", \"Untouched Contacts\"]\n        },\n        {\n          title: \"Accounts\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Accounts\", \"Today's Accounts\", \"Recently Created Accounts\", \"Recently Modified Accounts\", \"My Accounts\", \"Untouched Accounts\"]\n        },\n        {\n          title: \"Deals\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"All Deals\", \"Today's Deals\", \"Recently Created Deals\", \"Recently Modified Deals\", \"My Deals\", \"Closing This Month\", \"Overdue Deals\", \"Won Deals\", \"Lost Deals\"]\n        },\n        {\n          title: \"Tasks\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"All Tasks\", \"Today's Tasks\", \"Yesterday's Tasks\", \"This Week's Tasks\", \"Overdue Tasks\", \"Recently Created Tasks\", \"Recently Modified Tasks\", \"My Tasks\", \"Recurring Tasks\"]\n        },\n        {\n          title: \"Events\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"All Events\", \"Today's Events\", \"This Week's Events\", \"Recently Created Events\", \"Recently Modified Events\", \"My Events\", \"Recurring Events\"]\n        },\n        {\n          title: \"Calls\",\n          icon: <Phone className=\"w-4 h-4\" />,\n          items: [\"All Calls\", \"Today's Calls\", \"Overdue Calls\", \"Recently Created Calls\", \"Recently Modified Calls\", \"My Calls\", \"Recurring Calls\"]\n        },\n        {\n          title: \"Campaigns\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"All Campaigns\", \"Recently Created Campaigns\", \"Recently Modified Campaigns\", \"My Campaigns\", \"Active Campaigns\", \"Inactive Campaigns\", \"Archived Campaigns\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"All Reports\", \"Lead Reports\", \"Contact Reports\", \"Account Reports\", \"Deal Reports\", \"Activity Reports\", \"Campaign Reports\", \"Forecast Reports\", \"Analytics\"]\n        },\n        {\n          title: \"Dashboards\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"All Dashboards\", \"Sales Dashboard\", \"Marketing Dashboard\", \"CEO Dashboard\", \"Sales Manager Dashboard\", \"My Dashboard\"]\n        },\n        {\n          title: \"Forecasts\",\n          icon: <TrendingUp className=\"w-4 h-4\" />,\n          items: [\"Forecasts\", \"Forecast Settings\", \"Territory Forecasts\", \"User Forecasts\"]\n        },\n        {\n          title: \"Products\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"All Products\", \"Recently Created Products\", \"Recently Modified Products\", \"My Products\", \"Active Products\", \"Inactive Products\"]\n        },\n        {\n          title: \"Price Books\",\n          icon: <DollarSign className=\"w-4 h-4\" />,\n          items: [\"All Price Books\", \"Recently Created Price Books\", \"Recently Modified Price Books\", \"My Price Books\", \"Active Price Books\"]\n        },\n        {\n          title: \"Quotes\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Quotes\", \"Recently Created Quotes\", \"Recently Modified Quotes\", \"My Quotes\", \"Accepted Quotes\", \"Declined Quotes\", \"Draft Quotes\"]\n        },\n        {\n          title: \"Sales Orders\",\n          icon: <Truck className=\"w-4 h-4\" />,\n          items: [\"All Sales Orders\", \"Recently Created Sales Orders\", \"Recently Modified Sales Orders\", \"My Sales Orders\", \"Confirmed Sales Orders\", \"Delivered Sales Orders\"]\n        },\n        {\n          title: \"Purchase Orders\",\n          icon: <Truck className=\"w-4 h-4\" />,\n          items: [\"All Purchase Orders\", \"Recently Created Purchase Orders\", \"Recently Modified Purchase Orders\", \"My Purchase Orders\", \"Delivered Purchase Orders\"]\n        },\n        {\n          title: \"Invoices\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Invoices\", \"Recently Created Invoices\", \"Recently Modified Invoices\", \"My Invoices\", \"Sent Invoices\", \"Paid Invoices\", \"Overdue Invoices\"]\n        },\n        {\n          title: \"Cases\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"All Cases\", \"Today's Cases\", \"Recently Created Cases\", \"Recently Modified Cases\", \"My Cases\", \"Open Cases\", \"On Hold Cases\", \"Escalated Cases\", \"Closed Cases\"]\n        },\n        {\n          title: \"Solutions\",\n          icon: <BookOpen className=\"w-4 h-4\" />,\n          items: [\"All Solutions\", \"Recently Created Solutions\", \"Recently Modified Solutions\", \"My Solutions\", \"Published Solutions\", \"Draft Solutions\"]\n        },\n        {\n          title: \"Vendors\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Vendors\", \"Recently Created Vendors\", \"Recently Modified Vendors\", \"My Vendors\", \"Active Vendors\", \"Inactive Vendors\"]\n        },\n        {\n          title: \"Documents\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"All Documents\", \"Recently Created Documents\", \"Recently Modified Documents\", \"My Documents\", \"Folders\"]\n        },\n        {\n          title: \"Feeds\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"What I Follow\", \"Company Updates\", \"My Posts\", \"All Posts\", \"Recent Activities\"]\n        },\n        {\n          title: \"Recycle Bin\",\n          icon: <Archive className=\"w-4 h-4\" />,\n          items: [\"Deleted Leads\", \"Deleted Contacts\", \"Deleted Accounts\", \"Deleted Deals\", \"Deleted Activities\", \"Deleted Records\"]\n        }\n      ]\n    },\n    \"Bigin\": {\n      sections: [\n        {\n          title: \"Pipelines\",\n          icon: <GitBranch className=\"w-4 h-4\" />,\n          items: [\"Team Pipelines\", \"Sub-Pipelines\", \"Sales Pipeline\", \"Customer Support Pipelines\", \"Stage Automation\", \"Collapsible Stages\"]\n        },\n        {\n          title: \"Contacts\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Customer Data\", \"Prospect Management\", \"Contact Details\", \"Associated Deals\", \"Lead Conversion\", \"Custom Contact Fields\", \"Activities History\"]\n        },\n        {\n          title: \"Companies\",\n          icon: <Building2 className=\"w-4 h-4\" />,\n          items: [\"Business Partners\", \"Company Profiles\", \"Associated Contacts\", \"Business Relationships\", \"Company Pipelines\"]\n        },\n        {\n          title: \"Products\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Product Catalog\", \"Services Management\", \"Product Lifecycle\", \"Pricing & Inventory\", \"Product Records\", \"Custom Product Fields\"]\n        },\n        {\n          title: \"Activities\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Tasks & Events\", \"Calls Scheduling\", \"Calendar Integration\", \"Follow-up Reminders\", \"Activity Notifications\", \"Call Logging\", \"Meeting Scheduling\"]\n        },\n        {\n          title: \"Dashboards\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Goal Setting\", \"Goal Tracking\", \"Business Insights\", \"Performance Metrics\", \"Custom Reporting\", \"Data Visualization\", \"Progress Monitoring\"]\n        },\n        {\n          title: \"Messages\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Lead Capture\", \"Customer Communication\", \"Chat History\", \"Multi-channel Messaging\", \"WhatsApp Integration\", \"Communication Logs\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Email Workflows\", \"Stage Automation\", \"Booking Pages\", \"LeadChain Integration\", \"Marketing Automation\", \"Workflow Builder\"]\n        },\n        {\n          title: \"Integrations\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"Zoho SalesIQ\", \"Instagram Integration\", \"Facebook Integration\", \"LinkedIn Integration\", \"TikTok Integration\", \"Enhanced Forms\"]\n        },\n        {\n          title: \"Mobile Features\",\n          icon: <Smartphone className=\"w-4 h-4\" />,\n          items: [\"Business Card Scanner\", \"Offline Access\", \"Push Notifications\", \"Touch ID Security\", \"Dark Mode\", \"Calendar View\"]\n        }\n      ]\n    },\n    \"Books\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Dashboard\", \"Getting Started\", \"Announcements\", \"Recent Updates\", \"Custom Dashboards\"]\n        },\n        {\n          title: \"Sales\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Customers\", \"Invoices\", \"Sales Orders\", \"Quotes\", \"Delivery Challans\", \"Sales Receipts\", \"Credit Notes\", \"Payments Received\", \"Retainer Invoices\"]\n        },\n        {\n          title: \"Purchases\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Vendors\", \"Bills\", \"Purchase Orders\", \"Purchase Receives\", \"Vendor Credits\", \"Payments Made\", \"Expenses\"]\n        },\n        {\n          title: \"Items\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Items\", \"Price Lists\", \"Inventory Adjustments\", \"Composite Items\", \"Item Groups\"]\n        },\n        {\n          title: \"Banking\",\n          icon: <Building2 className=\"w-4 h-4\" />,\n          items: [\"Bank Accounts\", \"Deposits\", \"Withdrawals\", \"Bank Reconciliation\", \"Rules\"]\n        },\n        {\n          title: \"Accountant\",\n          icon: <Calculator className=\"w-4 h-4\" />,\n          items: [\"Chart of Accounts\", \"Manual Journals\", \"Bulk Updates\", \"Currencies\", \"Opening Balances\"]\n        },\n        {\n          title: \"Projects\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Projects\", \"Time Tracking\", \"Project Expenses\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Financial Reports\", \"Sales Reports\", \"Purchase Reports\", \"Tax Reports\", \"Inventory Reports\", \"Account Reports\", \"Project Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"More\",\n          icon: <MoreHorizontal className=\"w-4 h-4\" />,\n          items: [\"Custom Modules\", \"Retainer Invoices\", \"Documents\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Organization Profile\", \"Users & Roles\", \"General Preferences\", \"Taxes\", \"Templates\", \"Online Payments\", \"Email Settings\", \"Import/Export\", \"Extensions\", \"Backup\"]\n        }\n      ]\n    },\n    \"Campaigns\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Campaign Analytics\", \"Performance Overview\", \"Customized Dashboard\", \"Recent Activity\"]\n        },\n        {\n          title: \"Campaigns\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Email Campaigns\", \"SMS Campaigns\", \"A/B Testing\", \"Event Platform Integration\", \"Send Immediately\", \"Schedule Campaigns\", \"Batch Sending\"]\n        },\n        {\n          title: \"Contacts\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"List Management\", \"Dynamic Segments\", \"Exclusion Lists\", \"Zoho CRM Sync\", \"Custom Fields\", \"Signup Forms\", \"Permission-based Marketing\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Drip Campaigns\", \"Workflow Builder\", \"Lead Scoring\", \"Triggered Actions\", \"Behavior-based Sequences\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <Palette className=\"w-4 h-4\" />,\n          items: [\"Mobile-responsive Templates\", \"Custom HTML\", \"Drag-and-drop Builder\", \"Image Editing\", \"Merge Tags\", \"Template Library\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Real-time Analytics\", \"A/B Test Results\", \"Litmus Integration\", \"Campaign Performance\", \"Version History\"]\n        },\n        {\n          title: \"Social Integration\",\n          icon: <Share2 className=\"w-4 h-4\" />,\n          items: [\"Facebook Promotion\", \"Twitter Integration\", \"LinkedIn Sharing\", \"Social Media Analytics\"]\n        },\n        {\n          title: \"Integrations\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"Zoho Ecosystem\", \"WooCommerce\", \"Shopify\", \"Zapier Integration\", \"50+ App Integrations\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Dashboard Customization\", \"Sender Authentication\", \"Data Management\", \"Team Collaboration\", \"Template Management\"]\n        }\n      ]\n    },\n    \"Desk\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"The HQ\", \"My Dashboard\", \"Team Dashboard\", \"Getting Started\", \"Recent Activity\"]\n        },\n        {\n          title: \"Tickets\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"My Tickets\", \"All Tickets\", \"Ticket Views\", \"Blueprints\", \"Assignment Rules\", \"Escalation Rules\", \"Time Tracking\"]\n        },\n        {\n          title: \"Contacts\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Contacts\", \"Accounts\", \"Contact Views\", \"Account Views\"]\n        },\n        {\n          title: \"Knowledge Base\",\n          icon: <BookOpen className=\"w-4 h-4\" />,\n          items: [\"Articles\", \"Categories\", \"Community Forums\", \"Help Center\", \"ASAP\", \"Multilingual Support\"]\n        },\n        {\n          title: \"Channels\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Email Integration\", \"Live Chat\", \"Phone Integration\", \"Social Media\", \"WhatsApp Business\", \"Web Forms\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"The HQ Dashboard\", \"Ticket Status Dashboard\", \"Agent Performance\", \"Customer Satisfaction\", \"Custom Dashboards\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Standard Reports\", \"Custom Reports\", \"Scheduled Reports\", \"Performance Metrics\", \"Trend Analysis\"]\n        },\n        {\n          title: \"AI & Automation\",\n          icon: <Bot className=\"w-4 h-4\" />,\n          items: [\"Zia AI Assistant\", \"Sentiment Analysis\", \"Answer Bot\", \"Workflows\", \"Macros\", \"Custom Functions\"]\n        },\n        {\n          title: \"Setup\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Users & Roles\", \"Departments\", \"Products\", \"Custom Fields\", \"Layouts\", \"Email Templates\", \"Integrations\", \"Extensions\"]\n        }\n      ]\n    },\n    \"Mail\": {\n      sections: [\n        {\n          title: \"Compose\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"New Email\", \"Templates\", \"Signatures\", \"Scheduled Send\", \"Rich Text Editor\"]\n        },\n        {\n          title: \"Inbox\",\n          icon: <Inbox className=\"w-4 h-4\" />,\n          items: [\"All Mail\", \"Unread\", \"Important\", \"Starred\", \"With Attachments\"]\n        },\n        {\n          title: \"Drafts\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Draft Emails\", \"Auto-saved Drafts\", \"Scheduled Emails\"]\n        },\n        {\n          title: \"Outbox\",\n          icon: <Send className=\"w-4 h-4\" />,\n          items: [\"Pending Send\", \"Scheduled Emails\", \"Failed Sends\"]\n        },\n        {\n          title: \"Sent\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Sent Mail\", \"Delivery Reports\", \"Read Receipts\"]\n        },\n        {\n          title: \"Spam\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Spam Emails\", \"Blocked Senders\", \"Spam Settings\"]\n        },\n        {\n          title: \"Trash\",\n          icon: <Archive className=\"w-4 h-4\" />,\n          items: [\"Deleted Emails\", \"Empty Trash\", \"Recover Emails\"]\n        },\n        {\n          title: \"Folders\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"Custom Folders\", \"Shared Folders\", \"System Folders\", \"Folder Settings\"]\n        },\n        {\n          title: \"Tags\",\n          icon: <Tag className=\"w-4 h-4\" />,\n          items: [\"Color Tags\", \"Custom Tags\", \"Tag Management\"]\n        },\n        {\n          title: \"Views\",\n          icon: <Eye className=\"w-4 h-4\" />,\n          items: [\"Unread View\", \"Archived View\", \"Attachment View\", \"Conversation View\"]\n        },\n        {\n          title: \"Streams\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Team Streams\", \"Group Collaboration\", \"Stream Settings\"]\n        },\n        {\n          title: \"Zoho Apps\",\n          icon: <Grid className=\"w-4 h-4\" />,\n          items: [\"Calendar\", \"Contacts\", \"Tasks\", \"Notes\", \"Bookmarks\", \"Resources\", \"eArchive\"]\n        }\n      ]\n    },\n    \"Projects\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Homepage\", \"Dashboard Overview\", \"Recent Activity\", \"Quick Access Widgets\"]\n        },\n        {\n          title: \"Projects\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Projects\", \"Project Templates\", \"Project Creation\", \"Active Projects\", \"Archived Projects\"]\n        },\n        {\n          title: \"Tasks\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Task Lists\", \"All Tasks\", \"My Tasks\", \"Task Views\", \"Task Dependencies\", \"Subtasks\"]\n        },\n        {\n          title: \"Gantt & Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Milestone Gantt\", \"Chronology Gantt\", \"Dependencies Visualization\", \"Critical Path\", \"Baseline Comparisons\"]\n        },\n        {\n          title: \"Time Tracking\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Timesheets\", \"Manual Time Entry\", \"Timer-based Logging\", \"Billable Hours\", \"Time Reports\"]\n        },\n        {\n          title: \"Milestones\",\n          icon: <Flag className=\"w-4 h-4\" />,\n          items: [\"All Milestones\", \"Create Milestone\", \"Milestone Tracking\", \"Project Phases\"]\n        },\n        {\n          title: \"Issues\",\n          icon: <AlertCircle className=\"w-4 h-4\" />,\n          items: [\"Bug Tracking\", \"Issue Management\", \"Bug-Task Associations\", \"Issue Reports\"]\n        },\n        {\n          title: \"Documents\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"File Management\", \"WorkDrive Integration\", \"Document Sharing\", \"Version Control\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <TrendingUp className=\"w-4 h-4\" />,\n          items: [\"Workload Tracking\", \"Plan vs Actuals\", \"Resource Utilization\", \"Project Analytics\", \"Custom Reports\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Activity Feeds\", \"Shared Calendars\", \"Team Chat\", \"Comments & Mentions\"]\n        }\n      ]\n    },\n    \"People\": {\n      sections: [\n        {\n          title: \"Employee\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Employee Directory\", \"My Space\", \"Employee Profiles\", \"Organization Chart\"]\n        },\n        {\n          title: \"Attendance\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Check In/Out\", \"Attendance Reports\", \"Attendance Settings\", \"Regularization\", \"Shifts\", \"Working Hours\", \"Overtime\"]\n        },\n        {\n          title: \"Leave\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Apply Leave\", \"Leave Calendar\", \"Leave Approvals\", \"Leave Reports\", \"Leave Settings\", \"Leave Types\", \"Holiday Calendar\"]\n        },\n        {\n          title: \"Performance\",\n          icon: <Target className=\"w-4 h-4\" />,\n          items: [\"Performance Management\", \"Learning Management\", \"Compensation Module\"]\n        },\n        {\n          title: \"Communication\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Announcements\", \"Feeds\", \"Files\", \"Forms\"]\n        },\n        {\n          title: \"Administration\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Settings\", \"Reports\", \"Integrations\", \"Cases\"]\n        },\n        {\n          title: \"Mobile Features\",\n          icon: <Smartphone className=\"w-4 h-4\" />,\n          items: [\"Facial Recognition\", \"Location Tracking\", \"Push Notifications\", \"Offline Capability\", \"AI Chatbot Zia\"]\n        }\n      ]\n    },\n    \"Invoice\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Sales Overview\", \"Receivables Summary\", \"Top Projects\", \"Business Metrics\", \"Real-time Sync\"]\n        },\n        {\n          title: \"Invoices\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Create Invoice\", \"All Invoices\", \"Draft Invoices\", \"Sent Invoices\", \"Paid Invoices\", \"Overdue Invoices\", \"Batch Operations\", \"Advanced Search\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Customers\", \"Customer Portal\", \"Customer Statements\", \"Credit Limit Management\", \"Payment Information\", \"Multi-factor Authentication\"]\n        },\n        {\n          title: \"Items\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Product Catalog\", \"Service Items\", \"Item Categories\", \"Import Items\", \"Import Overwrite\"]\n        },\n        {\n          title: \"Quotes\",\n          icon: <FileCheck className=\"w-4 h-4\" />,\n          items: [\"Create Estimate\", \"All Quotes\", \"Professional Quotes\", \"Quote Templates\"]\n        },\n        {\n          title: \"Recurring Invoices\",\n          icon: <RefreshCw className=\"w-4 h-4\" />,\n          items: [\"Automated Billing\", \"Recurring Templates\", \"Subscription Management\"]\n        },\n        {\n          title: \"Credit Notes\",\n          icon: <FileX className=\"w-4 h-4\" />,\n          items: [\"Refund Management\", \"Credit Adjustments\", \"Credit Note Templates\"]\n        },\n        {\n          title: \"Expenses\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Track Expenses\", \"Expense Categories\", \"Billable Expenses\", \"Receipt Management\"]\n        },\n        {\n          title: \"Timesheets\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Time Tracking\", \"Project Billing\", \"Timesheet Reports\"]\n        },\n        {\n          title: \"Projects\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"Project Management\", \"Revenue Tracking\", \"Project Reports\"]\n        },\n        {\n          title: \"Payment Links\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"Standalone Payment Collection\", \"Payment Link Management\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Financial Reports\", \"Invoice Analytics\", \"Payment Reports\", \"Tax Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Organization Profile\", \"User Management\", \"Custom Fields\", \"Templates\", \"Payment Gateways\", \"Integrations\", \"Digital Signatures\"]\n        }\n      ]\n    },\n    \"SalesInbox\": {\n      sections: [\n        {\n          title: \"Deals\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Active Deals\", \"Deal Pipeline\", \"Deal Communications\", \"Deal Progress\", \"Sales Opportunities\"]\n        },\n        {\n          title: \"Leads\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Prospective Customers\", \"Lead Communications\", \"Lead Conversion\", \"Follow-up Management\"]\n        },\n        {\n          title: \"Contacts\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Customer Correspondence\", \"Contact Timeline\", \"Interaction History\", \"Customer Engagement\"]\n        },\n        {\n          title: \"Not in CRM\",\n          icon: <User className=\"w-4 h-4\" />,\n          items: [\"Unknown Contacts\", \"New Prospects\", \"External Communications\", \"Lead Creation\"]\n        },\n        {\n          title: \"Colleagues\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Internal Communications\", \"Team Collaboration\", \"Internal Updates\"]\n        },\n        {\n          title: \"Smart Features\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Auto-prioritization\", \"CRM Filtering\", \"Label System\", \"Drag-and-drop Actions\", \"Contact Suggestions\"]\n        },\n        {\n          title: \"ResponseWatch\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Deadline Reminders\", \"Overdue Notifications\", \"VIP Customer Alerts\", \"Follow-up Automation\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Email Intelligence\", \"Open Tracking\", \"Template Performance\", \"Dashboard Reports\", \"A/B Testing Insights\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Sales Email Templates\", \"Email Scheduling\", \"Performance Tracking\", \"CRM-based Suggestions\"]\n        },\n        {\n          title: \"Team Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Shared Contexts\", \"Team Handoffs\", \"New Hire Onboarding\", \"Role Change Continuity\"]\n        }\n      ]\n    },\n    \"SalesIQ\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Settings > Brands\", \"Channel Management\", \"Brand Configuration\", \"Department Access\", \"Dark/Light Theme\"]\n        },\n        {\n          title: \"Live Chat\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Chat Widget Customization\", \"Float vs Static Options\", \"Custom Branding\", \"Chat Window Themes\", \"Operator Profile Pictures\", \"24-Hour Idle Management\"]\n        },\n        {\n          title: \"Multi-Channel\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"WhatsApp Integration\", \"Telegram Support\", \"Facebook Messenger\", \"Pre-chat Forms\", \"Canned Response Categories\", \"Hebrew RTL Support\"]\n        },\n        {\n          title: \"Visitor Tracking\",\n          icon: <Eye className=\"w-4 h-4\" />,\n          items: [\"Real-time Analytics\", \"Geographic Tracking\", \"Behavioral Insights\", \"Lead Scoring\", \"Mobile App Tracking\", \"Mobilisten SDK\"]\n        },\n        {\n          title: \"Visitor Data\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Demographics\", \"Engagement Metrics\", \"CRM Integration\", \"Email Campaign Tracking\", \"MailChimp Integration\"]\n        },\n        {\n          title: \"Widgets\",\n          icon: <Code className=\"w-4 h-4\" />,\n          items: [\"Custom Widget Development\", \"Deluge Scripting\", \"API Access\", \"Webhooks\", \"Platform Support\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Weekly Reports Dashboard\", \"Visitor Trends\", \"Real-time Notifications\", \"Automated Mailing Lists\", \"Google Analytics Sync\"]\n        },\n        {\n          title: \"Integrations\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"Zoho Desk Integration\", \"TV Apps\", \"Android TV\", \"Apple TV\", \"Desktop Apps\", \"Mobile Alerts\"]\n        }\n      ]\n    },\n    \"Motivator\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Performance Overview\", \"Team Standings\", \"Achievement Gallery\", \"Recent Activities\"]\n        },\n        {\n          title: \"Games\",\n          icon: <Target className=\"w-4 h-4\" />,\n          items: [\"Active Games\", \"Game Templates\", \"Custom Games\", \"Game History\", \"Game Settings\"]\n        },\n        {\n          title: \"Leaderboards\",\n          icon: <TrendingUp className=\"w-4 h-4\" />,\n          items: [\"Top Performers\", \"Team Rankings\", \"Individual Scores\", \"Period Comparisons\"]\n        },\n        {\n          title: \"Achievements\",\n          icon: <Star className=\"w-4 h-4\" />,\n          items: [\"Badges\", \"Rewards\", \"Milestones\", \"Recognition Wall\", \"Achievement History\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Performance Metrics\", \"Engagement Reports\", \"ROI Analysis\", \"Behavioral Insights\"]\n        },\n        {\n          title: \"Setup\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"KPI Configuration\", \"Team Setup\", \"Reward System\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Social\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Brand Health Overview\", \"Performance Metrics\", \"Live Notifications\", \"Unified Activity Feed\"]\n        },\n        {\n          title: \"Publish\",\n          icon: <Send className=\"w-4 h-4\" />,\n          items: [\"New Post Composer\", \"Multi-platform Support\", \"Publishing Calendar\", \"Content Queue\", \"SmartQ Predictions\", \"Draft Management\", \"Team Approvals\"]\n        },\n        {\n          title: \"Posts\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Published Posts\", \"Scheduled Posts\", \"Performance Tracking\", \"Failed Posts\", \"Post Analytics\"]\n        },\n        {\n          title: \"Calendar\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Visual Content Planning\", \"Monthly/Weekly/Daily Views\", \"Drag-and-drop Scheduling\", \"Notes & Events\", \"Holiday View\", \"Time Zone Customization\"]\n        },\n        {\n          title: \"Monitor\",\n          icon: <Search className=\"w-4 h-4\" />,\n          items: [\"Real-time Social Listening\", \"Brand Mentions\", \"Keyword Monitoring\", \"Hashtag Performance\", \"Custom Columns\", \"Competitor Tracking\"]\n        },\n        {\n          title: \"Messages\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Unified Inbox\", \"WhatsApp Business\", \"Telegram Integration\", \"Saved Replies\", \"Conversation History\", \"Team Assignment\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Custom Analytics Dashboard\", \"Pre-built Templates\", \"Performance Metrics\", \"Automated Scheduling\", \"PDF/PNG Export\", \"White-label Options\"]\n        },\n        {\n          title: \"Connections\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Audience Profile Management\", \"Lead Identification\", \"CRM Integration\", \"Follower Organization\", \"Direct Engagement\"]\n        },\n        {\n          title: \"Platforms\",\n          icon: <Grid className=\"w-4 h-4\" />,\n          items: [\"Facebook\", \"Instagram\", \"X/Twitter\", \"LinkedIn\", \"YouTube\", \"TikTok\", \"Pinterest\", \"Threads\", \"Bluesky\", \"Mastodon\"]\n        },\n        {\n          title: \"Team\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Role-based Permissions\", \"Content Approval\", \"Team Chat\", \"Client Portal\", \"White-label Reporting\"]\n        }\n      ]\n    },\n    \"Marketing Automation\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Campaign Overview\", \"Lead Flow Analytics\", \"Performance Metrics\", \"Real-time Activities\", \"ROI Dashboard\"]\n        },\n        {\n          title: \"Journey Builder\",\n          icon: <GitBranch className=\"w-4 h-4\" />,\n          items: [\"Visual Journey Designer\", \"Customer Journey Mapping\", \"Multi-channel Journeys\", \"Trigger Events\", \"Path Analysis\", \"Journey Templates\"]\n        },\n        {\n          title: \"Campaigns\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Email Campaigns\", \"SMS Campaigns\", \"Push Notifications\", \"In-App Messages\", \"Web Push\", \"Social Media Campaigns\"]\n        },\n        {\n          title: \"Lead Management\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Lead Scoring\", \"Lead Nurturing\", \"Behavioral Tracking\", \"Lead Lifecycle\", \"Progressive Profiling\"]\n        },\n        {\n          title: \"Segmentation\",\n          icon: <Filter className=\"w-4 h-4\" />,\n          items: [\"Audience Segments\", \"Dynamic Lists\", \"Behavioral Triggers\", \"Custom Attributes\", \"Smart Segmentation\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Workflow Automation\", \"Trigger Campaigns\", \"Auto-responses\", \"Drip Sequences\", \"Event-based Actions\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Campaign Performance\", \"Attribution Reports\", \"Conversion Tracking\", \"A/B Test Results\", \"Revenue Attribution\"]\n        },\n        {\n          title: \"Integration\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"CRM Integration\", \"Website Tracking\", \"API Configuration\", \"Webhooks\", \"Third-party Apps\"]\n        }\n      ]\n    },\n    \"PageSense\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Optimization Overview\", \"Active Experiments\", \"Conversion Insights\", \"Performance Summary\", \"Quick Stats\"]\n        },\n        {\n          title: \"A/B Testing\",\n          icon: <Target className=\"w-4 h-4\" />,\n          items: [\"Create A/B Test\", \"Running Tests\", \"Test Results\", \"Statistical Significance\", \"Winner Selection\", \"Test Templates\", \"Multivariate Testing\"]\n        },\n        {\n          title: \"Heatmaps\",\n          icon: <MousePointer className=\"w-4 h-4\" />,\n          items: [\"Click Heatmaps\", \"Scroll Heatmaps\", \"Move Heatmaps\", \"Attention Heatmaps\", \"Mobile Heatmaps\", \"Page Comparison\", \"Element Analysis\"]\n        },\n        {\n          title: \"Session Recordings\",\n          icon: <PlayCircle className=\"w-4 h-4\" />,\n          items: [\"User Sessions\", \"Visitor Recordings\", \"Funnel Analysis\", \"Error Tracking\", \"Form Analytics\", \"Conversion Paths\", \"Drop-off Analysis\"]\n        },\n        {\n          title: \"Funnels\",\n          icon: <TrendingDown className=\"w-4 h-4\" />,\n          items: [\"Funnel Builder\", \"Conversion Funnel\", \"Drop-off Points\", \"Funnel Optimization\", \"Goal Tracking\"]\n        },\n        {\n          title: \"Polls & Surveys\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"On-page Polls\", \"Exit-Intent Surveys\", \"Feedback Widgets\", \"NPS Surveys\", \"User Voice\", \"Custom Questions\"]\n        },\n        {\n          title: \"Form Analytics\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Form Analysis\", \"Field Analytics\", \"Form Drop-offs\", \"Completion Rates\", \"Form Optimization\"]\n        },\n        {\n          title: \"Goals & Events\",\n          icon: <Flag className=\"w-4 h-4\" />,\n          items: [\"Goal Setup\", \"Conversion Goals\", \"Custom Events\", \"Revenue Tracking\", \"Goal Analytics\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Conversion Reports\", \"Experiment Reports\", \"Revenue Impact\", \"Visitor Behavior\", \"Performance Analytics\"]\n        }\n      ]\n    },\n    \"Forms\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Form Overview\", \"Submission Stats\", \"Performance Metrics\", \"Recent Submissions\", \"Quick Actions\"]\n        },\n        {\n          title: \"All Forms\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"My Forms\", \"Shared Forms\", \"Published Forms\", \"Draft Forms\", \"Archived Forms\", \"Deleted Forms\"]\n        },\n        {\n          title: \"Form Builder\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Drag & Drop Builder\", \"Field Library\", \"Design Themes\", \"Logic & Rules\", \"Conditional Logic\", \"Multi-page Forms\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <Copy className=\"w-4 h-4\" />,\n          items: [\"Form Templates\", \"Industry Templates\", \"Custom Templates\", \"Template Gallery\", \"Template Builder\"]\n        },\n        {\n          title: \"Submissions\",\n          icon: <Inbox className=\"w-4 h-4\" />,\n          items: [\"All Submissions\", \"Recent Submissions\", \"Export Data\", \"Submission Details\", \"Data Validation\", \"Duplicate Detection\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Form Analytics\", \"Submission Reports\", \"Conversion Rates\", \"Field Analytics\", \"Drop-off Analysis\", \"Time Analytics\"]\n        },\n        {\n          title: \"Integrations\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"CRM Integration\", \"Email Marketing\", \"Payment Gateways\", \"Webhooks\", \"API Access\", \"Third-party Apps\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Account Settings\", \"Form Settings\", \"Notification Settings\", \"Security Settings\", \"User Management\"]\n        }\n      ]\n    },\n    \"Survey\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Survey Overview\", \"Response Analytics\", \"Active Surveys\", \"Performance Summary\"]\n        },\n        {\n          title: \"Surveys\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"All Surveys\", \"Published Surveys\", \"Draft Surveys\", \"Survey Templates\", \"Question Bank\"]\n        },\n        {\n          title: \"Builder\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Survey Builder\", \"Question Types\", \"Logic & Branching\", \"Survey Themes\", \"Advanced Settings\"]\n        },\n        {\n          title: \"Distribution\",\n          icon: <Share2 className=\"w-4 h-4\" />,\n          items: [\"Email Invitations\", \"Social Sharing\", \"Website Embedding\", \"QR Codes\", \"Mobile App\"]\n        },\n        {\n          title: \"Responses\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"All Responses\", \"Response Details\", \"Export Responses\", \"Real-time Results\", \"Data Filtering\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Response Analytics\", \"Cross Tabulation\", \"Sentiment Analysis\", \"Text Analytics\", \"Reports\"]\n        }\n      ]\n    },\n    \"Backstage\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Event Overview\", \"Registration Stats\", \"Revenue Summary\", \"Recent Activities\"]\n        },\n        {\n          title: \"Events\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"All Events\", \"Upcoming Events\", \"Past Events\", \"Event Templates\", \"Event Series\"]\n        },\n        {\n          title: \"Registration\",\n          icon: <UserCheck className=\"w-4 h-4\" />,\n          items: [\"Registration Forms\", \"Ticket Types\", \"Pricing Tiers\", \"Discount Codes\", \"Waitlist Management\"]\n        },\n        {\n          title: \"Attendees\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Attendee List\", \"Check-in Management\", \"Attendee Communication\", \"Badge Printing\", \"Networking\"]\n        },\n        {\n          title: \"Marketing\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Email Campaigns\", \"Social Promotion\", \"Landing Pages\", \"Referral Program\", \"Analytics\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Registration Reports\", \"Revenue Reports\", \"Attendance Reports\", \"Survey Results\"]\n        }\n      ]\n    },\n    \"Expense\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Expense Overview\", \"Pending Approvals\", \"Monthly Summary\", \"Quick Actions\"]\n        },\n        {\n          title: \"Expenses\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"All Expenses\", \"My Expenses\", \"Team Expenses\", \"Recurring Expenses\", \"Mileage Tracking\"]\n        },\n        {\n          title: \"Receipts\",\n          icon: <Camera className=\"w-4 h-4\" />,\n          items: [\"Receipt Capture\", \"Auto-Scan\", \"Receipt Matching\", \"Receipt Storage\", \"Mobile Upload\"]\n        },\n        {\n          title: \"Approvals\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Pending Approvals\", \"Approval Workflows\", \"Rejected Expenses\", \"Approved Expenses\"]\n        },\n        {\n          title: \"Reimbursements\",\n          icon: <DollarSign className=\"w-4 h-4\" />,\n          items: [\"Pending Reimbursements\", \"Payment Processing\", \"Reimbursement History\", \"Payment Methods\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Expense Reports\", \"Category Reports\", \"Employee Reports\", \"Tax Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Expense Policies\", \"Categories\", \"Approval Rules\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Subscriptions\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Revenue Overview\", \"Subscription Metrics\", \"Growth Analytics\", \"Churn Analysis\"]\n        },\n        {\n          title: \"Subscriptions\",\n          icon: <RefreshCw className=\"w-4 h-4\" />,\n          items: [\"All Subscriptions\", \"Active Subscriptions\", \"Paused Subscriptions\", \"Cancelled Subscriptions\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Customers\", \"Customer Portal\", \"Customer Communication\", \"Customer Segmentation\"]\n        },\n        {\n          title: \"Plans\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Subscription Plans\", \"Pricing Tiers\", \"Add-ons\", \"Plan Upgrades\", \"Plan Analytics\"]\n        },\n        {\n          title: \"Billing\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Invoices\", \"Payment Methods\", \"Failed Payments\", \"Dunning Management\", \"Tax Settings\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Revenue Reports\", \"Subscription Analytics\", \"Cohort Analysis\", \"Lifetime Value\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Billing Settings\", \"Payment Gateways\", \"Email Templates\", \"Webhooks\"]\n        }\n      ]\n    },\n    \"Inventory\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Inventory Overview\", \"Stock Levels\", \"Low Stock Alerts\", \"Recent Transactions\"]\n        },\n        {\n          title: \"Items\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"All Items\", \"Item Groups\", \"Composite Items\", \"Serial Numbers\", \"Item Images\"]\n        },\n        {\n          title: \"Stock\",\n          icon: <Storage className=\"w-4 h-4\" />,\n          items: [\"Stock Summary\", \"Stock Adjustments\", \"Stock Transfers\", \"Physical Count\", \"Reorder Points\"]\n        },\n        {\n          title: \"Orders\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Sales Orders\", \"Purchase Orders\", \"Order Fulfillment\", \"Backorders\", \"Order History\"]\n        },\n        {\n          title: \"Warehouses\",\n          icon: <Building2 className=\"w-4 h-4\" />,\n          items: [\"Warehouse Management\", \"Locations\", \"Bin Management\", \"Warehouse Transfers\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Inventory Reports\", \"Valuation Reports\", \"Movement Reports\", \"Aging Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"Units of Measure\", \"Categories\", \"Preferences\"]\n        }\n      ]\n    },\n    \"Checkout\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Payment Overview\", \"Transaction Stats\", \"Revenue Summary\", \"Recent Payments\"]\n        },\n        {\n          title: \"Payment Pages\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"All Pages\", \"Published Pages\", \"Draft Pages\", \"Page Templates\", \"Mobile Pages\"]\n        },\n        {\n          title: \"Transactions\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Transactions\", \"Successful Payments\", \"Failed Payments\", \"Refunds\", \"Chargebacks\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Customer Database\", \"Payment Methods\", \"Customer Communications\", \"Purchase History\"]\n        },\n        {\n          title: \"Products\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Product Catalog\", \"Pricing\", \"Inventory Integration\", \"Digital Products\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Payment Analytics\", \"Conversion Rates\", \"Abandonment Analysis\", \"Revenue Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Payment Settings\", \"Gateway Configuration\", \"Security Settings\", \"Branding\"]\n        }\n      ]\n    },\n    \"Analytics\": {\n      sections: [\n        {\n          title: \"Modules\",\n          icon: <Grid className=\"w-4 h-4\" />,\n          items: [\"Teamspace Modules\", \"Module Management\", \"Custom Modules\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Reports\", \"Favorite Reports\", \"Recent Reports\", \"Shared Reports\", \"Create New Report\"]\n        },\n        {\n          title: \"Dashboards\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"All Dashboards\", \"Favorite Dashboards\", \"Recent Dashboards\", \"Shared Dashboards\", \"Create New Dashboard\"]\n        },\n        {\n          title: \"Data Sources\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Connected Sources\", \"Import Data\", \"Database Connections\", \"File Imports\", \"Zoho App Integrations\", \"Third-party Connectors\"]\n        },\n        {\n          title: \"AI & Intelligence\",\n          icon: <Bot className=\"w-4 h-4\" />,\n          items: [\"Ask Zia\", \"Zia Insights\", \"Predictive Analytics\", \"Advanced Analytics\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Shared Workspaces\", \"Comments & Annotations\", \"User Management\", \"Activity Logs\"]\n        },\n        {\n          title: \"New Features 2024\",\n          icon: <Star className=\"w-4 h-4\" />,\n          items: [\"Sunburst Charts\", \"Enhanced JavaScript API\", \"Distributed Architecture\", \"Puvi Font Support\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Workspace Settings\", \"Currency Formatting\", \"Week/Year Format\", \"Fiscal Year Settings\", \"Data Backup\", \"User Permissions\"]\n        }\n      ]\n    },\n    \"Recruit\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Recruitment Overview\", \"Pipeline Analytics\", \"Team Performance\", \"Recent Activities\"]\n        },\n        {\n          title: \"Jobs\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Jobs\", \"Published Jobs\", \"Draft Jobs\", \"Job Templates\", \"Job Boards\"]\n        },\n        {\n          title: \"Candidates\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Candidates\", \"Resume Database\", \"Candidate Profiles\", \"Source Tracking\", \"Candidate Pool\"]\n        },\n        {\n          title: \"Applications\",\n          icon: <Inbox className=\"w-4 h-4\" />,\n          items: [\"All Applications\", \"Interview Scheduling\", \"Application Status\", \"Candidate Pipeline\"]\n        },\n        {\n          title: \"Interviews\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Schedule Interview\", \"Interview Calendar\", \"Interview Feedback\", \"Panel Management\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Recruitment Reports\", \"Source Analytics\", \"Time-to-Hire\", \"Cost-per-Hire\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Recruitment Settings\", \"User Management\", \"Workflow Configuration\", \"Integrations\"]\n        }\n      ]\n    },\n    \"Workerly\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Workforce Overview\", \"Assignment Status\", \"Performance Metrics\", \"Recent Activities\"]\n        },\n        {\n          title: \"Workers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Workers\", \"Worker Profiles\", \"Skills & Qualifications\", \"Availability\"]\n        },\n        {\n          title: \"Assignments\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Current Assignments\", \"Assignment History\", \"Assignment Matching\", \"Client Requests\"]\n        },\n        {\n          title: \"Scheduling\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Shift Scheduling\", \"Calendar View\", \"Time Tracking\", \"Attendance Management\"]\n        },\n        {\n          title: \"Payroll\",\n          icon: <DollarSign className=\"w-4 h-4\" />,\n          items: [\"Payroll Processing\", \"Timesheets\", \"Payment Records\", \"Tax Management\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Workforce Analytics\", \"Performance Reports\", \"Financial Reports\", \"Compliance Reports\"]\n        }\n      ]\n    },\n    \"Cliq\": {\n      sections: [\n        {\n          title: \"Chats\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"All Conversations\", \"Direct Messages\", \"Group Chats\", \"Starred Messages\", \"Message Search\"]\n        },\n        {\n          title: \"Channels\",\n          icon: <Hash className=\"w-4 h-4\" />,\n          items: [\"All Channels\", \"Public Channels\", \"Private Channels\", \"Channel Discovery\", \"Channel Settings\"]\n        },\n        {\n          title: \"Teams\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"My Teams\", \"Team Directory\", \"Team Settings\", \"Team Analytics\", \"Cross-functional Teams\"]\n        },\n        {\n          title: \"Calls\",\n          icon: <Phone className=\"w-4 h-4\" />,\n          items: [\"Audio Calls\", \"Video Calls\", \"Screen Sharing\", \"Call History\", \"Conference Calls\"]\n        },\n        {\n          title: \"Files\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Shared Files\", \"File Library\", \"Recent Files\", \"File Search\", \"Cloud Storage\"]\n        },\n        {\n          title: \"Integrations\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"App Integrations\", \"Bots\", \"Workflows\", \"Custom Commands\", \"API Access\"]\n        }\n      ]\n    },\n    \"Meeting\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Meeting Overview\", \"Upcoming Meetings\", \"Recent Recordings\", \"Usage Analytics\"]\n        },\n        {\n          title: \"Meetings\",\n          icon: <Video className=\"w-4 h-4\" />,\n          items: [\"Start Meeting\", \"Schedule Meeting\", \"Join Meeting\", \"Meeting History\", \"Recurring Meetings\"]\n        },\n        {\n          title: \"Webinars\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Host Webinar\", \"Webinar Registration\", \"Attendee Management\", \"Webinar Analytics\"]\n        },\n        {\n          title: \"Recordings\",\n          icon: <PlayCircle className=\"w-4 h-4\" />,\n          items: [\"All Recordings\", \"Cloud Recordings\", \"Local Recordings\", \"Recording Settings\"]\n        },\n        {\n          title: \"Room Management\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"Meeting Rooms\", \"Room Booking\", \"Room Equipment\", \"Room Analytics\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Meeting Settings\", \"Security Settings\", \"Integration Settings\", \"User Management\"]\n        }\n      ]\n    },\n    \"Connect\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Activity Feed\", \"News & Updates\", \"Trending Topics\", \"Company Announcements\"]\n        },\n        {\n          title: \"Groups\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"My Groups\", \"All Groups\", \"Create Group\", \"Group Directory\", \"Group Analytics\"]\n        },\n        {\n          title: \"Forums\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Discussion Forums\", \"Q&A Forums\", \"Knowledge Sharing\", \"Expert Networks\"]\n        },\n        {\n          title: \"Events\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Upcoming Events\", \"Create Event\", \"Event Calendar\", \"Event Registration\", \"Virtual Events\"]\n        },\n        {\n          title: \"Knowledge Base\",\n          icon: <BookOpen className=\"w-4 h-4\" />,\n          items: [\"Articles\", \"Wikis\", \"Best Practices\", \"Training Materials\", \"Resource Library\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Engagement Metrics\", \"User Activity\", \"Content Performance\", \"Network Analysis\"]\n        }\n      ]\n    },\n    \"WorkDrive\": {\n      sections: [\n        {\n          title: \"My Files\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"All Files\", \"Recent Files\", \"Starred Files\", \"Trash\", \"Offline Files\"]\n        },\n        {\n          title: \"Shared\",\n          icon: <Share2 className=\"w-4 h-4\" />,\n          items: [\"Shared with Me\", \"Shared by Me\", \"Team Folders\", \"Public Links\", \"External Sharing\"]\n        },\n        {\n          title: \"Team Folders\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Team Folders\", \"My Teams\", \"Folder Permissions\", \"Team Analytics\"]\n        },\n        {\n          title: \"Sync\",\n          icon: <RefreshCw className=\"w-4 h-4\" />,\n          items: [\"Desktop Sync\", \"Mobile Sync\", \"Sync Status\", \"Sync Settings\", \"Version History\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Access Permissions\", \"Data Encryption\", \"Audit Logs\", \"Compliance Reports\"]\n        },\n        {\n          title: \"Administration\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"User Management\", \"Storage Management\", \"Security Settings\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Writer\": {\n      sections: [\n        {\n          title: \"Documents\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"My Documents\", \"Recent Documents\", \"Shared Documents\", \"Templates\", \"Drafts\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Real-time Editing\", \"Comments\", \"Suggestions\", \"Track Changes\", \"Document Sharing\"]\n        },\n        {\n          title: \"Formatting\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Text Formatting\", \"Styles\", \"Headers & Footers\", \"Tables\", \"Images & Media\"]\n        },\n        {\n          title: \"Review\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Spell Check\", \"Grammar Check\", \"Document Review\", \"Version History\", \"Approval Workflow\"]\n        },\n        {\n          title: \"Export\",\n          icon: <Download className=\"w-4 h-4\" />,\n          items: [\"PDF Export\", \"Word Export\", \"HTML Export\", \"Print Options\", \"Batch Export\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Document Settings\", \"Sharing Permissions\", \"Auto-save Settings\", \"Language Settings\"]\n        }\n      ]\n    },\n    \"Sheet\": {\n      sections: [\n        {\n          title: \"Spreadsheets\",\n          icon: <Table className=\"w-4 h-4\" />,\n          items: [\"My Spreadsheets\", \"Recent Sheets\", \"Shared Sheets\", \"Templates\", \"Drafts\"]\n        },\n        {\n          title: \"Data\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Data Import\", \"Data Validation\", \"Pivot Tables\", \"Charts & Graphs\", \"Data Analysis\"]\n        },\n        {\n          title: \"Functions\",\n          icon: <Calculator className=\"w-4 h-4\" />,\n          items: [\"Formula Builder\", \"Function Library\", \"Custom Functions\", \"Array Formulas\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Real-time Editing\", \"Comments\", \"Sheet Sharing\", \"Permission Management\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Macros\", \"Scripts\", \"Auto-fill\", \"Conditional Formatting\", \"Data Triggers\"]\n        },\n        {\n          title: \"Export\",\n          icon: <Download className=\"w-4 h-4\" />,\n          items: [\"Excel Export\", \"CSV Export\", \"PDF Export\", \"Chart Export\", \"Print Options\"]\n        }\n      ]\n    },\n    \"Show\": {\n      sections: [\n        {\n          title: \"Presentations\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"My Presentations\", \"Recent Presentations\", \"Shared Presentations\", \"Templates\", \"Drafts\"]\n        },\n        {\n          title: \"Design\",\n          icon: <Palette className=\"w-4 h-4\" />,\n          items: [\"Slide Layouts\", \"Themes\", \"Master Slides\", \"Animation Effects\", \"Transitions\"]\n        },\n        {\n          title: \"Media\",\n          icon: <Image className=\"w-4 h-4\" />,\n          items: [\"Images\", \"Videos\", \"Audio\", \"Charts\", \"Icons\", \"Stock Media\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Real-time Editing\", \"Comments\", \"Presenter Notes\", \"Review Mode\", \"Sharing\"]\n        },\n        {\n          title: \"Present\",\n          icon: <PlayCircle className=\"w-4 h-4\" />,\n          items: [\"Slideshow Mode\", \"Presenter View\", \"Remote Control\", \"Broadcast\", \"Record Presentation\"]\n        },\n        {\n          title: \"Export\",\n          icon: <Download className=\"w-4 h-4\" />,\n          items: [\"PDF Export\", \"PowerPoint Export\", \"Image Export\", \"Video Export\", \"Print\"]\n        }\n      ]\n    },\n    \"Notebook\": {\n      sections: [\n        {\n          title: \"Notebooks\",\n          icon: <BookOpen className=\"w-4 h-4\" />,\n          items: [\"My Notebooks\", \"Shared Notebooks\", \"Recent Notes\", \"Favorites\", \"Archived\"]\n        },\n        {\n          title: \"Notes\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Create Note\", \"Text Notes\", \"Audio Notes\", \"Photo Notes\", \"Sketch Notes\"]\n        },\n        {\n          title: \"Organization\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"Tags\", \"Categories\", \"Search\", \"Filters\", \"Quick Access\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Share2 className=\"w-4 h-4\" />,\n          items: [\"Share Notebooks\", \"Team Notes\", \"Comments\", \"Real-time Sync\"]\n        },\n        {\n          title: \"Sync\",\n          icon: <RefreshCw className=\"w-4 h-4\" />,\n          items: [\"Cloud Sync\", \"Offline Access\", \"Multi-device Sync\", \"Backup\"]\n        }\n      ]\n    },\n    \"Sign\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Document Overview\", \"Pending Signatures\", \"Completed Documents\", \"Recent Activity\"]\n        },\n        {\n          title: \"Documents\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Documents\", \"Draft Documents\", \"In Progress\", \"Completed\", \"Templates\"]\n        },\n        {\n          title: \"Send for Signature\",\n          icon: <Send className=\"w-4 h-4\" />,\n          items: [\"Upload Document\", \"Add Recipients\", \"Set Signature Fields\", \"Customize Message\"]\n        },\n        {\n          title: \"Sign Documents\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Pending Signatures\", \"Digital Signature\", \"Initial & Date\", \"Fill Forms\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <Copy className=\"w-4 h-4\" />,\n          items: [\"Document Templates\", \"Signature Templates\", \"Reusable Fields\", \"Template Library\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Signature Analytics\", \"Document Status\", \"Audit Trail\", \"Compliance Reports\"]\n        }\n      ]\n    },\n    \"Assist\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Support Overview\", \"Active Sessions\", \"Performance Metrics\", \"Recent Activities\"]\n        },\n        {\n          title: \"Remote Support\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"Screen Sharing\", \"Remote Control\", \"File Transfer\", \"Multi-monitor Support\"]\n        },\n        {\n          title: \"Sessions\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Current Sessions\", \"Scheduled Sessions\", \"Session History\", \"Session Recording\"]\n        },\n        {\n          title: \"Chat Support\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Live Chat\", \"Chat History\", \"File Sharing\", \"Screen Annotation\"]\n        },\n        {\n          title: \"Tools\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"System Information\", \"Diagnostic Tools\", \"Performance Monitor\", \"Registry Editor\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Session Reports\", \"Performance Reports\", \"Usage Analytics\", \"Customer Satisfaction\"]\n        }\n      ]\n    },\n    \"Lens\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"AR Overview\", \"Active Sessions\", \"Device Status\", \"Recent Activities\"]\n        },\n        {\n          title: \"AR Sessions\",\n          icon: <Eye className=\"w-4 h-4\" />,\n          items: [\"Start AR Session\", \"Join Session\", \"Session Library\", \"Session Recording\"]\n        },\n        {\n          title: \"Annotations\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"3D Annotations\", \"Voice Notes\", \"Drawing Tools\", \"Measurement Tools\"]\n        },\n        {\n          title: \"Knowledge Base\",\n          icon: <BookOpen className=\"w-4 h-4\" />,\n          items: [\"AR Guides\", \"Step-by-step Instructions\", \"Video Tutorials\", \"Documentation\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Multi-user Sessions\", \"Expert Assistance\", \"Real-time Sharing\", \"Team Collaboration\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Usage Analytics\", \"Performance Metrics\", \"Session Analysis\", \"ROI Reports\"]\n        }\n      ]\n    },\n    \"Sites\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Site Overview\", \"Traffic Analytics\", \"Performance Metrics\", \"Recent Updates\"]\n        },\n        {\n          title: \"Sites\",\n          icon: <Globe className=\"w-4 h-4\" />,\n          items: [\"All Sites\", \"Published Sites\", \"Draft Sites\", \"Site Templates\", \"Mobile Sites\"]\n        },\n        {\n          title: \"Builder\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Page Builder\", \"Design Elements\", \"Layouts\", \"Widgets\", \"Custom Code\"]\n        },\n        {\n          title: \"Content\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Pages\", \"Blog Posts\", \"Media Library\", \"Forms\", \"SEO Settings\"]\n        },\n        {\n          title: \"E-commerce\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Online Store\", \"Products\", \"Orders\", \"Payment Settings\", \"Inventory\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Traffic Reports\", \"Visitor Analytics\", \"Conversion Tracking\", \"SEO Performance\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Domain Settings\", \"SSL Certificates\", \"Backup\", \"Performance Optimization\"]\n        }\n      ]\n    },\n    \"Creator\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"App Overview\", \"Usage Analytics\", \"Performance Stats\", \"Recent Activities\"]\n        },\n        {\n          title: \"Applications\",\n          icon: <Code className=\"w-4 h-4\" />,\n          items: [\"My Apps\", \"Published Apps\", \"Draft Apps\", \"App Templates\", \"Shared Apps\"]\n        },\n        {\n          title: \"Builder\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Form Builder\", \"Report Builder\", \"Workflow Builder\", \"Page Builder\", \"Script Editor\"]\n        },\n        {\n          title: \"Data\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Data Management\", \"Import/Export\", \"Data Validation\", \"Relationships\", \"Lookup Fields\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Workflows\", \"Triggers\", \"Scheduled Actions\", \"Email Notifications\", \"Webhooks\"]\n        },\n        {\n          title: \"Integration\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"API Access\", \"Third-party Integrations\", \"Zapier\", \"Custom Connections\"]\n        },\n        {\n          title: \"Publishing\",\n          icon: <Upload className=\"w-4 h-4\" />,\n          items: [\"App Deployment\", \"User Management\", \"Access Control\", \"Mobile Apps\"]\n        }\n      ]\n    },\n    \"Flow\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Automation Overview\", \"Active Workflows\", \"Execution Stats\", \"Recent Activities\"]\n        },\n        {\n          title: \"Workflows\",\n          icon: <GitBranch className=\"w-4 h-4\" />,\n          items: [\"My Workflows\", \"Shared Workflows\", \"Workflow Templates\", \"Draft Workflows\"]\n        },\n        {\n          title: \"Builder\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Visual Builder\", \"Triggers\", \"Actions\", \"Conditions\", \"Functions\"]\n        },\n        {\n          title: \"Executions\",\n          icon: <PlayCircle className=\"w-4 h-4\" />,\n          items: [\"Execution History\", \"Failed Executions\", \"Scheduled Executions\", \"Real-time Monitoring\"]\n        },\n        {\n          title: \"Connections\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"App Connections\", \"API Integrations\", \"Webhooks\", \"Custom Connections\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Account Settings\", \"Team Management\", \"Usage Limits\", \"Security Settings\"]\n        }\n      ]\n    },\n    \"DataPrep\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Data Overview\", \"Processing Stats\", \"Recent Datasets\", \"Quick Actions\"]\n        },\n        {\n          title: \"Datasets\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"My Datasets\", \"Shared Datasets\", \"Data Sources\", \"Import Data\"]\n        },\n        {\n          title: \"Preparation\",\n          icon: <Filter className=\"w-4 h-4\" />,\n          items: [\"Data Cleaning\", \"Transform Data\", \"Merge Datasets\", \"Data Validation\"]\n        },\n        {\n          title: \"Recipes\",\n          icon: <Code className=\"w-4 h-4\" />,\n          items: [\"Transformation Recipes\", \"Recipe Templates\", \"Custom Functions\", \"Recipe History\"]\n        },\n        {\n          title: \"Export\",\n          icon: <Download className=\"w-4 h-4\" />,\n          items: [\"Export Data\", \"Schedule Exports\", \"Export Formats\", \"Data Publishing\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"Data Sources\", \"Performance Settings\", \"Security\"]\n        }\n      ]\n    },\n    \"Vault\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Password Overview\", \"Security Score\", \"Recent Activities\", \"Alerts\"]\n        },\n        {\n          title: \"Passwords\",\n          icon: <Key className=\"w-4 h-4\" />,\n          items: [\"All Passwords\", \"Favorites\", \"Weak Passwords\", \"Duplicate Passwords\", \"Recently Used\"]\n        },\n        {\n          title: \"Secure Notes\",\n          icon: <Lock className=\"w-4 h-4\" />,\n          items: [\"Personal Notes\", \"Business Notes\", \"Credit Cards\", \"Bank Accounts\", \"Documents\"]\n        },\n        {\n          title: \"Sharing\",\n          icon: <Share2 className=\"w-4 h-4\" />,\n          items: [\"Shared Items\", \"Emergency Access\", \"Team Sharing\", \"Secure Sharing\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Two-Factor Auth\", \"Security Audit\", \"Breach Monitoring\", \"Password Generator\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Account Settings\", \"Security Settings\", \"Backup & Sync\", \"Browser Extensions\"]\n        }\n      ]\n    },\n    \"OneAuth\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Authentication Overview\", \"Login Analytics\", \"Security Alerts\", \"Recent Activities\"]\n        },\n        {\n          title: \"Multi-Factor Auth\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Authenticator Apps\", \"SMS Verification\", \"Email Verification\", \"Hardware Tokens\"]\n        },\n        {\n          title: \"Applications\",\n          icon: <Grid className=\"w-4 h-4\" />,\n          items: [\"Connected Apps\", \"SSO Applications\", \"App Directory\", \"Custom Apps\"]\n        },\n        {\n          title: \"Users\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"User Management\", \"User Groups\", \"Access Policies\", \"Login History\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Lock className=\"w-4 h-4\" />,\n          items: [\"Security Policies\", \"Risk Assessment\", \"Compliance Reports\", \"Audit Logs\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Organization Settings\", \"Authentication Policies\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Directory\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Organization Overview\", \"User Activity\", \"Device Status\", \"Security Summary\"]\n        },\n        {\n          title: \"Users\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Users\", \"User Profiles\", \"User Groups\", \"Organizational Units\", \"User Import\"]\n        },\n        {\n          title: \"Devices\",\n          icon: <Smartphone className=\"w-4 h-4\" />,\n          items: [\"All Devices\", \"Device Groups\", \"Device Policies\", \"Device Compliance\"]\n        },\n        {\n          title: \"Applications\",\n          icon: <Grid className=\"w-4 h-4\" />,\n          items: [\"App Management\", \"App Deployment\", \"App Policies\", \"App Usage Analytics\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Access Control\", \"Security Policies\", \"Threat Detection\", \"Compliance Monitoring\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"User Reports\", \"Device Reports\", \"Security Reports\", \"Compliance Reports\"]\n        }\n      ]\n    },\n    \"MDM\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Device Overview\", \"Enrollment Stats\", \"Compliance Status\", \"Recent Activities\"]\n        },\n        {\n          title: \"Devices\",\n          icon: <Smartphone className=\"w-4 h-4\" />,\n          items: [\"All Devices\", \"iOS Devices\", \"Android Devices\", \"Windows Devices\", \"Device Groups\"]\n        },\n        {\n          title: \"Enrollment\",\n          icon: <UserCheck className=\"w-4 h-4\" />,\n          items: [\"Device Enrollment\", \"Enrollment Policies\", \"Enrollment Templates\", \"Bulk Enrollment\"]\n        },\n        {\n          title: \"Policies\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Device Policies\", \"App Policies\", \"Security Policies\", \"Compliance Policies\"]\n        },\n        {\n          title: \"Applications\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"App Management\", \"App Distribution\", \"App Store\", \"Enterprise Apps\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Device Security\", \"Remote Actions\", \"Location Tracking\", \"Threat Protection\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Device Reports\", \"Compliance Reports\", \"Security Reports\", \"Usage Reports\"]\n        }\n      ]\n    },\n    \"Learn\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Learning Overview\", \"Progress Tracking\", \"Course Analytics\", \"Recent Activities\"]\n        },\n        {\n          title: \"Courses\",\n          icon: <GraduationCap className=\"w-4 h-4\" />,\n          items: [\"All Courses\", \"My Courses\", \"Course Catalog\", \"Course Creation\", \"Course Library\"]\n        },\n        {\n          title: \"Learning Paths\",\n          icon: <Map className=\"w-4 h-4\" />,\n          items: [\"Learning Paths\", \"Skill Tracks\", \"Certification Programs\", \"Custom Paths\"]\n        },\n        {\n          title: \"Assessments\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Quizzes\", \"Assignments\", \"Exams\", \"Certifications\", \"Skill Assessments\"]\n        },\n        {\n          title: \"Social Learning\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Discussion Forums\", \"Study Groups\", \"Peer Reviews\", \"Knowledge Sharing\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Learning Analytics\", \"Progress Reports\", \"Performance Metrics\", \"ROI Analysis\"]\n        }\n      ]\n    },\n    \"TeamInbox\": {\n      sections: [\n        {\n          title: \"Inbox\",\n          icon: <Inbox className=\"w-4 h-4\" />,\n          items: [\"Shared Inbox\", \"Unassigned\", \"My Messages\", \"High Priority\", \"Archived\"]\n        },\n        {\n          title: \"Channels\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Email Channels\", \"Social Channels\", \"Chat Channels\", \"Custom Channels\"]\n        },\n        {\n          title: \"Team Management\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Team Members\", \"Assignment Rules\", \"Workload Distribution\", \"Performance Tracking\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <Copy className=\"w-4 h-4\" />,\n          items: [\"Response Templates\", \"Email Templates\", \"Canned Responses\", \"Signature Templates\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Auto-assignment\", \"Auto-responses\", \"Workflow Rules\", \"Escalation Rules\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Response Time\", \"Team Performance\", \"Volume Analytics\", \"Customer Satisfaction\"]\n        }\n      ]\n    },\n    \"Sprints\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Sprint Overview\", \"Team Velocity\", \"Burndown Charts\", \"Sprint Progress\"]\n        },\n        {\n          title: \"Backlog\",\n          icon: <List className=\"w-4 h-4\" />,\n          items: [\"Product Backlog\", \"Sprint Backlog\", \"Epic Management\", \"Story Mapping\"]\n        },\n        {\n          title: \"Sprints\",\n          icon: <Timer className=\"w-4 h-4\" />,\n          items: [\"Active Sprints\", \"Sprint Planning\", \"Sprint Review\", \"Sprint Retrospective\"]\n        },\n        {\n          title: \"Scrum Board\",\n          icon: <Grid className=\"w-4 h-4\" />,\n          items: [\"Kanban Board\", \"Task Management\", \"Workflow Stages\", \"Custom Workflows\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Velocity Reports\", \"Burndown Reports\", \"Sprint Reports\", \"Team Performance\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Project Settings\", \"Team Configuration\", \"Workflow Settings\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Bookings\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Booking Overview\", \"Today's Appointments\", \"Revenue Summary\", \"Customer Insights\"]\n        },\n        {\n          title: \"Calendar\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Appointment Calendar\", \"Availability Settings\", \"Time Slots\", \"Recurring Appointments\"]\n        },\n        {\n          title: \"Services\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Service Catalog\", \"Service Pricing\", \"Service Duration\", \"Service Categories\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Customer Directory\", \"Customer History\", \"Customer Communications\", \"Customer Feedback\"]\n        },\n        {\n          title: \"Staff\",\n          icon: <UserCheck className=\"w-4 h-4\" />,\n          items: [\"Staff Management\", \"Staff Schedules\", \"Staff Assignments\", \"Staff Performance\"]\n        },\n        {\n          title: \"Payments\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Payment Processing\", \"Payment Methods\", \"Invoicing\", \"Payment Reports\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Booking Analytics\", \"Revenue Reports\", \"Customer Analytics\", \"Performance Metrics\"]\n        }\n      ]\n    },\n    \"Thrive\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Partner Overview\", \"Relationship Health\", \"Performance Metrics\", \"Recent Activities\"]\n        },\n        {\n          title: \"Partners\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Partners\", \"Partner Profiles\", \"Partner Hierarchy\", \"Partner Onboarding\"]\n        },\n        {\n          title: \"Opportunities\",\n          icon: <Target className=\"w-4 h-4\" />,\n          items: [\"Deal Registration\", \"Partner Opportunities\", \"Pipeline Management\", \"Revenue Tracking\"]\n        },\n        {\n          title: \"Programs\",\n          icon: <GraduationCap className=\"w-4 h-4\" />,\n          items: [\"Partner Programs\", \"Certification Programs\", \"Training Materials\", \"Program Analytics\"]\n        },\n        {\n          title: \"Marketing\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Co-marketing\", \"Marketing Resources\", \"Campaign Management\", \"Brand Guidelines\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Partner Performance\", \"Revenue Analytics\", \"Program Effectiveness\", \"ROI Reports\"]\n        }\n      ]\n    },\n    \"LandingPage\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Page Overview\", \"Conversion Analytics\", \"Traffic Stats\", \"Performance Summary\"]\n        },\n        {\n          title: \"Pages\",\n          icon: <Globe className=\"w-4 h-4\" />,\n          items: [\"All Pages\", \"Published Pages\", \"Draft Pages\", \"Page Templates\", \"Mobile Pages\"]\n        },\n        {\n          title: \"Builder\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Page Builder\", \"Design Elements\", \"Layout Templates\", \"Custom Code\", \"Media Library\"]\n        },\n        {\n          title: \"Forms\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Lead Forms\", \"Contact Forms\", \"Subscription Forms\", \"Custom Forms\", \"Form Analytics\"]\n        },\n        {\n          title: \"A/B Testing\",\n          icon: <Target className=\"w-4 h-4\" />,\n          items: [\"Create Tests\", \"Running Tests\", \"Test Results\", \"Winner Selection\", \"Test History\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Conversion Analytics\", \"Traffic Sources\", \"Visitor Behavior\", \"Performance Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Domain Settings\", \"SEO Settings\", \"Integration Settings\", \"Publishing Options\"]\n        }\n      ]\n    },\n    \"Commerce\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Store Overview\", \"Sales Dashboard\", \"Analytics Dashboard\", \"Performance Metrics\", \"Quick Actions\"]\n        },\n        {\n          title: \"Products\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"All Products\", \"Add Product\", \"Categories\", \"Brands\", \"Variants\", \"Bulk Import\", \"Product Reviews\", \"Digital Products\"]\n        },\n        {\n          title: \"Orders\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"All Orders\", \"Pending Orders\", \"Processing Orders\", \"Shipped Orders\", \"Delivered Orders\", \"Cancelled Orders\", \"Returns\", \"Refunds\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Customers\", \"Customer Groups\", \"Customer Reviews\", \"Wishlist\", \"Customer Analytics\", \"Loyalty Program\"]\n        },\n        {\n          title: \"Inventory\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Stock Management\", \"Low Stock Alerts\", \"Inventory Reports\", \"Stock Adjustments\", \"Warehouses\", \"Transfers\"]\n        },\n        {\n          title: \"Marketing\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Campaigns\", \"Coupons & Discounts\", \"Email Marketing\", \"SEO Tools\", \"Social Media\", \"Abandoned Cart Recovery\"]\n        },\n        {\n          title: \"Payments\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Payment Methods\", \"Transaction History\", \"Payment Reports\", \"Gateway Settings\", \"Refund Management\"]\n        },\n        {\n          title: \"Shipping\",\n          icon: <Truck className=\"w-4 h-4\" />,\n          items: [\"Shipping Methods\", \"Shipping Zones\", \"Shipping Labels\", \"Tracking\", \"Shipping Reports\", \"Carriers\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Sales Reports\", \"Product Reports\", \"Customer Reports\", \"Inventory Reports\", \"Financial Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Store Settings\", \"Payment Settings\", \"Shipping Settings\", \"Tax Settings\", \"Theme Customization\", \"Integrations\"]\n        }\n      ]\n    },\n    \"BugTracker\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Project Overview\", \"My Dashboard\", \"Team Dashboard\", \"Bug Statistics\", \"Recent Activity\"]\n        },\n        {\n          title: \"Bugs\",\n          icon: <AlertCircle className=\"w-4 h-4\" />,\n          items: [\"All Bugs\", \"Open Bugs\", \"Assigned to Me\", \"Recently Added\", \"Critical Bugs\", \"Resolved Bugs\", \"Closed Bugs\"]\n        },\n        {\n          title: \"Projects\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Projects\", \"Active Projects\", \"My Projects\", \"Project Templates\", \"Archived Projects\"]\n        },\n        {\n          title: \"Categories\",\n          icon: <Tag className=\"w-4 h-4\" />,\n          items: [\"Bug Categories\", \"Severity Levels\", \"Priority Levels\", \"Custom Categories\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Bug Reports\", \"Project Reports\", \"User Activity Reports\", \"Custom Reports\", \"Analytics\"]\n        },\n        {\n          title: \"Users\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Users\", \"User Groups\", \"User Roles\", \"User Activity\", \"Permissions\"]\n        },\n        {\n          title: \"Forums\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Discussion Forums\", \"Topics\", \"My Posts\", \"Popular Discussions\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"Email Settings\", \"Custom Fields\", \"Workflow Settings\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Wiki\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Wiki Home\", \"Recent Changes\", \"Popular Pages\", \"My Contributions\", \"Getting Started\"]\n        },\n        {\n          title: \"Pages\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Pages\", \"Create Page\", \"Page Templates\", \"Draft Pages\", \"My Pages\", \"Recently Viewed\"]\n        },\n        {\n          title: \"Categories\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"All Categories\", \"Create Category\", \"Category Tree\", \"Manage Categories\"]\n        },\n        {\n          title: \"Search\",\n          icon: <Search className=\"w-4 h-4\" />,\n          items: [\"Advanced Search\", \"Search Results\", \"Search History\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"User Contributions\", \"Page Comments\", \"Change History\", \"User Activity\", \"Team Wikis\"]\n        },\n        {\n          title: \"Administration\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"User Management\", \"Permissions\", \"Wiki Settings\", \"Templates\", \"Import/Export\"]\n        }\n      ]\n    },\n    \"Calendar\": {\n      sections: [\n        {\n          title: \"Calendar Views\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Month View\", \"Week View\", \"Day View\", \"Agenda View\", \"Year View\"]\n        },\n        {\n          title: \"Events\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"All Events\", \"Create Event\", \"Recurring Events\", \"My Events\", \"Upcoming Events\", \"Past Events\"]\n        },\n        {\n          title: \"Calendars\",\n          icon: <Grid className=\"w-4 h-4\" />,\n          items: [\"My Calendars\", \"Shared Calendars\", \"Public Calendars\", \"Subscribed Calendars\", \"Calendar Settings\"]\n        },\n        {\n          title: \"Tasks\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"All Tasks\", \"Today's Tasks\", \"Overdue Tasks\", \"Completed Tasks\", \"Task Lists\"]\n        },\n        {\n          title: \"Meetings\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Schedule Meeting\", \"Meeting Rooms\", \"Video Conferences\", \"Meeting History\"]\n        },\n        {\n          title: \"Reminders\",\n          icon: <Bell className=\"w-4 h-4\" />,\n          items: [\"All Reminders\", \"Email Reminders\", \"SMS Reminders\", \"Desktop Notifications\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"Notification Settings\", \"Sharing Settings\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Contacts\": {\n      sections: [\n        {\n          title: \"Contacts\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Contacts\", \"Add Contact\", \"My Contacts\", \"Recent Contacts\", \"Favorites\", \"Duplicates\"]\n        },\n        {\n          title: \"Groups\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Contact Groups\", \"Create Group\", \"Smart Groups\", \"Group Management\"]\n        },\n        {\n          title: \"Lists\",\n          icon: <List className=\"w-4 h-4\" />,\n          items: [\"Mailing Lists\", \"Distribution Lists\", \"Custom Lists\", \"List Management\"]\n        },\n        {\n          title: \"Communication\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Send Email\", \"Send SMS\", \"Communication History\", \"Templates\"]\n        },\n        {\n          title: \"Import/Export\",\n          icon: <Upload className=\"w-4 h-4\" />,\n          items: [\"Import Contacts\", \"Export Contacts\", \"Sync Settings\", \"Data Sources\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"Custom Fields\", \"Privacy Settings\", \"Sync Settings\"]\n        }\n      ]\n    },\n    \"Tasks\": {\n      sections: [\n        {\n          title: \"My Tasks\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"All Tasks\", \"Today's Tasks\", \"This Week\", \"Overdue\", \"Completed\", \"Deleted\"]\n        },\n        {\n          title: \"Projects\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Projects\", \"Active Projects\", \"My Projects\", \"Shared Projects\", \"Templates\"]\n        },\n        {\n          title: \"Lists\",\n          icon: <List className=\"w-4 h-4\" />,\n          items: [\"Task Lists\", \"Create List\", \"Shared Lists\", \"List Templates\"]\n        },\n        {\n          title: \"Calendar\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Task Calendar\", \"Timeline View\", \"Gantt View\", \"Due Dates\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Shared Tasks\", \"Team Tasks\", \"Comments\", \"Attachments\", \"Activity Feed\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Task Reports\", \"Progress Reports\", \"Time Tracking\", \"Productivity Analytics\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"Notification Settings\", \"Integration Settings\", \"Custom Fields\"]\n        }\n      ]\n    },\n    \"Reports\": {\n      sections: [\n        {\n          title: \"Folders\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"All Reports\", \"My Reports\", \"Favorites\", \"Recently Viewed\", \"Scheduled Reports\", \"Recently Deleted\"]\n        },\n        {\n          title: \"Account and Contact Reports\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Account Reports\", \"Contact Reports\", \"Account Contact Relationships\", \"Contact Activity Reports\"]\n        },\n        {\n          title: \"Deal Reports\",\n          icon: <TrendingUp className=\"w-4 h-4\" />,\n          items: [\"Deal Performance\", \"Deal Pipeline\", \"Deal Conversion\", \"Deal Activity\", \"Deal Forecast\"]\n        },\n        {\n          title: \"Lead Reports\",\n          icon: <ArrowRight className=\"w-4 h-4\" />,\n          items: [\"Lead Generation\", \"Lead Conversion\", \"Lead Source Analysis\", \"Lead Activity\", \"Lead Performance\"]\n        },\n        {\n          title: \"Campaign Reports\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Campaign Performance\", \"Campaign ROI\", \"Campaign Analytics\", \"Email Campaign Reports\"]\n        },\n        {\n          title: \"Case and Solution Reports\",\n          icon: <AlertCircle className=\"w-4 h-4\" />,\n          items: [\"Case Reports\", \"Solution Reports\", \"Case Resolution\", \"Support Analytics\"]\n        },\n        {\n          title: \"Product Reports\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Product Performance\", \"Product Analytics\", \"Inventory Reports\", \"Product Catalog\"]\n        },\n        {\n          title: \"Vendor Reports\",\n          icon: <Building2 className=\"w-4 h-4\" />,\n          items: [\"Vendor Performance\", \"Vendor Analysis\", \"Purchase Reports\", \"Vendor Analytics\"]\n        },\n        {\n          title: \"Quote Reports\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Quote Performance\", \"Quote Analysis\", \"Quote Conversion\", \"Quote Activity\"]\n        },\n        {\n          title: \"Sales Order Reports\",\n          icon: <Truck className=\"w-4 h-4\" />,\n          items: [\"Sales Order Performance\", \"Order Analysis\", \"Delivery Reports\", \"Order Tracking\"]\n        },\n        {\n          title: \"Purchase Order Reports\",\n          icon: <Truck className=\"w-4 h-4\" />,\n          items: [\"Purchase Order Performance\", \"Purchase Analysis\", \"Procurement Reports\", \"Purchase Tracking\"]\n        },\n        {\n          title: \"Invoice Reports\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Invoice Performance\", \"Invoice Analysis\", \"Payment Reports\", \"Revenue Reports\"]\n        },\n        {\n          title: \"Sales Metrics Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Sales Performance\", \"Sales Analytics\", \"Revenue Analytics\", \"Sales Forecasting\"]\n        },\n        {\n          title: \"Email Reports\",\n          icon: <Mail className=\"w-4 h-4\" />,\n          items: [\"Email Performance\", \"Email Analytics\", \"Email Campaign Reports\", \"Email Tracking\"]\n        },\n        {\n          title: \"Meeting Reports\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Meeting Performance\", \"Meeting Analytics\", \"Meeting Activity\", \"Meeting Scheduling\"]\n        }\n      ]\n    },\n    \"MarketingHub\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Marketing Dashboard\", \"Campaign Performance\", \"Lead Overview\", \"ROI Analytics\"]\n        },\n        {\n          title: \"Campaigns\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"All Campaigns\", \"Email Campaigns\", \"SMS Campaigns\", \"Social Campaigns\", \"Multi-channel Campaigns\"]\n        },\n        {\n          title: \"Lead Management\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Leads\", \"Lead Scoring\", \"Lead Nurturing\", \"Lead Qualification\", \"Lead Distribution\"]\n        },\n        {\n          title: \"Content\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Content Library\", \"Email Templates\", \"Landing Pages\", \"Forms\", \"Social Content\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Marketing Workflows\", \"Lead Nurturing\", \"Drip Campaigns\", \"Behavioral Triggers\", \"A/B Testing\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Campaign Analytics\", \"Lead Analytics\", \"Revenue Analytics\", \"Attribution Analysis\", \"Custom Reports\"]\n        },\n        {\n          title: \"Integration\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"CRM Integration\", \"Social Media\", \"Web Analytics\", \"Email Services\", \"Third-party Apps\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Account Settings\", \"Team Management\", \"Brand Settings\", \"API Configuration\"]\n        }\n      ]\n    },\n    \"Finances\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Financial Dashboard\", \"Cash Flow\", \"P&L Overview\", \"Key Metrics\", \"Budget vs Actual\"]\n        },\n        {\n          title: \"Transactions\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"All Transactions\", \"Income\", \"Expenses\", \"Transfers\", \"Recurring Transactions\"]\n        },\n        {\n          title: \"Accounts\",\n          icon: <Building2 className=\"w-4 h-4\" />,\n          items: [\"Chart of Accounts\", \"Bank Accounts\", \"Credit Cards\", \"Assets\", \"Liabilities\"]\n        },\n        {\n          title: \"Budgeting\",\n          icon: <Target className=\"w-4 h-4\" />,\n          items: [\"Budget Planning\", \"Budget vs Actual\", \"Variance Analysis\", \"Budget Categories\", \"Forecasting\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Financial Reports\", \"P&L Statement\", \"Balance Sheet\", \"Cash Flow Statement\", \"Custom Reports\"]\n        },\n        {\n          title: \"Reconciliation\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Bank Reconciliation\", \"Credit Card Reconciliation\", \"Account Matching\", \"Reconciliation History\"]\n        },\n        {\n          title: \"Tax Management\",\n          icon: <Calculator className=\"w-4 h-4\" />,\n          items: [\"Tax Categories\", \"Tax Reports\", \"Tax Filing\", \"Deductions\", \"Tax Planning\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"Account Setup\", \"Currency Settings\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Payroll\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Payroll Dashboard\", \"Monthly Overview\", \"Employee Summary\", \"Compliance Status\"]\n        },\n        {\n          title: \"Employees\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Employee Directory\", \"Add Employee\", \"Employee Profiles\", \"Salary Details\", \"Employment History\"]\n        },\n        {\n          title: \"Payroll Processing\",\n          icon: <Calculator className=\"w-4 h-4\" />,\n          items: [\"Run Payroll\", \"Payroll History\", \"Draft Payrolls\", \"Payroll Calendar\", \"Bulk Updates\"]\n        },\n        {\n          title: \"Salary Components\",\n          icon: <DollarSign className=\"w-4 h-4\" />,\n          items: [\"Basic Salary\", \"Allowances\", \"Deductions\", \"Benefits\", \"Bonuses\", \"Overtime\"]\n        },\n        {\n          title: \"Time & Attendance\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Time Tracking\", \"Attendance Reports\", \"Leave Management\", \"Overtime Tracking\", \"Shift Management\"]\n        },\n        {\n          title: \"Tax & Compliance\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Tax Settings\", \"Statutory Compliance\", \"Tax Reports\", \"Form Generation\", \"Audit Trail\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Payroll Reports\", \"Employee Reports\", \"Tax Reports\", \"Compliance Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Organization Settings\", \"Payroll Settings\", \"Tax Configuration\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Webinar\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Webinar Overview\", \"Analytics Dashboard\", \"Upcoming Events\", \"Performance Metrics\"]\n        },\n        {\n          title: \"Webinars\",\n          icon: <Video className=\"w-4 h-4\" />,\n          items: [\"All Webinars\", \"Live Webinars\", \"Scheduled Events\", \"Recurring Webinars\", \"Practice Sessions\"]\n        },\n        {\n          title: \"Registrations\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Attendee Management\", \"Registration Forms\", \"Approval Workflows\", \"Bulk Registration\"]\n        },\n        {\n          title: \"Recordings\",\n          icon: <PlayCircle className=\"w-4 h-4\" />,\n          items: [\"All Recordings\", \"Cloud Storage\", \"Download Center\", \"Sharing Settings\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Attendance Reports\", \"Engagement Analytics\", \"Registration Analytics\", \"Performance Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Webinar Settings\", \"Branding\", \"Email Templates\", \"Integration\"]\n        }\n      ]\n    },\n    \"RouteIQ\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Route Overview\", \"Sales Performance\", \"Territory Analytics\", \"Team Status\"]\n        },\n        {\n          title: \"Routes\",\n          icon: <Navigation className=\"w-4 h-4\" />,\n          items: [\"Route Planning\", \"Optimized Routes\", \"Route History\", \"Multi-day Routes\"]\n        },\n        {\n          title: \"Territories\",\n          icon: <Map className=\"w-4 h-4\" />,\n          items: [\"Territory Management\", \"Territory Assignment\", \"Coverage Analysis\", \"Boundary Settings\"]\n        },\n        {\n          title: \"Maps\",\n          icon: <MapPin className=\"w-4 h-4\" />,\n          items: [\"Interactive Maps\", \"Location Tracking\", \"Geofencing\", \"Map Layers\"]\n        },\n        {\n          title: \"Check-ins\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Visit Tracking\", \"Check-in History\", \"Location Verification\", \"Time Tracking\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Route Reports\", \"Territory Reports\", \"Performance Analytics\", \"Distance Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Route Settings\", \"Map Configuration\", \"Team Management\", \"Integration\"]\n        }\n      ]\n    },\n    \"FSM\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Field Service Overview\", \"Technician Performance\", \"Job Analytics\", \"Revenue Metrics\"]\n        },\n        {\n          title: \"Work Orders\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Work Orders\", \"Open Orders\", \"Scheduled Orders\", \"Completed Orders\", \"Recurring Orders\", \"Emergency Orders\"]\n        },\n        {\n          title: \"Scheduling\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Dispatch Board\", \"Technician Calendar\", \"Auto-scheduling\", \"Route Optimization\", \"Appointment Booking\"]\n        },\n        {\n          title: \"Technicians\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Technician Management\", \"Skills Matrix\", \"Availability\", \"Performance Tracking\", \"Mobile App\"]\n        },\n        {\n          title: \"Inventory\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Parts Management\", \"Stock Levels\", \"Purchase Orders\", \"Supplier Management\", \"Inventory Tracking\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Customer Database\", \"Service History\", \"Equipment Records\", \"Contracts\", \"Customer Portal\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Service Reports\", \"Technician Reports\", \"Revenue Reports\", \"Inventory Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Service Types\", \"SLA Configuration\", \"Mobile Settings\", \"Integration\", \"Billing Settings\"]\n        }\n      ]\n    },\n    \"Billing\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Billing Overview\", \"Revenue Metrics\", \"Subscription Analytics\", \"Payment Status\", \"MRR Tracking\"]\n        },\n        {\n          title: \"Subscriptions\",\n          icon: <RefreshCw className=\"w-4 h-4\" />,\n          items: [\"All Subscriptions\", \"Active Subscriptions\", \"Trials\", \"Cancelled\", \"Subscription Plans\", \"Upgrades & Downgrades\"]\n        },\n        {\n          title: \"Invoices\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Invoices\", \"Draft Invoices\", \"Pending Invoices\", \"Paid Invoices\", \"Overdue Invoices\", \"Credit Notes\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Customer Management\", \"Billing Contacts\", \"Payment Methods\", \"Customer Portal\", \"Dunning Management\"]\n        },\n        {\n          title: \"Payments\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Payment History\", \"Failed Payments\", \"Refunds\", \"Payment Gateways\", \"Payment Links\"]\n        },\n        {\n          title: \"Revenue Recognition\",\n          icon: <TrendingUp className=\"w-4 h-4\" />,\n          items: [\"Revenue Schedules\", \"Deferred Revenue\", \"Revenue Reports\", \"ASC 606 Compliance\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Revenue Analytics\", \"Churn Analysis\", \"Cohort Analysis\", \"Subscription Metrics\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Billing Settings\", \"Tax Settings\", \"Payment Settings\", \"Dunning Settings\", \"Integration\"]\n        }\n      ]\n    },\n    \"Practice\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Practice Overview\", \"Client Portfolio\", \"Revenue Metrics\", \"Team Performance\", \"Deadline Tracking\"]\n        },\n        {\n          title: \"Clients\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Client Management\", \"Client Onboarding\", \"Client Portal\", \"Client Communications\", \"Entity Management\"]\n        },\n        {\n          title: \"Jobs\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Jobs\", \"Tax Preparation\", \"Bookkeeping\", \"Audit & Review\", \"Advisory Services\", \"Job Templates\"]\n        },\n        {\n          title: \"Time Tracking\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Time Entry\", \"Timesheet Approval\", \"Billable Hours\", \"Time Reports\", \"Timer Integration\"]\n        },\n        {\n          title: \"Documents\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"Document Management\", \"Client Documents\", \"Templates\", \"E-signatures\", \"Document Sharing\"]\n        },\n        {\n          title: \"Billing\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Invoice Generation\", \"Fee Management\", \"Payment Tracking\", \"Recurring Billing\", \"Collections\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Financial Reports\", \"Time Reports\", \"Productivity Reports\", \"Client Reports\", \"Tax Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Practice Settings\", \"Team Management\", \"Fee Structure\", \"Tax Settings\", \"Integration\"]\n        }\n      ]\n    },\n    \"Payments\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Payment Overview\", \"Transaction Volume\", \"Success Rates\", \"Revenue Analytics\", \"Gateway Performance\"]\n        },\n        {\n          title: \"Transactions\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"All Transactions\", \"Successful Payments\", \"Failed Payments\", \"Pending Payments\", \"Refunds\"]\n        },\n        {\n          title: \"Payment Gateways\",\n          icon: <Server className=\"w-4 h-4\" />,\n          items: [\"Gateway Management\", \"Multi-gateway Setup\", \"Failover Configuration\", \"Gateway Analytics\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Customer Management\", \"Payment Methods\", \"Transaction History\", \"Customer Insights\"]\n        },\n        {\n          title: \"Fraud Protection\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Fraud Detection\", \"Risk Rules\", \"Blocked Transactions\", \"Whitelist Management\"]\n        },\n        {\n          title: \"Reconciliation\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Settlement Reports\", \"Bank Reconciliation\", \"Dispute Management\", \"Chargeback Handling\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Payment Analytics\", \"Revenue Reports\", \"Gateway Performance\", \"Customer Analytics\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Payment Configuration\", \"Security Settings\", \"Webhook Management\", \"API Keys\"]\n        }\n      ]\n    },\n    \"ZeptoMail\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Email Analytics\", \"Delivery Dashboard\", \"Bounce Analytics\", \"Performance Overview\", \"Recent Activity\"]\n        },\n        {\n          title: \"Email Management\",\n          icon: <Mail className=\"w-4 h-4\" />,\n          items: [\"Compose Email\", \"Email Templates\", \"Scheduled Emails\", \"Draft Emails\", \"Sent Emails\", \"Bounced Emails\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Templates\", \"Email Templates\", \"Custom Templates\", \"Template Categories\", \"Shared Templates\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Email Performance\", \"Delivery Reports\", \"Open Rates\", \"Click Rates\", \"Bounce Reports\", \"Spam Reports\"]\n        },\n        {\n          title: \"Domain Management\",\n          icon: <Globe className=\"w-4 h-4\" />,\n          items: [\"Verified Domains\", \"Domain Authentication\", \"SPF Records\", \"DKIM Settings\", \"Domain Reputation\"]\n        },\n        {\n          title: \"API Integration\",\n          icon: <Code className=\"w-4 h-4\" />,\n          items: [\"API Documentation\", \"API Keys\", \"Webhooks\", \"Integration Guide\", \"SDK Downloads\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Account Settings\", \"Email Configuration\", \"Security Settings\", \"Team Management\", \"Billing\"]\n        }\n      ]\n    },\n    \"Office Integrator\": {\n      sections: [\n        {\n          title: \"Documents\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Recent Documents\", \"All Documents\", \"Shared Documents\", \"Favorites\", \"Document Templates\"]\n        },\n        {\n          title: \"Editor\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Word Processor\", \"Spreadsheet Editor\", \"Presentation Editor\", \"Form Builder\", \"Document Viewer\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Real-time Editing\", \"Comments & Reviews\", \"Version History\", \"Share Settings\", \"Team Workspaces\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <Bookmark className=\"w-4 h-4\" />,\n          items: [\"Document Templates\", \"Form Templates\", \"Report Templates\", \"Letter Templates\", \"Custom Templates\"]\n        },\n        {\n          title: \"Integration\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"API Integration\", \"Embed Options\", \"Third-party Apps\", \"Webhooks\", \"Developer Tools\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Editor Preferences\", \"Format Settings\", \"Security Options\", \"Export Options\", \"Admin Panel\"]\n        }\n      ]\n    },\n    \"Tables\": {\n      sections: [\n        {\n          title: \"Tables\",\n          icon: <Table className=\"w-4 h-4\" />,\n          items: [\"All Tables\", \"Recent Tables\", \"Shared Tables\", \"Templates\", \"Archived Tables\"]\n        },\n        {\n          title: \"Forms\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Forms\", \"Form Builder\", \"Form Responses\", \"Published Forms\", \"Form Analytics\"]\n        },\n        {\n          title: \"Workflows\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"All Workflows\", \"Workflow Builder\", \"Automation Rules\", \"Triggered Actions\", \"Workflow History\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Data Reports\", \"Visual Reports\", \"Custom Reports\", \"Scheduled Reports\", \"Report Builder\"]\n        },\n        {\n          title: \"Data Management\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Import Data\", \"Export Data\", \"Data Validation\", \"Bulk Operations\", \"Data Backup\"]\n        },\n        {\n          title: \"Team Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Team Members\", \"Permissions\", \"Comments\", \"Activity Log\", \"Notifications\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Table Settings\", \"Access Control\", \"Integrations\", \"API Settings\", \"Account Preferences\"]\n        }\n      ]\n    },\n    \"Office Suite\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Dashboard\", \"Recent Files\", \"Quick Access\", \"Team Activity\", \"Getting Started\"]\n        },\n        {\n          title: \"Documents\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Documents\", \"Word Documents\", \"Text Files\", \"Document Templates\", \"Shared Documents\"]\n        },\n        {\n          title: \"Spreadsheets\",\n          icon: <Table className=\"w-4 h-4\" />,\n          items: [\"All Spreadsheets\", \"Excel Files\", \"CSV Files\", \"Data Analysis\", \"Spreadsheet Templates\"]\n        },\n        {\n          title: \"Presentations\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"All Presentations\", \"PowerPoint Files\", \"Slide Templates\", \"Presentation Themes\", \"Shared Presentations\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Team Workspaces\", \"Real-time Editing\", \"Comments & Reviews\", \"Version Control\", \"Share Settings\"]\n        },\n        {\n          title: \"Storage\",\n          icon: <Cloud className=\"w-4 h-4\" />,\n          items: [\"File Manager\", \"Recent Files\", \"Shared Files\", \"Storage Usage\", \"File Recovery\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Suite Preferences\", \"Account Settings\", \"Security Options\", \"Integration Settings\", \"Admin Panel\"]\n        }\n      ]\n    },\n    \"ToDo\": {\n      sections: [\n        {\n          title: \"Tasks\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"All Tasks\", \"My Tasks\", \"Today's Tasks\", \"Overdue Tasks\", \"Completed Tasks\", \"Recurring Tasks\"]\n        },\n        {\n          title: \"Projects\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Projects\", \"Active Projects\", \"My Projects\", \"Shared Projects\", \"Project Templates\", \"Archived Projects\"]\n        },\n        {\n          title: \"Teams\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Team Tasks\", \"Team Projects\", \"Team Members\", \"Task Assignment\", \"Team Activity\", \"Permissions\"]\n        },\n        {\n          title: \"Calendar\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Task Calendar\", \"Due Dates\", \"Schedule View\", \"Calendar Integration\", \"Timeline View\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Task Reports\", \"Project Reports\", \"Team Performance\", \"Time Tracking\", \"Productivity Analytics\"]\n        },\n        {\n          title: \"Labels & Filters\",\n          icon: <Tag className=\"w-4 h-4\" />,\n          items: [\"Task Labels\", \"Custom Filters\", \"Smart Lists\", \"Saved Searches\", \"Priority Levels\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Task Preferences\", \"Notification Settings\", \"Integration Settings\", \"Team Settings\", \"Account Settings\"]\n        }\n      ]\n    },\n    \"PDF Editor\": {\n      sections: [\n        {\n          title: \"Editor\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Edit PDF\", \"Text Editing\", \"Image Editing\", \"Page Management\", \"Annotation Tools\"]\n        },\n        {\n          title: \"Forms\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Create Forms\", \"Fill Forms\", \"Form Templates\", \"Interactive Forms\", \"Form Fields\"]\n        },\n        {\n          title: \"Convert\",\n          icon: <RefreshCw className=\"w-4 h-4\" />,\n          items: [\"PDF to Word\", \"PDF to Excel\", \"PDF to Image\", \"Word to PDF\", \"HTML to PDF\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Share Documents\", \"Comments & Reviews\", \"Version Control\", \"Team Collaboration\", \"Document History\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Lock className=\"w-4 h-4\" />,\n          items: [\"Password Protection\", \"Digital Signatures\", \"Encryption\", \"Watermarks\", \"Permission Settings\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <Bookmark className=\"w-4 h-4\" />,\n          items: [\"Document Templates\", \"Form Templates\", \"Letter Templates\", \"Report Templates\", \"Custom Templates\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Editor Preferences\", \"Export Settings\", \"Security Options\", \"Integration Settings\", \"Account Settings\"]\n        }\n      ]\n    },\n    \"Shifts\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Today's Schedule\", \"Team Overview\", \"Shift Statistics\", \"Quick Actions\", \"Recent Activity\"]\n        },\n        {\n          title: \"Schedule\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"View Schedule\", \"Create Schedule\", \"Shift Templates\", \"Recurring Shifts\", \"Schedule Conflicts\"]\n        },\n        {\n          title: \"Employees\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Employees\", \"Shift Assignments\", \"Employee Availability\", \"Skill Sets\", \"Employee Profiles\"]\n        },\n        {\n          title: \"Time Tracking\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Clock In/Out\", \"Time Logs\", \"Break Management\", \"Overtime Tracking\", \"Time Corrections\"]\n        },\n        {\n          title: \"Attendance\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Attendance Reports\", \"Absence Management\", \"Late Arrivals\", \"Early Departures\", \"Attendance Policies\"]\n        },\n        {\n          title: \"Requests\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Shift Requests\", \"Time Off Requests\", \"Swap Requests\", \"Overtime Requests\", \"Request Approvals\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Schedule Reports\", \"Attendance Reports\", \"Labor Cost Reports\", \"Productivity Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Shift Settings\", \"Employee Settings\", \"Notification Settings\", \"Integration Settings\", \"Company Settings\"]\n        }\n      ]\n    },\n    \"Contracts\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Contract Overview\", \"Recent Activity\", \"Pending Actions\", \"Contract Analytics\", \"Quick Stats\"]\n        },\n        {\n          title: \"Contracts\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Contracts\", \"Active Contracts\", \"Draft Contracts\", \"Expired Contracts\", \"Archived Contracts\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <Bookmark className=\"w-4 h-4\" />,\n          items: [\"Contract Templates\", \"Clause Library\", \"Standard Terms\", \"Custom Templates\", \"Template Categories\"]\n        },\n        {\n          title: \"Workflow\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Approval Workflows\", \"Review Process\", \"Signature Workflows\", \"Automated Actions\", \"Workflow Builder\"]\n        },\n        {\n          title: \"Compliance\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Compliance Tracking\", \"Regulatory Requirements\", \"Audit Trail\", \"Risk Assessment\", \"Compliance Reports\"]\n        },\n        {\n          title: \"Reporting\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Contract Reports\", \"Performance Analytics\", \"Renewal Reports\", \"Compliance Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Contract Settings\", \"Workflow Settings\", \"User Management\", \"Integration Settings\", \"Security Settings\"]\n        }\n      ]\n    },\n    \"Catalyst\": {\n      sections: [\n        {\n          title: \"Functions\",\n          icon: <Code className=\"w-4 h-4\" />,\n          items: [\"All Functions\", \"HTTP Functions\", \"Cron Functions\", \"Event Functions\", \"Function Templates\", \"Function Logs\"]\n        },\n        {\n          title: \"Database\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Tables\", \"Data Browser\", \"Query Builder\", \"Database Backup\", \"Migrations\", \"Database Analytics\"]\n        },\n        {\n          title: \"Deployments\",\n          icon: <Upload className=\"w-4 h-4\" />,\n          items: [\"Project Deployments\", \"Version History\", \"Build Logs\", \"Environment Variables\", \"Custom Domains\"]\n        },\n        {\n          title: \"File Storage\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"File Manager\", \"Upload Files\", \"Download Files\", \"File Permissions\", \"Storage Analytics\"]\n        },\n        {\n          title: \"Authentication\",\n          icon: <Lock className=\"w-4 h-4\" />,\n          items: [\"User Management\", \"Auth Settings\", \"Social Login\", \"Custom Authentication\", \"Security Rules\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Function Analytics\", \"Database Analytics\", \"Performance Metrics\", \"Error Tracking\", \"Usage Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Project Settings\", \"Environment Settings\", \"API Settings\", \"Team Settings\", \"Billing\"]\n        }\n      ]\n    },\n    \"RPA\": {\n      sections: [\n        {\n          title: \"Bots\",\n          icon: <Bot className=\"w-4 h-4\" />,\n          items: [\"All Bots\", \"Active Bots\", \"Scheduled Bots\", \"Bot Templates\", \"Bot Library\", \"Failed Bots\"]\n        },\n        {\n          title: \"Workflows\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"All Workflows\", \"Workflow Builder\", \"Workflow Templates\", \"Automated Workflows\", \"Workflow History\"]\n        },\n        {\n          title: \"Schedule\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Scheduled Tasks\", \"Recurring Jobs\", \"Job Calendar\", \"Schedule Management\", \"Time Triggers\"]\n        },\n        {\n          title: \"Monitoring\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"Bot Performance\", \"Execution Logs\", \"Error Monitoring\", \"Real-time Status\", \"System Health\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Execution Analytics\", \"Performance Reports\", \"Success Rates\", \"Error Analysis\", \"Time Savings\"]\n        },\n        {\n          title: \"Integration\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"API Integration\", \"Third-party Apps\", \"Database Connections\", \"Web Services\", \"Custom Connectors\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Bot Settings\", \"Security Settings\", \"Notification Settings\", \"Team Management\", \"License Management\"]\n        }\n      ]\n    },\n    \"QEngine\": {\n      sections: [\n        {\n          title: \"Tests\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"All Tests\", \"Test Cases\", \"Test Scripts\", \"Manual Tests\", \"Automated Tests\", \"Test Templates\"]\n        },\n        {\n          title: \"Test Suites\",\n          icon: <List className=\"w-4 h-4\" />,\n          items: [\"All Suites\", \"Regression Suites\", \"Smoke Tests\", \"Integration Tests\", \"Performance Tests\"]\n        },\n        {\n          title: \"Execution\",\n          icon: <PlayCircle className=\"w-4 h-4\" />,\n          items: [\"Test Execution\", \"Test Runs\", \"Scheduled Runs\", \"Parallel Execution\", \"Test Results\"]\n        },\n        {\n          title: \"Results\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Test Results\", \"Failed Tests\", \"Passed Tests\", \"Test History\", \"Result Analysis\"]\n        },\n        {\n          title: \"Defects\",\n          icon: <AlertCircle className=\"w-4 h-4\" />,\n          items: [\"All Defects\", \"Open Defects\", \"Defect Tracking\", \"Bug Reports\", \"Defect Analysis\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Test Reports\", \"Coverage Reports\", \"Quality Reports\", \"Performance Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Test Configuration\", \"Environment Settings\", \"Integration Settings\", \"Team Settings\", \"Project Settings\"]\n        }\n      ]\n    },\n    \"eProtect\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Security Overview\", \"Threat Dashboard\", \"Email Analytics\", \"Protection Status\", \"Recent Activity\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Threat Protection\", \"Anti-spam\", \"Anti-virus\", \"Email Encryption\", \"Security Policies\"]\n        },\n        {\n          title: \"Archive\",\n          icon: <Archive className=\"w-4 h-4\" />,\n          items: [\"Email Archive\", \"Archived Messages\", \"Search Archive\", \"Archive Policies\", \"Data Retention\"]\n        },\n        {\n          title: \"Policies\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Security Policies\", \"Compliance Policies\", \"Content Filtering\", \"Data Loss Prevention\", \"Policy Management\"]\n        },\n        {\n          title: \"Compliance\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Compliance Reports\", \"Audit Logs\", \"Regulatory Compliance\", \"Legal Hold\", \"eDiscovery\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Security Reports\", \"Archive Reports\", \"Compliance Reports\", \"Threat Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Security Settings\", \"Archive Settings\", \"Policy Settings\", \"User Management\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Toolkit\": {\n      sections: [\n        {\n          title: \"Queries\",\n          icon: <Search className=\"w-4 h-4\" />,\n          items: [\"Database Queries\", \"Custom Queries\", \"Saved Queries\", \"Query Builder\", \"Query History\"]\n        },\n        {\n          title: \"Tools\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Admin Tools\", \"Database Tools\", \"System Tools\", \"Diagnostic Tools\", \"Maintenance Tools\"]\n        },\n        {\n          title: \"Data Analysis\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Data Explorer\", \"Data Reports\", \"Performance Analysis\", \"Usage Statistics\", \"Data Insights\"]\n        },\n        {\n          title: \"System Monitoring\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"System Status\", \"Performance Monitoring\", \"Resource Usage\", \"Error Logs\", \"Health Checks\"]\n        },\n        {\n          title: \"Administration\",\n          icon: <User className=\"w-4 h-4\" />,\n          items: [\"User Management\", \"Permission Management\", \"System Configuration\", \"Backup Management\", \"Security Settings\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"System Reports\", \"Usage Reports\", \"Performance Reports\", \"Security Reports\", \"Custom Reports\"]\n        }\n      ]\n    },\n    \"ManageEngine\": {\n      sections: [\n        {\n          title: \"Assets\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"IT Assets\", \"Hardware Assets\", \"Software Assets\", \"Asset Discovery\", \"Asset Lifecycle\", \"Asset Reports\"]\n        },\n        {\n          title: \"Network\",\n          icon: <Wifi className=\"w-4 h-4\" />,\n          items: [\"Network Monitoring\", \"Device Management\", \"Network Topology\", \"Performance Monitoring\", \"Network Reports\"]\n        },\n        {\n          title: \"Help Desk\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Tickets\", \"Incident Management\", \"Problem Management\", \"Change Management\", \"Knowledge Base\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Security Monitoring\", \"Vulnerability Assessment\", \"Patch Management\", \"Compliance Management\", \"Security Reports\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"IT Analytics\", \"Performance Analytics\", \"Cost Analytics\", \"Usage Analytics\", \"Custom Dashboards\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"IT Automation\", \"Workflow Automation\", \"Scheduled Tasks\", \"Policy Automation\", \"Process Automation\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"System Settings\", \"User Management\", \"Integration Settings\", \"Notification Settings\", \"License Management\"]\n        }\n      ]\n    },\n    \"IoT\": {\n      sections: [\n        {\n          title: \"Devices\",\n          icon: <Smartphone className=\"w-4 h-4\" />,\n          items: [\"All Devices\", \"Device Registry\", \"Device Status\", \"Device Groups\", \"Device Configuration\", \"Device Logs\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Device Analytics\", \"Data Visualization\", \"Performance Metrics\", \"Usage Analytics\", \"Predictive Analytics\"]\n        },\n        {\n          title: \"Monitoring\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"Real-time Monitoring\", \"Device Health\", \"Performance Monitoring\", \"Alert Management\", \"System Status\"]\n        },\n        {\n          title: \"Data Management\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Data Streams\", \"Data Storage\", \"Data Processing\", \"Data Export\", \"Data Quality\"]\n        },\n        {\n          title: \"Alerts & Rules\",\n          icon: <Bell className=\"w-4 h-4\" />,\n          items: [\"Alert Rules\", \"Notifications\", \"Threshold Settings\", \"Automated Actions\", \"Escalation Rules\"]\n        },\n        {\n          title: \"Integration\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"API Integration\", \"Third-party Connectors\", \"Data Export\", \"Webhook Configuration\", \"Custom Integration\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Device Settings\", \"Data Settings\", \"Security Settings\", \"User Management\", \"Account Settings\"]\n        }\n      ]\n    },\n    \"Embedded BI\": {\n      sections: [\n        {\n          title: \"Embeds\",\n          icon: <Code className=\"w-4 h-4\" />,\n          items: [\"All Embeds\", \"Dashboard Embeds\", \"Report Embeds\", \"Chart Embeds\", \"Widget Embeds\", \"Custom Embeds\"]\n        },\n        {\n          title: \"APIs\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"API Documentation\", \"REST APIs\", \"JavaScript APIs\", \"SDK Downloads\", \"API Testing\", \"Authentication\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Usage Analytics\", \"Performance Metrics\", \"User Analytics\", \"Embed Analytics\", \"API Analytics\"]\n        },\n        {\n          title: \"White-label\",\n          icon: <Palette className=\"w-4 h-4\" />,\n          items: [\"Branding Options\", \"Custom Themes\", \"Logo Management\", \"Color Schemes\", \"UI Customization\"]\n        },\n        {\n          title: \"Data Sources\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Connect Data\", \"Database Connections\", \"File Uploads\", \"Cloud Connectors\", \"Data Refresh\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Access Control\", \"Domain Management\", \"User Authentication\", \"Encryption Settings\", \"Security Policies\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Embed Settings\", \"API Settings\", \"Integration Settings\", \"Account Settings\", \"Billing\"]\n        }\n      ]\n    },\n    \"Domains\": {\n      sections: [\n        {\n          title: \"Domains\",\n          icon: <Globe className=\"w-4 h-4\" />,\n          items: [\"All Domains\", \"Active Domains\", \"Expired Domains\", \"Pending Domains\", \"Domain Search\", \"Domain Transfer\"]\n        },\n        {\n          title: \"DNS Management\",\n          icon: <Server className=\"w-4 h-4\" />,\n          items: [\"DNS Records\", \"A Records\", \"CNAME Records\", \"MX Records\", \"TXT Records\", \"DNS Analytics\"]\n        },\n        {\n          title: \"SSL Certificates\",\n          icon: <Lock className=\"w-4 h-4\" />,\n          items: [\"SSL Certificates\", \"Certificate Installation\", \"Certificate Renewal\", \"Wildcard SSL\", \"SSL Analytics\"]\n        },\n        {\n          title: \"Website Builder\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Build Website\", \"Website Templates\", \"Landing Pages\", \"Website Analytics\", \"Mobile Optimization\"]\n        },\n        {\n          title: \"Email Setup\",\n          icon: <Mail className=\"w-4 h-4\" />,\n          items: [\"Email Accounts\", \"Email Forwarding\", \"Email Hosting\", \"Email Security\", \"Email Analytics\"]\n        },\n        {\n          title: \"WHOIS & Privacy\",\n          icon: <Eye className=\"w-4 h-4\" />,\n          items: [\"WHOIS Information\", \"Domain Privacy\", \"Contact Information\", \"Privacy Protection\", \"Domain Lock\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Domain Settings\", \"DNS Settings\", \"Security Settings\", \"Billing Settings\", \"Renewal Settings\"]\n        }\n      ]\n    },\n    \"CommunitySpaces\": {\n      sections: [\n        {\n          title: \"Communities\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Communities\", \"My Communities\", \"Public Communities\", \"Private Communities\", \"Community Templates\"]\n        },\n        {\n          title: \"Members\",\n          icon: <User className=\"w-4 h-4\" />,\n          items: [\"All Members\", \"Member Profiles\", \"Member Roles\", \"Member Analytics\", \"Member Invitations\"]\n        },\n        {\n          title: \"Posts & Content\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Posts\", \"Popular Posts\", \"Recent Posts\", \"Content Categories\", \"Content Moderation\"]\n        },\n        {\n          title: \"Forums\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Discussion Forums\", \"Forum Topics\", \"Forum Categories\", \"Forum Moderation\", \"Forum Analytics\"]\n        },\n        {\n          title: \"Engagement\",\n          icon: <Heart className=\"w-4 h-4\" />,\n          items: [\"Member Engagement\", \"Community Events\", \"Gamification\", \"Rewards System\", \"Engagement Analytics\"]\n        },\n        {\n          title: \"Moderation\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Content Moderation\", \"User Management\", \"Community Guidelines\", \"Reporting System\", \"Moderation Tools\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Community Analytics\", \"Member Analytics\", \"Content Analytics\", \"Engagement Metrics\", \"Growth Analytics\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Community Settings\", \"Privacy Settings\", \"Notification Settings\", \"Integration Settings\", \"Theme Settings\"]\n        }\n      ]\n    },\n    \"Publish\": {\n      sections: [\n        {\n          title: \"Listings\",\n          icon: <MapPin className=\"w-4 h-4\" />,\n          items: [\"All Listings\", \"Google My Business\", \"Bing Places\", \"Apple Maps\", \"Local Directories\", \"Industry Listings\"]\n        },\n        {\n          title: \"Reviews\",\n          icon: <Star className=\"w-4 h-4\" />,\n          items: [\"All Reviews\", \"Google Reviews\", \"Facebook Reviews\", \"Yelp Reviews\", \"Review Monitoring\", \"Review Responses\"]\n        },\n        {\n          title: \"Local SEO\",\n          icon: <Search className=\"w-4 h-4\" />,\n          items: [\"SEO Performance\", \"Keyword Tracking\", \"Local Rankings\", \"Citation Building\", \"SEO Analytics\"]\n        },\n        {\n          title: \"Social Posts\",\n          icon: <Share2 className=\"w-4 h-4\" />,\n          items: [\"Social Media Posts\", \"Google Posts\", \"Facebook Posts\", \"Post Scheduling\", \"Social Analytics\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Listing Analytics\", \"Review Analytics\", \"SEO Analytics\", \"Social Analytics\", \"Performance Reports\"]\n        },\n        {\n          title: \"Reputation Management\",\n          icon: <ThumbsUp className=\"w-4 h-4\" />,\n          items: [\"Reputation Monitoring\", \"Review Management\", \"Response Templates\", \"Sentiment Analysis\", \"Reputation Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Business Information\", \"Listing Settings\", \"Review Settings\", \"Notification Settings\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Apptics\": {\n      sections: [\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"App Analytics\", \"User Analytics\", \"Performance Analytics\", \"Custom Analytics\", \"Real-time Analytics\"]\n        },\n        {\n          title: \"Users\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"User Behavior\", \"User Segments\", \"User Journey\", \"User Retention\", \"User Acquisition\"]\n        },\n        {\n          title: \"Performance\",\n          icon: <TrendingUp className=\"w-4 h-4\" />,\n          items: [\"App Performance\", \"Load Times\", \"Crash Reports\", \"Error Tracking\", \"Performance Optimization\"]\n        },\n        {\n          title: \"Events\",\n          icon: <Target className=\"w-4 h-4\" />,\n          items: [\"Custom Events\", \"Event Tracking\", \"Conversion Events\", \"Event Analytics\", \"Event Funnels\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Standard Reports\", \"Custom Reports\", \"Scheduled Reports\", \"Export Reports\", \"Report Builder\"]\n        },\n        {\n          title: \"Integration\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"SDK Integration\", \"API Integration\", \"Third-party Tools\", \"Data Export\", \"Custom Integration\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"App Settings\", \"Analytics Settings\", \"Privacy Settings\", \"Team Settings\", \"Account Settings\"]\n        }\n      ]\n    },\n    // Default navigation for apps without specific structure\n    \"Default\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Overview\", \"Recent Activity\", \"Quick Stats\", \"Performance Metrics\"]\n        },\n        {\n          title: \"Main Features\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Core Features\", \"Advanced Tools\", \"Automation\", \"Workflows\", \"Templates\"]\n        },\n        {\n          title: \"Data Management\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"All Records\", \"Import/Export\", \"Data Views\", \"Search\", \"Bulk Operations\", \"Data Quality\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Team Workspace\", \"Sharing\", \"Comments\", \"Notifications\", \"User Activity\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Standard Reports\", \"Custom Reports\", \"Analytics\", \"Export\", \"Scheduled Reports\", \"Dashboards\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"User Management\", \"Preferences\", \"Integrations\", \"API Access\", \"Security\"]\n        }\n      ]\n    }\n  };\n\n  // Return specific navigation or default for any unmapped apps\n  return navigationMap[appName] || navigationMap[\"Default\"];\n};\n\nexport default function AppSidebar({ app, category, currentPage = \"Dashboard\" }: AppSidebarProps) {\n  const [expandedSections, setExpandedSections] = useState<string[]>([\"Dashboard\"]);\n  const navigation = getAppNavigation(app.name);\n\n  const toggleSection = (sectionTitle: string) => {\n    setExpandedSections(prev => \n      prev.includes(sectionTitle) \n        ? prev.filter(s => s !== sectionTitle)\n        : [...prev, sectionTitle]\n    );\n  };\n\n  return (\n    <div className=\"w-64 bg-aura-dark-secondary border-r border-aura-gray h-full flex flex-col\">\n      {/* App Header */}\n      <div className=\"p-4 border-b border-aura-gray\">\n        <div className=\"flex items-center space-x-3\">\n          <div \n            className=\"p-2 rounded-lg\"\n            style={{ \n              backgroundColor: `${category.color}20`,\n              color: category.color \n            }}\n          >\n            <i className={`${app.icon} text-lg`}></i>\n          </div>\n          <div>\n            <h2 className=\"font-bold text-lg\">{app.name}</h2>\n            <p className=\"text-xs text-gray-400\">{category.name}</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation Menu */}\n      <ScrollArea className=\"flex-1 p-2\">\n        <nav className=\"space-y-1\">\n          {navigation.sections.map((section: any, sectionIndex: number) => {\n            const isExpanded = expandedSections.includes(section.title);\n            \n            return (\n              <div key={sectionIndex} className=\"space-y-1\">\n                <button\n                  onClick={() => toggleSection(section.title)}\n                  className={`\n                    w-full flex items-center justify-between px-3 py-2 rounded-md text-sm font-medium transition-colors\n                    ${section.title === \"Dashboard\" && currentPage === \"Dashboard\" \n                      ? `text-black` \n                      : \"text-gray-300 hover:text-white hover:bg-aura-gray/50\"\n                    }\n                  `}\n                  style={section.title === \"Dashboard\" && currentPage === \"Dashboard\" ? {\n                    backgroundColor: category.color,\n                    color: '#000'\n                  } : {}}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    {section.icon}\n                    <span>{section.title}</span>\n                  </div>\n                  {isExpanded ? (\n                    <ChevronDown className=\"w-4 h-4\" />\n                  ) : (\n                    <ChevronRight className=\"w-4 h-4\" />\n                  )}\n                </button>\n\n                {isExpanded && (\n                  <div className=\"ml-6 space-y-1\">\n                    {section.items.map((item: string, itemIndex: number) => (\n                      <Link \n                        key={itemIndex}\n                        href={`/app/${app.id}/${section.title.toLowerCase()}/${item.toLowerCase().replace(/\\s+/g, '-')}`}\n                      >\n                        <div\n                          className={`\n                            block px-3 py-1.5 text-sm rounded-md transition-colors cursor-pointer\n                            ${currentPage === item\n                              ? `text-black font-medium`\n                              : \"text-gray-400 hover:text-white hover:bg-aura-gray/30\"\n                            }\n                          `}\n                          style={currentPage === item ? {\n                            backgroundColor: `${category.color}40`,\n                            color: category.color\n                          } : {}}\n                        >\n                          {item}\n                        </div>\n                      </Link>\n                    ))}\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </nav>\n      </ScrollArea>\n\n      {/* Quick Actions Footer */}\n      <div className=\"p-4 border-t border-aura-gray\">\n        <div className=\"space-y-2\">\n          <Button \n            size=\"sm\" \n            className=\"w-full justify-start text-xs\"\n            style={{ \n              backgroundColor: `${category.color}20`,\n              color: category.color,\n              border: `1px solid ${category.color}40`\n            }}\n          >\n            <Zap className=\"w-3 h-3 mr-2\" />\n            Quick Add\n          </Button>\n          <Button \n            size=\"sm\" \n            variant=\"ghost\" \n            className=\"w-full justify-start text-xs text-gray-400 hover:text-white\"\n          >\n            <Settings className=\"w-3 h-3 mr-2\" />\n            Settings\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":148593},"client/src/pages/all-apps.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { type Category, type App } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Link } from \"wouter\";\nimport SearchBar from \"@/components/search-bar\";\nimport { ArrowLeft } from \"lucide-react\";\n\nexport default function AllApps() {\n  const { data: categories, isLoading: categoriesLoading } = useQuery<Category[]>({\n    queryKey: [\"/api/categories\"],\n  });\n\n  const { data: apps, isLoading: appsLoading } = useQuery<App[]>({\n    queryKey: [\"/api/apps\"],\n  });\n\n  // Group apps by category\n  const appsByCategory = categories?.reduce((acc, category) => {\n    acc[category.id] = apps?.filter(app => app.categoryId === category.id) || [];\n    return acc;\n  }, {} as Record<string, App[]>) || {};\n\n  if (categoriesLoading || appsLoading) {\n    return (\n      <div className=\"min-h-screen bg-aura-dark pt-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-6 gap-4\">\n            {Array.from({ length: 24 }).map((_, i) => (\n              <Skeleton key={i} className=\"h-40 rounded-lg\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-aura-dark pt-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-8\">\n          <div>\n            <Link href=\"/\">\n              <Button variant=\"ghost\" className=\"mb-4 text-gray-300 hover:text-white\">\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Back to Home\n              </Button>\n            </Link>\n            <h1 className=\"text-4xl font-bold mb-2\">All Applications</h1>\n            <p className=\"text-gray-300\">Complete directory of all {apps?.length || 0} apps across {categories?.length || 0} categories</p>\n          </div>\n        </div>\n\n        {/* Search */}\n        <div className=\"mb-8\">\n          <SearchBar />\n        </div>\n\n        {/* Apps organized by category */}\n        <div className=\"space-y-12\">\n          {categories?.map((category) => {\n            const categoryApps = appsByCategory[category.id] || [];\n            if (categoryApps.length === 0) return null;\n\n            return (\n              <div key={category.id} className=\"space-y-6\">\n                {/* Category Header */}\n                <div className=\"flex items-center space-x-4 border-b border-aura-gray pb-4\">\n                  <i className={`${category.icon} text-3xl`} style={{ color: category.color }}></i>\n                  <div className=\"flex-1\">\n                    <h2 className=\"text-2xl font-bold\">{category.name}</h2>\n                    <p className=\"text-gray-400\">{category.description}</p>\n                  </div>\n                  <span \n                    className=\"text-black text-sm px-4 py-2 rounded-full font-semibold\"\n                    style={{ backgroundColor: category.color }}\n                  >\n                    {categoryApps.length} Apps\n                  </span>\n                </div>\n\n                {/* Apps Grid */}\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-4\">\n                  {categoryApps.map((app) => (\n                    <Link key={app.id} href={`/app/${app.id}`}>\n                      <div className=\"bg-aura-dark-secondary rounded-xl p-6 cursor-pointer transition-all duration-300 hover:scale-105 hover:shadow-xl border border-transparent hover:border-opacity-50\" style={{ borderColor: `${category.color}40` }}>\n                        <div className=\"text-center\">\n                          <div \n                            className=\"w-16 h-16 rounded-2xl mx-auto mb-4 flex items-center justify-center\"\n                            style={{ backgroundColor: `${category.color}20` }}\n                          >\n                            <i \n                              className={`${app.icon} text-2xl`} \n                              style={{ color: category.color }}\n                            ></i>\n                          </div>\n                          <h3 className=\"font-bold mb-2 text-white\">{app.name}</h3>\n                          <p className=\"text-xs text-gray-400 mb-4 line-clamp-2\">{app.description}</p>\n                          \n                          {/* Features preview */}\n                          <div className=\"space-y-1 mb-4\">\n                            {app.features.slice(0, 3).map((feature, idx) => (\n                              <div key={idx} className=\"text-xs text-gray-500 truncate\">\n                                • {feature}\n                              </div>\n                            ))}\n                          </div>\n\n                          {/* Shortcuts */}\n                          <div className=\"flex flex-wrap gap-1 justify-center\">\n                            {app.shortcuts.slice(0, 3).map((shortcut, idx) => (\n                              <span \n                                key={idx}\n                                className=\"text-xs px-2 py-1 rounded-full\"\n                                style={{ \n                                  backgroundColor: `${category.color}10`,\n                                  color: category.color,\n                                  border: `1px solid ${category.color}30`\n                                }}\n                              >\n                                {shortcut}\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Summary Footer */}\n        <div className=\"mt-16 text-center bg-aura-dark-secondary rounded-2xl p-8 border border-aura-gray\">\n          <h3 className=\"text-2xl font-bold mb-4\">Complete Business Suite</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div>\n              <div className=\"text-3xl font-bold gradient-text\">{apps?.length || 0}</div>\n              <div className=\"text-gray-400\">Total Apps</div>\n            </div>\n            <div>\n              <div className=\"text-3xl font-bold gradient-text\">{categories?.length || 0}</div>\n              <div className=\"text-gray-400\">Categories</div>\n            </div>\n            <div>\n              <div className=\"text-3xl font-bold gradient-text\">\n                {apps?.reduce((sum, app) => sum + app.features.length, 0) || 0}\n              </div>\n              <div className=\"text-gray-400\">Features</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":6888},"FutureHome/drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"FutureHome/postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"FutureHome/replit.md":{"content":"# Aura - Next Generation Business Suite\n\n## Overview\n\nAura is a comprehensive business suite application inspired by Zoho's ecosystem, designed to provide 80+ integrated applications across multiple business categories. The platform features a modern, futuristic design with a dark theme and neon accents, targeting enterprise users who need a unified platform for managing various business operations from sales and marketing to finance and project management.\n\nThe application is built as a full-stack web application with a React frontend and Express backend, featuring a clean architecture that separates concerns between client, server, and shared components. The system is designed to showcase different business application categories, individual apps within those categories, and curated business suites.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern development practices\n- **Routing**: Wouter for lightweight client-side routing with pages for home, category views, and individual app details\n- **State Management**: TanStack Query (React Query) for server state management, caching, and data synchronization\n- **Styling**: Tailwind CSS with custom design system featuring dark theme, neon accents, and glassmorphism effects\n- **UI Components**: Radix UI primitives with shadcn/ui component library for consistent, accessible interface elements\n- **Build Tool**: Vite for fast development and optimized production builds\n\n### Backend Architecture\n- **Framework**: Express.js with TypeScript providing RESTful API endpoints\n- **Data Layer**: In-memory storage implementation (MemStorage) simulating database operations for categories, apps, and suites\n- **API Design**: RESTful endpoints for CRUD operations on categories (`/api/categories`), apps (`/api/apps`), and suites (`/api/suites`) with search and filtering capabilities\n- **Development**: Hot module replacement and development middleware integration for seamless development experience\n\n### Database Schema Design\n- **ORM**: Drizzle ORM configured for PostgreSQL with type-safe schema definitions\n- **Tables**: \n  - Categories: Business application categories with metadata (icons, colors, app counts)\n  - Apps: Individual applications with features, shortcuts, and category associations\n  - Suites: Curated collections of related applications\n- **Schema Management**: Drizzle Kit for migrations and schema management with environment-based configuration\n\n### Component Architecture\n- **Layout System**: Responsive layout with fixed navigation header and main content area\n- **Reusable Components**: Modular card components for apps, categories, and suites with consistent styling\n- **Search Functionality**: Real-time search with debouncing and query-based filtering across all applications\n- **Responsive Design**: Mobile-first approach with adaptive layouts for different screen sizes\n\n### Development Workflow\n- **TypeScript**: Strict type checking across frontend, backend, and shared modules\n- **Code Organization**: Monorepo structure with shared schema and types between client and server\n- **Path Aliases**: Configured import aliases for clean, maintainable import statements\n- **Development Scripts**: Integrated scripts for development, building, and database management\n\n## External Dependencies\n\n### UI and Styling Libraries\n- **Radix UI**: Comprehensive suite of accessible, unstyled UI primitives for building the interface\n- **Tailwind CSS**: Utility-first CSS framework with custom configuration for dark theme and design system\n- **Lucide React**: Modern icon library providing consistent iconography throughout the application\n- **Font Awesome**: Icon library for business application category representations\n\n### Data Management\n- **TanStack Query**: Server state management with caching, background updates, and optimistic updates\n- **Drizzle ORM**: Type-safe database ORM with PostgreSQL support and schema validation\n- **Zod**: Runtime type validation integrated with Drizzle for schema validation\n\n### Development and Build Tools\n- **Vite**: Modern build tool with fast HMR and optimized production builds\n- **Wouter**: Lightweight routing library for client-side navigation\n- **PostCSS**: CSS processing with Tailwind CSS and Autoprefixer plugins\n\n### Database Infrastructure\n- **Neon Database**: Serverless PostgreSQL database service for production data storage\n- **Connection Management**: Environment-based database connection configuration with fallback handling\n\n### Replit Integration\n- **Development Environment**: Configured for Replit development with runtime error handling and development banners\n- **Cartographer Plugin**: Development-time navigation and debugging assistance within Replit environment","size_bytes":4863},"FutureHome/tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        'aura-dark': \"var(--aura-dark)\",\n        'aura-dark-secondary': \"var(--aura-dark-secondary)\",\n        'aura-neon-blue': \"var(--aura-neon-blue)\",\n        'aura-neon-purple': \"var(--aura-neon-purple)\",\n        'aura-accent-cyan': \"var(--aura-accent-cyan)\",\n        'aura-gray': \"var(--aura-gray)\",\n        'aura-gray-light': \"var(--aura-gray-light)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      boxShadow: {\n        'neon-blue': '0 0 20px rgba(0, 212, 255, 0.3)',\n        'neon-purple': '0 0 20px rgba(139, 92, 246, 0.3)',\n        'neon-cyan': '0 0 20px rgba(6, 255, 165, 0.3)',\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        float: {\n          '0%, 100%': { transform: 'translateY(0px)' },\n          '50%': { transform: 'translateY(-10px)' },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        float: \"float 6s ease-in-out infinite\",\n        \"pulse-slow\": \"pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2913},"FutureHome/vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"FutureHome/server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"FutureHome/server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Categories\n  app.get(\"/api/categories\", async (req, res) => {\n    try {\n      const categories = await storage.getCategories();\n      res.json(categories);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch categories\" });\n    }\n  });\n\n  app.get(\"/api/categories/:id\", async (req, res) => {\n    try {\n      const category = await storage.getCategoryById(req.params.id);\n      if (!category) {\n        return res.status(404).json({ message: \"Category not found\" });\n      }\n      res.json(category);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch category\" });\n    }\n  });\n\n  // Apps\n  app.get(\"/api/apps\", async (req, res) => {\n    try {\n      const { category, search } = req.query;\n      \n      let apps;\n      if (search) {\n        apps = await storage.searchApps(search as string);\n      } else if (category) {\n        apps = await storage.getAppsByCategory(category as string);\n      } else {\n        apps = await storage.getApps();\n      }\n      \n      res.json(apps);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch apps\" });\n    }\n  });\n\n  app.get(\"/api/apps/:id\", async (req, res) => {\n    try {\n      const app = await storage.getAppById(req.params.id);\n      if (!app) {\n        return res.status(404).json({ message: \"App not found\" });\n      }\n      res.json(app);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch app\" });\n    }\n  });\n\n  // Suites\n  app.get(\"/api/suites\", async (req, res) => {\n    try {\n      const suites = await storage.getSuites();\n      res.json(suites);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch suites\" });\n    }\n  });\n\n  app.get(\"/api/suites/:id\", async (req, res) => {\n    try {\n      const suite = await storage.getSuiteById(req.params.id);\n      if (!suite) {\n        return res.status(404).json({ message: \"Suite not found\" });\n      }\n      res.json(suite);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch suite\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":2316},"FutureHome/server/storage.ts":{"content":"import { type Category, type App, type Suite, type InsertCategory, type InsertApp, type InsertSuite } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // Categories\n  getCategories(): Promise<Category[]>;\n  getCategoryById(id: string): Promise<Category | undefined>;\n  createCategory(category: InsertCategory): Promise<Category>;\n\n  // Apps\n  getApps(): Promise<App[]>;\n  getAppsByCategory(categoryId: string): Promise<App[]>;\n  getAppById(id: string): Promise<App | undefined>;\n  createApp(app: InsertApp): Promise<App>;\n  searchApps(query: string): Promise<App[]>;\n\n  // Suites\n  getSuites(): Promise<Suite[]>;\n  getSuiteById(id: string): Promise<Suite | undefined>;\n  createSuite(suite: InsertSuite): Promise<Suite>;\n}\n\nexport class MemStorage implements IStorage {\n  private categories: Map<string, Category>;\n  private apps: Map<string, App>;\n  private suites: Map<string, Suite>;\n\n  constructor() {\n    this.categories = new Map();\n    this.apps = new Map();\n    this.suites = new Map();\n    this.initializeData();\n  }\n\n  private initializeData() {\n    // Initialize categories with accurate app counts\n    const categoriesData: Array<Omit<Category, 'id'>> = [\n      { name: \"Sales\", description: \"Complete sales automation and CRM solutions\", icon: \"fas fa-chart-line\", color: \"#00d4ff\", appCount: 8 },\n      { name: \"Marketing\", description: \"Comprehensive marketing automation suite\", icon: \"fas fa-bullhorn\", color: \"#8b5cf6\", appCount: 16 },\n      { name: \"Commerce\", description: \"Complete eCommerce platform solution\", icon: \"fas fa-shopping-cart\", color: \"#06ffa5\", appCount: 1 },\n      { name: \"Service\", description: \"Customer service and support tools\", icon: \"fas fa-headset\", color: \"#eab308\", appCount: 6 },\n      { name: \"Finance\", description: \"Complete financial management suite\", icon: \"fas fa-calculator\", color: \"#22c55e\", appCount: 10 },\n      { name: \"Email & Collaboration\", description: \"Complete collaboration and productivity suite\", icon: \"fas fa-envelope\", color: \"#3b82f6\", appCount: 20 },\n      { name: \"Human Resources\", description: \"Complete HR management platform\", icon: \"fas fa-users\", color: \"#ec4899\", appCount: 7 },\n      { name: \"Legal\", description: \"Legal and contract management tools\", icon: \"fas fa-gavel\", color: \"#f97316\", appCount: 2 },\n      { name: \"Security & IT\", description: \"Enterprise security and IT management\", icon: \"fas fa-shield-alt\", color: \"#ef4444\", appCount: 12 },\n      { name: \"BI & Analytics\", description: \"Business intelligence and analytics platform\", icon: \"fas fa-chart-bar\", color: \"#6366f1\", appCount: 4 },\n      { name: \"Project Management\", description: \"Complete project management suite\", icon: \"fas fa-tasks\", color: \"#14b8a6\", appCount: 3 },\n      { name: \"Developer Platforms\", description: \"Development tools and platforms\", icon: \"fas fa-code\", color: \"#a855f7\", appCount: 12 }\n    ];\n\n    categoriesData.forEach(cat => {\n      const id = randomUUID();\n      this.categories.set(id, { ...cat, id });\n    });\n\n    // Initialize apps for each category\n    this.initializeApps();\n    this.initializeSuites();\n  }\n\n  private initializeApps() {\n    const categories = Array.from(this.categories.values());\n    \n    const appsData: Array<Omit<App, 'id'>> = [\n      // Sales Apps (8 Apps)\n      { name: \"CRM\", description: \"Comprehensive CRM platform\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-users\", features: [\"Lead Management\", \"Contact Management\", \"Deal Tracking\", \"Sales Analytics\"], shortcuts: [\"Dashboard\", \"Leads\", \"Contacts\", \"Deals\", \"Activities\", \"Reports\", \"Settings\"] },\n      { name: \"Bigin\", description: \"Simple CRM for small businesses\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-seedling\", features: [\"Pipeline Management\", \"Contact Organization\", \"Deal Insights\"], shortcuts: [\"Pipeline\", \"Contacts\", \"Deals\", \"Reports\"] },\n      { name: \"Sign\", description: \"Digital signature app\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-signature\", features: [\"Digital Signatures\", \"Document Templates\", \"Workflow Management\"], shortcuts: [\"Documents\", \"Templates\", \"Workflows\", \"Settings\"] },\n      { name: \"SalesIQ\", description: \"Live chat and visitor engagement\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-comments\", features: [\"Live Chat\", \"Visitor Tracking\", \"Lead Scoring\"], shortcuts: [\"Chat\", \"Visitors\", \"Analytics\", \"Settings\"] },\n      { name: \"Forms\", description: \"Online form builder\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-clipboard-list\", features: [\"Form Builder\", \"Response Collection\", \"Data Analysis\"], shortcuts: [\"Forms\", \"Responses\", \"Analytics\", \"Settings\"] },\n      { name: \"RouteIQ\", description: \"Sales map visualization and route planning\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-route\", features: [\"Route Optimization\", \"Territory Management\", \"Sales Mapping\"], shortcuts: [\"Routes\", \"Territories\", \"Maps\", \"Reports\"] },\n      { name: \"Bookings\", description: \"Appointment scheduling\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-calendar-alt\", features: [\"Online Scheduling\", \"Calendar Integration\", \"Automated Reminders\"], shortcuts: [\"Calendar\", \"Bookings\", \"Services\", \"Settings\"] },\n      { name: \"Thrive\", description: \"Loyalty and affiliate management\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-trophy\", features: [\"Loyalty Programs\", \"Affiliate Tracking\", \"Reward Management\"], shortcuts: [\"Programs\", \"Affiliates\", \"Rewards\", \"Analytics\"] },\n\n      // Marketing Apps (16 Apps)\n      { name: \"Campaigns\", description: \"Email campaign creator\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-mail-bulk\", features: [\"Email Templates\", \"Campaign Management\", \"A/B Testing\"], shortcuts: [\"Campaigns\", \"Templates\", \"Analytics\", \"Settings\"] },\n      { name: \"Sign\", description: \"Digital signature app\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-signature\", features: [\"Digital Signatures\", \"Document Templates\", \"Workflow Management\"], shortcuts: [\"Documents\", \"Templates\", \"Workflows\", \"Settings\"] },\n      { name: \"SalesIQ\", description: \"Live chat and visitor engagement\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-comments\", features: [\"Live Chat\", \"Visitor Tracking\", \"Lead Scoring\"], shortcuts: [\"Chat\", \"Visitors\", \"Analytics\", \"Settings\"] },\n      { name: \"Forms\", description: \"Online form builder\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-clipboard-list\", features: [\"Form Builder\", \"Response Collection\", \"Data Analysis\"], shortcuts: [\"Forms\", \"Responses\", \"Analytics\", \"Settings\"] },\n      { name: \"Backstage\", description: \"Event management software\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-calendar-check\", features: [\"Event Planning\", \"Registration Management\", \"Ticketing\"], shortcuts: [\"Events\", \"Registrations\", \"Tickets\", \"Analytics\"] },\n      { name: \"Social\", description: \"Social media management\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-share-alt\", features: [\"Multi-platform Publishing\", \"Content Scheduling\", \"Social Analytics\"], shortcuts: [\"Posts\", \"Calendar\", \"Analytics\", \"Settings\"] },\n      { name: \"Survey\", description: \"Survey design and distribution\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-poll\", features: [\"Survey Builder\", \"Response Collection\", \"Data Visualization\"], shortcuts: [\"Surveys\", \"Responses\", \"Reports\", \"Settings\"] },\n      { name: \"Marketing Automation\", description: \"All-in-one marketing automation\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-robot\", features: [\"Workflow Automation\", \"Lead Nurturing\", \"Behavioral Triggers\"], shortcuts: [\"Workflows\", \"Leads\", \"Analytics\", \"Settings\"] },\n      { name: \"Sites\", description: \"Website builder\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-globe\", features: [\"Drag & Drop Builder\", \"Responsive Templates\", \"SEO Optimization\"], shortcuts: [\"Sites\", \"Templates\", \"SEO\", \"Analytics\"] },\n      { name: \"Webinar\", description: \"Webinar platform\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-video\", features: [\"Live Streaming\", \"Registration Management\", \"Recording\"], shortcuts: [\"Webinars\", \"Registrations\", \"Recordings\", \"Analytics\"] },\n      { name: \"PageSense\", description: \"Website conversion optimization\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-chart-line\", features: [\"A/B Testing\", \"Heatmaps\", \"Conversion Tracking\"], shortcuts: [\"Tests\", \"Heatmaps\", \"Analytics\", \"Settings\"] },\n      { name: \"LandingPage\", description: \"Landing page builder\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-window-maximize\", features: [\"Template Library\", \"Conversion Optimization\", \"Lead Capture\"], shortcuts: [\"Pages\", \"Templates\", \"Analytics\", \"Settings\"] },\n      { name: \"Domains\", description: \"Domain registration and DNS management\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-server\", features: [\"Domain Registration\", \"DNS Management\", \"SSL Certificates\"], shortcuts: [\"Domains\", \"DNS\", \"SSL\", \"Settings\"] },\n      { name: \"CommunitySpaces\", description: \"Online community platform\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-users\", features: [\"Forum Management\", \"Member Engagement\", \"Content Moderation\"], shortcuts: [\"Communities\", \"Members\", \"Posts\", \"Settings\"] },\n      { name: \"Publish\", description: \"Local business listings management\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-map-marked-alt\", features: [\"Listing Management\", \"Review Monitoring\", \"Local SEO\"], shortcuts: [\"Listings\", \"Reviews\", \"Analytics\", \"Settings\"] },\n      { name: \"Thrive\", description: \"Loyalty and affiliate management\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-trophy\", features: [\"Loyalty Programs\", \"Affiliate Tracking\", \"Reward Management\"], shortcuts: [\"Programs\", \"Affiliates\", \"Rewards\", \"Analytics\"] },\n\n      // Commerce and POS (1 App)\n      { name: \"Commerce\", description: \"eCommerce platform\", categoryId: categories.find(c => c.name === \"Commerce\")!.id, icon: \"fas fa-store\", features: [\"Online Store\", \"Inventory Management\", \"Payment Processing\"], shortcuts: [\"Store\", \"Products\", \"Orders\", \"Analytics\", \"Settings\"] },\n\n      // Service Apps (6 Apps)\n      { name: \"Desk\", description: \"Helpdesk software\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-life-ring\", features: [\"Ticket Management\", \"Knowledge Base\", \"Customer Support\"], shortcuts: [\"Tickets\", \"Knowledge Base\", \"Reports\", \"Settings\"] },\n      { name: \"Assist\", description: \"Remote support and access\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-hands-helping\", features: [\"Remote Desktop\", \"Screen Sharing\", \"File Transfer\"], shortcuts: [\"Sessions\", \"Computers\", \"Reports\", \"Settings\"] },\n      { name: \"SalesIQ\", description: \"Live chat and visitor engagement\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-comments\", features: [\"Live Chat\", \"Visitor Tracking\", \"Lead Scoring\"], shortcuts: [\"Chat\", \"Visitors\", \"Analytics\", \"Settings\"] },\n      { name: \"Bookings\", description: \"Appointment scheduling\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-calendar-alt\", features: [\"Online Scheduling\", \"Calendar Integration\", \"Automated Reminders\"], shortcuts: [\"Calendar\", \"Bookings\", \"Services\", \"Settings\"] },\n      { name: \"FSM\", description: \"Field Service Management platform for service businesses\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-tools\", features: [\"Work Order Management\", \"Technician Scheduling\", \"Inventory Tracking\"], shortcuts: [\"Work Orders\", \"Schedule\", \"Inventory\", \"Reports\"] },\n      { name: \"Lens\", description: \"Remote assistance with augmented reality\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-eye\", features: [\"AR Support\", \"Visual Assistance\", \"Real-time Collaboration\"], shortcuts: [\"Sessions\", \"Contacts\", \"Analytics\", \"Settings\"] },\n\n      // Finance Apps (10 Apps)\n      { name: \"Books\", description: \"Accounting platform\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-book\", features: [\"Double-entry Accounting\", \"Financial Reports\", \"Tax Management\"], shortcuts: [\"Dashboard\", \"Transactions\", \"Reports\", \"Settings\"] },\n      { name: \"Payroll\", description: \"Payroll processing software\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-money-check-alt\", features: [\"Salary Processing\", \"Tax Calculations\", \"Compliance Management\"], shortcuts: [\"Employees\", \"Payroll\", \"Reports\", \"Settings\"] },\n      { name: \"Expense\", description: \"Expense reporting\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-receipt\", features: [\"Expense Tracking\", \"Receipt Management\", \"Approval Workflows\"], shortcuts: [\"Expenses\", \"Reports\", \"Approvals\", \"Settings\"] },\n      { name: \"Inventory\", description: \"Stock and inventory control\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-boxes\", features: [\"Stock Management\", \"Warehouse Tracking\", \"Order Fulfillment\"], shortcuts: [\"Items\", \"Warehouses\", \"Orders\", \"Reports\"] },\n      { name: \"Sign\", description: \"Digital signature app\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-signature\", features: [\"Digital Signatures\", \"Document Templates\", \"Workflow Management\"], shortcuts: [\"Documents\", \"Templates\", \"Workflows\", \"Settings\"] },\n      { name: \"Billing\", description: \"End-to-end billing solution\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-file-invoice-dollar\", features: [\"Recurring Billing\", \"Payment Processing\", \"Revenue Recognition\"], shortcuts: [\"Subscriptions\", \"Invoices\", \"Payments\", \"Analytics\"] },\n      { name: \"Invoice\", description: \"Free invoicing solution\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-file-invoice\", features: [\"Invoice Creation\", \"Payment Tracking\", \"Client Management\"], shortcuts: [\"Invoices\", \"Clients\", \"Payments\", \"Reports\"] },\n      { name: \"Practice\", description: \"Practice management for accounting firms\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-briefcase\", features: [\"Client Management\", \"Time Tracking\", \"Workflow Management\"], shortcuts: [\"Clients\", \"Projects\", \"Time\", \"Reports\"] },\n      { name: \"Checkout\", description: \"Online payment page collector\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-credit-card\", features: [\"Payment Pages\", \"Checkout Flows\", \"Payment Analytics\"], shortcuts: [\"Pages\", \"Payments\", \"Analytics\", \"Settings\"] },\n      { name: \"Payments\", description: \"Unified payment solution\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-wallet\", features: [\"Payment Gateway\", \"Multi-currency Support\", \"Fraud Protection\"], shortcuts: [\"Transactions\", \"Gateways\", \"Analytics\", \"Settings\"] },\n\n      // Email, Storage, and Collaboration Apps (20 Apps)\n      { name: \"Mail\", description: \"Secure email service\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-envelope\", features: [\"Secure Email\", \"Calendar Integration\", \"Contact Management\"], shortcuts: [\"Inbox\", \"Calendar\", \"Contacts\", \"Settings\"] },\n      { name: \"Sign\", description: \"Digital signature app\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-signature\", features: [\"Digital Signatures\", \"Document Templates\", \"Workflow Management\"], shortcuts: [\"Documents\", \"Templates\", \"Workflows\", \"Settings\"] },\n      { name: \"WorkDrive\", description: \"Online file management\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-cloud\", features: [\"File Storage\", \"Team Collaboration\", \"Version Control\"], shortcuts: [\"Files\", \"Shared\", \"Recent\", \"Settings\"] },\n      { name: \"Connect\", description: \"Employee experience platform\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-network-wired\", features: [\"Social Networking\", \"Employee Engagement\", \"Communication\"], shortcuts: [\"Feed\", \"Groups\", \"Events\", \"Settings\"] },\n      { name: \"Cliq\", description: \"Team chat\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-comment-dots\", features: [\"Team Messaging\", \"File Sharing\", \"Video Calls\"], shortcuts: [\"Chats\", \"Channels\", \"Calls\", \"Settings\"] },\n      { name: \"ZeptoMail\", description: \"Transactional email sending service\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-paper-plane\", features: [\"Email API\", \"Delivery Analytics\", \"Template Management\"], shortcuts: [\"Emails\", \"Templates\", \"Analytics\", \"Settings\"] },\n      { name: \"Meeting\", description: \"Online meeting and webinar software\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-video\", features: [\"Video Conferencing\", \"Screen Sharing\", \"Recording\"], shortcuts: [\"Meetings\", \"Schedule\", \"Recordings\", \"Settings\"] },\n      { name: \"Bookings\", description: \"Appointment scheduling\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-calendar-alt\", features: [\"Online Scheduling\", \"Calendar Integration\", \"Automated Reminders\"], shortcuts: [\"Calendar\", \"Bookings\", \"Services\", \"Settings\"] },\n      { name: \"Learn\", description: \"Knowledge and learning management\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-graduation-cap\", features: [\"Course Creation\", \"Learning Paths\", \"Progress Tracking\"], shortcuts: [\"Courses\", \"Progress\", \"Reports\", \"Settings\"] },\n      { name: \"TeamInbox\", description: \"Shared inboxes for teams\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-inbox\", features: [\"Shared Email Management\", \"Team Collaboration\", \"Ticket Assignment\"], shortcuts: [\"Inbox\", \"Teams\", \"Reports\", \"Settings\"] },\n      { name: \"Office Integrator\", description: \"Built-in document editors\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-file-alt\", features: [\"Document Editing\", \"Real-time Collaboration\", \"Format Support\"], shortcuts: [\"Documents\", \"Recent\", \"Shared\", \"Settings\"] },\n      { name: \"Writer\", description: \"Word processor\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-pen\", features: [\"Document Creation\", \"Collaboration\", \"Templates\"], shortcuts: [\"Documents\", \"Templates\", \"Recent\", \"Settings\"] },\n      { name: \"Tables\", description: \"Work management tool\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-table\", features: [\"Database Management\", \"Workflow Automation\", \"Team Collaboration\"], shortcuts: [\"Tables\", \"Forms\", \"Workflows\", \"Reports\"] },\n      { name: \"Notebook\", description: \"Note-taking app\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-sticky-note\", features: [\"Note Organization\", \"Collaboration\", \"Cross-platform Sync\"], shortcuts: [\"Notes\", \"Notebooks\", \"Tags\", \"Search\"] },\n      { name: \"Show\", description: \"Presentation software\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-presentation\", features: [\"Slide Creation\", \"Collaboration\", \"Templates\"], shortcuts: [\"Presentations\", \"Templates\", \"Shared\", \"Settings\"] },\n      { name: \"Sheet\", description: \"Spreadsheet software\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-file-excel\", features: [\"Spreadsheet Creation\", \"Data Analysis\", \"Collaboration\"], shortcuts: [\"Sheets\", \"Templates\", \"Charts\", \"Settings\"] },\n      { name: \"Office Suite\", description: \"Collaborative work platform\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-briefcase\", features: [\"Integrated Office Tools\", \"Team Collaboration\", \"Document Management\"], shortcuts: [\"Documents\", \"Spreadsheets\", \"Presentations\", \"Settings\"] },\n      { name: \"Calendar\", description: \"Online business calendar\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-calendar\", features: [\"Event Scheduling\", \"Team Calendars\", \"Meeting Integration\"], shortcuts: [\"Calendar\", \"Events\", \"Meetings\", \"Settings\"] },\n      { name: \"ToDo\", description: \"Collaborative task management\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-tasks\", features: [\"Task Management\", \"Project Organization\", \"Team Collaboration\"], shortcuts: [\"Tasks\", \"Projects\", \"Teams\", \"Reports\"] },\n      { name: \"PDF Editor\", description: \"Online PDF editing tool\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-file-pdf\", features: [\"PDF Editing\", \"Annotation\", \"Form Creation\"], shortcuts: [\"Editor\", \"Forms\", \"Convert\", \"Settings\"] },\n\n      // Human Resources Apps (7 Apps)\n      { name: \"People\", description: \"HR process management\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-user-tie\", features: [\"Employee Management\", \"Performance Reviews\", \"Onboarding\"], shortcuts: [\"Employees\", \"Performance\", \"Onboarding\", \"Reports\"] },\n      { name: \"Payroll\", description: \"Payroll processing software\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-money-check-alt\", features: [\"Salary Processing\", \"Tax Calculations\", \"Compliance Management\"], shortcuts: [\"Employees\", \"Payroll\", \"Reports\", \"Settings\"] },\n      { name: \"Expense\", description: \"Expense reporting\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-receipt\", features: [\"Expense Tracking\", \"Receipt Management\", \"Approval Workflows\"], shortcuts: [\"Expenses\", \"Reports\", \"Approvals\", \"Settings\"] },\n      { name: \"Recruit\", description: \"Recruiting and hiring platform\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-search\", features: [\"Job Posting\", \"Candidate Management\", \"Interview Scheduling\"], shortcuts: [\"Jobs\", \"Candidates\", \"Interviews\", \"Reports\"] },\n      { name: \"Sign\", description: \"Digital signature app\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-signature\", features: [\"Digital Signatures\", \"Document Templates\", \"Workflow Management\"], shortcuts: [\"Documents\", \"Templates\", \"Workflows\", \"Settings\"] },\n      { name: \"Workerly\", description: \"Temporary staffing management\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-clock\", features: [\"Staff Scheduling\", \"Time Tracking\", \"Payroll Integration\"], shortcuts: [\"Staff\", \"Schedule\", \"Time\", \"Payroll\"] },\n      { name: \"Shifts\", description: \"Employee scheduling and time tracking\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-clock\", features: [\"Shift Scheduling\", \"Time Tracking\", \"Attendance Management\"], shortcuts: [\"Shifts\", \"Schedule\", \"Attendance\", \"Reports\"] },\n\n      // Legal Apps (2 Apps)\n      { name: \"Sign\", description: \"Digital signature app\", categoryId: categories.find(c => c.name === \"Legal\")!.id, icon: \"fas fa-signature\", features: [\"Digital Signatures\", \"Document Templates\", \"Workflow Management\"], shortcuts: [\"Documents\", \"Templates\", \"Workflows\", \"Settings\"] },\n      { name: \"Contracts\", description: \"Contract lifecycle management\", categoryId: categories.find(c => c.name === \"Legal\")!.id, icon: \"fas fa-file-contract\", features: [\"Contract Creation\", \"Lifecycle Management\", \"Compliance Tracking\"], shortcuts: [\"Contracts\", \"Templates\", \"Approvals\", \"Reports\"] },\n\n      // Security and IT Management Apps (12 Apps)\n      { name: \"Creator\", description: \"Custom business app platform\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-code\", features: [\"App Development\", \"Workflow Automation\", \"Database Management\"], shortcuts: [\"Apps\", \"Forms\", \"Workflows\", \"Database\"] },\n      { name: \"Assist\", description: \"Remote support and access\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-hands-helping\", features: [\"Remote Desktop\", \"Screen Sharing\", \"File Transfer\"], shortcuts: [\"Sessions\", \"Computers\", \"Reports\", \"Settings\"] },\n      { name: \"Vault\", description: \"Online password manager\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-lock\", features: [\"Password Management\", \"Secure Storage\", \"Team Sharing\"], shortcuts: [\"Passwords\", \"Secure Notes\", \"Settings\", \"Reports\"] },\n      { name: \"eProtect\", description: \"Email security and archiving\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-shield-alt\", features: [\"Email Security\", \"Archiving\", \"Compliance\"], shortcuts: [\"Security\", \"Archive\", \"Policies\", \"Reports\"] },\n      { name: \"Directory\", description: \"Workforce identity and access management\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-users-cog\", features: [\"Identity Management\", \"Access Control\", \"Single Sign-On\"], shortcuts: [\"Users\", \"Groups\", \"Policies\", \"Reports\"] },\n      { name: \"Catalyst\", description: \"Pro-code app deployment platform\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-rocket\", features: [\"Application Deployment\", \"Serverless Functions\", \"Database Management\"], shortcuts: [\"Functions\", \"Database\", \"Deployments\", \"Logs\"] },\n      { name: \"RPA\", description: \"Robotic Process Automation task automation\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-robot\", features: [\"Process Automation\", \"Task Scheduling\", \"Bot Management\"], shortcuts: [\"Bots\", \"Workflows\", \"Schedule\", \"Analytics\"] },\n      { name: \"QEngine\", description: \"Test automation software\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-vial\", features: [\"Automated Testing\", \"Test Management\", \"Quality Assurance\"], shortcuts: [\"Tests\", \"Suites\", \"Results\", \"Reports\"] },\n      { name: \"Lens\", description: \"Remote assistance with augmented reality\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-eye\", features: [\"AR Support\", \"Visual Assistance\", \"Real-time Collaboration\"], shortcuts: [\"Sessions\", \"Contacts\", \"Analytics\", \"Settings\"] },\n      { name: \"OneAuth\", description: \"Multi-factor authenticator\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-key\", features: [\"Multi-factor Authentication\", \"Token Generation\", \"Security Management\"], shortcuts: [\"Tokens\", \"Accounts\", \"Security\", \"Settings\"] },\n      { name: \"Toolkit\", description: \"Admin lookup queries\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-toolbox\", features: [\"Database Queries\", \"Admin Tools\", \"Data Analysis\"], shortcuts: [\"Queries\", \"Tools\", \"Reports\", \"Settings\"] },\n      { name: \"ManageEngine\", description: \"Enterprise IT management solutions\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-server\", features: [\"IT Asset Management\", \"Network Monitoring\", \"Help Desk\"], shortcuts: [\"Assets\", \"Network\", \"Tickets\", \"Reports\"] },\n\n      // BI and Analytics Apps (4 Apps)\n      { name: \"Analytics\", description: \"Self-service BI and analytics\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-chart-bar\", features: [\"Data Visualization\", \"Report Generation\", \"Dashboard Creation\"], shortcuts: [\"Dashboards\", \"Reports\", \"Data Sources\", \"Settings\"] },\n      { name: \"IoT\", description: \"IoT analytics for operational intelligence\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-wifi\", features: [\"Device Management\", \"Data Analytics\", \"Real-time Monitoring\"], shortcuts: [\"Devices\", \"Analytics\", \"Monitoring\", \"Settings\"] },\n      { name: \"DataPrep\", description: \"ETL tool for data integration\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-database\", features: [\"Data Preparation\", \"ETL Processes\", \"Data Integration\"], shortcuts: [\"Sources\", \"Flows\", \"Jobs\", \"Settings\"] },\n      { name: \"Embedded BI\", description: \"Embedded and white-label BI solutions\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-chart-pie\", features: [\"Embedded Analytics\", \"White-label Solutions\", \"API Integration\"], shortcuts: [\"Embeds\", \"APIs\", \"Analytics\", \"Settings\"] },\n\n      // Project Management Apps (3 Apps)\n      { name: \"Projects\", description: \"Project management and tracking\", categoryId: categories.find(c => c.name === \"Project Management\")!.id, icon: \"fas fa-project-diagram\", features: [\"Project Planning\", \"Task Management\", \"Time Tracking\"], shortcuts: [\"Projects\", \"Tasks\", \"Time\", \"Reports\"] },\n      { name: \"Sprints\", description: \"Planning tool for scrum teams\", categoryId: categories.find(c => c.name === \"Project Management\")!.id, icon: \"fas fa-running\", features: [\"Sprint Planning\", \"Backlog Management\", \"Scrum Boards\"], shortcuts: [\"Sprints\", \"Backlog\", \"Board\", \"Reports\"] },\n      { name: \"BugTracker\", description: \"Bug tracking software\", categoryId: categories.find(c => c.name === \"Project Management\")!.id, icon: \"fas fa-bug\", features: [\"Bug Tracking\", \"Issue Management\", \"Quality Assurance\"], shortcuts: [\"Bugs\", \"Issues\", \"Projects\", \"Reports\"] },\n\n      // Developer Platforms Apps (12 Apps)\n      { name: \"Creator\", description: \"Custom business app platform\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-code\", features: [\"App Development\", \"Workflow Automation\", \"Database Management\"], shortcuts: [\"Apps\", \"Forms\", \"Workflows\", \"Database\"] },\n      { name: \"ZeptoMail\", description: \"Transactional email sending service\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-paper-plane\", features: [\"Email API\", \"Delivery Analytics\", \"Template Management\"], shortcuts: [\"Emails\", \"Templates\", \"Analytics\", \"Settings\"] },\n      { name: \"IoT\", description: \"IoT platform for connected businesses\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-wifi\", features: [\"Device Management\", \"Data Analytics\", \"Real-time Monitoring\"], shortcuts: [\"Devices\", \"Analytics\", \"Monitoring\", \"Settings\"] },\n      { name: \"Flow\", description: \"Workflow automation and integration\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-sitemap\", features: [\"Workflow Automation\", \"API Integration\", \"Process Management\"], shortcuts: [\"Flows\", \"Integrations\", \"Triggers\", \"Settings\"] },\n      { name: \"Catalyst\", description: \"Pro-code app deployment platform\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-rocket\", features: [\"Application Deployment\", \"Serverless Functions\", \"Database Management\"], shortcuts: [\"Functions\", \"Database\", \"Deployments\", \"Logs\"] },\n      { name: \"DataPrep\", description: \"ETL tool for data integration\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-database\", features: [\"Data Preparation\", \"ETL Processes\", \"Data Integration\"], shortcuts: [\"Sources\", \"Flows\", \"Jobs\", \"Settings\"] },\n      { name: \"Office Integrator\", description: \"Built-in document editors\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-file-alt\", features: [\"Document Editing\", \"Real-time Collaboration\", \"Format Support\"], shortcuts: [\"Documents\", \"Recent\", \"Shared\", \"Settings\"] },\n      { name: \"Tables\", description: \"Work management tool\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-table\", features: [\"Database Management\", \"Workflow Automation\", \"Team Collaboration\"], shortcuts: [\"Tables\", \"Forms\", \"Workflows\", \"Reports\"] },\n      { name: \"RPA\", description: \"Robotic Process Automation task automation\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-robot\", features: [\"Process Automation\", \"Task Scheduling\", \"Bot Management\"], shortcuts: [\"Bots\", \"Workflows\", \"Schedule\", \"Analytics\"] },\n      { name: \"QEngine\", description: \"Test automation software\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-vial\", features: [\"Automated Testing\", \"Test Management\", \"Quality Assurance\"], shortcuts: [\"Tests\", \"Suites\", \"Results\", \"Reports\"] },\n      { name: \"Apptics\", description: \"Application analytics\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-mobile-alt\", features: [\"App Analytics\", \"User Behavior\", \"Performance Monitoring\"], shortcuts: [\"Analytics\", \"Users\", \"Performance\", \"Reports\"] },\n      { name: \"Embedded BI\", description: \"Embedded and white-label BI solutions\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-chart-pie\", features: [\"Embedded Analytics\", \"White-label Solutions\", \"API Integration\"], shortcuts: [\"Embeds\", \"APIs\", \"Analytics\", \"Settings\"] }\n    ];\n\n    appsData.forEach(app => {\n      const id = randomUUID();\n      this.apps.set(id, { \n        ...app, \n        id,\n        features: [...app.features] as string[],\n        shortcuts: [...app.shortcuts] as string[]\n      });\n    });\n  }\n\n  private initializeSuites() {\n    const apps = Array.from(this.apps.values());\n    \n    const suitesData: Array<Omit<Suite, 'id'>> = [\n      { name: \"CRM Plus\", description: \"Unified customer experience platform\", color: \"#00d4ff\", appIds: apps.filter(app => [\"CRM\", \"SalesIQ\", \"Desk\", \"Campaigns\", \"Social\"].includes(app.name)).map(app => app.id) },\n      { name: \"Service Plus\", description: \"Unified customer service platform\", color: \"#eab308\", appIds: apps.filter(app => [\"Desk\", \"Assist\", \"SalesIQ\", \"Lens\", \"FSM\"].includes(app.name)).map(app => app.id) },\n      { name: \"Finance Plus\", description: \"All-in-one finance and operations suite\", color: \"#22c55e\", appIds: apps.filter(app => [\"Books\", \"Payroll\", \"Expense\", \"Inventory\", \"Billing\", \"Invoice\"].includes(app.name)).map(app => app.id) },\n      { name: \"People Plus\", description: \"Comprehensive HR platform\", color: \"#ec4899\", appIds: apps.filter(app => [\"People\", \"Recruit\", \"Payroll\", \"Expense\", \"Shifts\"].includes(app.name)).map(app => app.id) },\n      { name: \"Workplace\", description: \"Team productivity and collaboration suite\", color: \"#3b82f6\", appIds: apps.filter(app => [\"Mail\", \"Cliq\", \"WorkDrive\", \"Connect\", \"Writer\", \"Sheet\", \"Show\"].includes(app.name)).map(app => app.id) },\n      { name: \"Marketing Plus\", description: \"Unified marketing platform\", color: \"#8b5cf6\", appIds: apps.filter(app => [\"Campaigns\", \"Social\", \"Sites\", \"PageSense\", \"Survey\", \"Webinar\"].includes(app.name)).map(app => app.id) },\n      { name: \"Projects Plus\", description: \"Unified project management platform\", color: \"#14b8a6\", appIds: apps.filter(app => [\"Projects\", \"Sprints\", \"BugTracker\"].includes(app.name)).map(app => app.id) }\n    ];\n\n    suitesData.forEach(suite => {\n      const id = randomUUID();\n      this.suites.set(id, { \n        ...suite, \n        id,\n        appIds: [...suite.appIds] as string[]\n      });\n    });\n  }\n\n  // Categories\n  async getCategories(): Promise<Category[]> {\n    return Array.from(this.categories.values());\n  }\n\n  async getCategoryById(id: string): Promise<Category | undefined> {\n    return this.categories.get(id);\n  }\n\n  async createCategory(category: InsertCategory): Promise<Category> {\n    const id = randomUUID();\n    const newCategory: Category = { ...category, id, appCount: category.appCount || 0 };\n    this.categories.set(id, newCategory);\n    return newCategory;\n  }\n\n  // Apps\n  async getApps(): Promise<App[]> {\n    return Array.from(this.apps.values());\n  }\n\n  async getAppsByCategory(categoryId: string): Promise<App[]> {\n    return Array.from(this.apps.values()).filter(app => app.categoryId === categoryId);\n  }\n\n  async getAppById(id: string): Promise<App | undefined> {\n    return this.apps.get(id);\n  }\n\n  async createApp(app: InsertApp): Promise<App> {\n    const id = randomUUID();\n    const newApp: App = { \n      ...app, \n      id,\n      features: app.features as string[],\n      shortcuts: app.shortcuts as string[]\n    };\n    this.apps.set(id, newApp);\n    return newApp;\n  }\n\n  async searchApps(query: string): Promise<App[]> {\n    const lowercaseQuery = query.toLowerCase();\n    return Array.from(this.apps.values()).filter(app => \n      app.name.toLowerCase().includes(lowercaseQuery) ||\n      app.description.toLowerCase().includes(lowercaseQuery)\n    );\n  }\n\n  // Suites\n  async getSuites(): Promise<Suite[]> {\n    return Array.from(this.suites.values());\n  }\n\n  async getSuiteById(id: string): Promise<Suite | undefined> {\n    return this.suites.get(id);\n  }\n\n  async createSuite(suite: InsertSuite): Promise<Suite> {\n    const id = randomUUID();\n    const newSuite: Suite = { \n      ...suite, \n      id,\n      appIds: suite.appIds as string[]\n    };\n    this.suites.set(id, newSuite);\n    return newSuite;\n  }\n}\n\nexport const storage = new MemStorage();","size_bytes":37692},"FutureHome/server/storage_old.ts":{"content":"import { type Category, type App, type Suite, type InsertCategory, type InsertApp, type InsertSuite } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // Categories\n  getCategories(): Promise<Category[]>;\n  getCategoryById(id: string): Promise<Category | undefined>;\n  createCategory(category: InsertCategory): Promise<Category>;\n\n  // Apps\n  getApps(): Promise<App[]>;\n  getAppsByCategory(categoryId: string): Promise<App[]>;\n  getAppById(id: string): Promise<App | undefined>;\n  createApp(app: InsertApp): Promise<App>;\n  searchApps(query: string): Promise<App[]>;\n\n  // Suites\n  getSuites(): Promise<Suite[]>;\n  getSuiteById(id: string): Promise<Suite | undefined>;\n  createSuite(suite: InsertSuite): Promise<Suite>;\n}\n\nexport class MemStorage implements IStorage {\n  private categories: Map<string, Category>;\n  private apps: Map<string, App>;\n  private suites: Map<string, Suite>;\n\n  constructor() {\n    this.categories = new Map();\n    this.apps = new Map();\n    this.suites = new Map();\n    this.initializeData();\n  }\n\n  private initializeData() {\n    // Initialize categories\n    const categoriesData: Array<Omit<Category, 'id'>> = [\n      { name: \"Sales\", description: \"Complete sales automation and CRM solutions\", icon: \"fas fa-chart-line\", color: \"#00d4ff\", appCount: 8 },\n      { name: \"Marketing\", description: \"Comprehensive marketing automation suite\", icon: \"fas fa-bullhorn\", color: \"#8b5cf6\", appCount: 16 },\n      { name: \"Commerce\", description: \"Complete eCommerce platform solution\", icon: \"fas fa-shopping-cart\", color: \"#06ffa5\", appCount: 1 },\n      { name: \"Service\", description: \"Customer service and support tools\", icon: \"fas fa-headset\", color: \"#eab308\", appCount: 6 },\n      { name: \"Finance\", description: \"Complete financial management suite\", icon: \"fas fa-calculator\", color: \"#22c55e\", appCount: 10 },\n      { name: \"Email & Collaboration\", description: \"Complete collaboration and productivity suite\", icon: \"fas fa-envelope\", color: \"#3b82f6\", appCount: 20 },\n      { name: \"Human Resources\", description: \"Complete HR management platform\", icon: \"fas fa-users\", color: \"#ec4899\", appCount: 7 },\n      { name: \"Legal\", description: \"Legal and contract management tools\", icon: \"fas fa-gavel\", color: \"#f97316\", appCount: 2 },\n      { name: \"Security & IT\", description: \"Enterprise security and IT management\", icon: \"fas fa-shield-alt\", color: \"#ef4444\", appCount: 12 },\n      { name: \"BI & Analytics\", description: \"Business intelligence and analytics platform\", icon: \"fas fa-chart-bar\", color: \"#6366f1\", appCount: 4 },\n      { name: \"Project Management\", description: \"Complete project management suite\", icon: \"fas fa-tasks\", color: \"#14b8a6\", appCount: 3 },\n      { name: \"Developer Platforms\", description: \"Development tools and platforms\", icon: \"fas fa-code\", color: \"#a855f7\", appCount: 12 }\n    ];\n\n    categoriesData.forEach(cat => {\n      const id = randomUUID();\n      this.categories.set(id, { ...cat, id });\n    });\n\n    // Initialize apps for each category\n    this.initializeApps();\n    this.initializeSuites();\n  }\n\n  private initializeApps() {\n    const categories = Array.from(this.categories.values());\n    \n    const appsData: Array<Omit<App, 'id'>> = [\n      // Sales Apps\n      { name: \"CRM\", description: \"Comprehensive CRM platform\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-users\", features: [\"Lead Management\", \"Contact Management\", \"Deal Tracking\", \"Sales Analytics\"], shortcuts: [\"Dashboard\", \"Leads\", \"Contacts\", \"Deals\", \"Activities\", \"Reports\", \"Settings\"] },\n      { name: \"Bigin\", description: \"Simple CRM for small businesses\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-seedling\", features: [\"Pipeline Management\", \"Contact Organization\", \"Deal Insights\"], shortcuts: [\"Pipeline\", \"Contacts\", \"Deals\", \"Reports\"] },\n      { name: \"Sign\", description: \"Digital signature app\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-signature\", features: [\"Digital Signatures\", \"Document Templates\", \"Workflow Management\"], shortcuts: [\"Documents\", \"Templates\", \"Workflows\", \"Settings\"] },\n      { name: \"SalesIQ\", description: \"Live chat and visitor engagement\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-comments\", features: [\"Live Chat\", \"Visitor Tracking\", \"Lead Scoring\"], shortcuts: [\"Chat\", \"Visitors\", \"Analytics\", \"Settings\"] },\n      { name: \"Forms\", description: \"Online form builder\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-clipboard-list\", features: [\"Form Builder\", \"Response Collection\", \"Data Analysis\"], shortcuts: [\"Forms\", \"Responses\", \"Analytics\", \"Settings\"] },\n      { name: \"RouteIQ\", description: \"Sales map visualization and route planning\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-route\", features: [\"Route Optimization\", \"Territory Management\", \"Sales Mapping\"], shortcuts: [\"Routes\", \"Territories\", \"Maps\", \"Reports\"] },\n      { name: \"Bookings\", description: \"Appointment scheduling\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-calendar-alt\", features: [\"Online Scheduling\", \"Calendar Integration\", \"Automated Reminders\"], shortcuts: [\"Calendar\", \"Bookings\", \"Services\", \"Settings\"] },\n      { name: \"Thrive\", description: \"Loyalty and affiliate management\", categoryId: categories.find(c => c.name === \"Sales\")!.id, icon: \"fas fa-trophy\", features: [\"Loyalty Programs\", \"Affiliate Tracking\", \"Reward Management\"], shortcuts: [\"Programs\", \"Affiliates\", \"Rewards\", \"Analytics\"] },\n\n      // Marketing Apps\n      { name: \"Campaigns\", description: \"Email campaign creator\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-mail-bulk\", features: [\"Email Templates\", \"Campaign Management\", \"A/B Testing\"], shortcuts: [\"Campaigns\", \"Templates\", \"Analytics\", \"Settings\"] },\n      { name: \"Social\", description: \"Social media management\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-share-alt\", features: [\"Multi-platform Publishing\", \"Content Scheduling\", \"Social Analytics\"], shortcuts: [\"Posts\", \"Calendar\", \"Analytics\", \"Settings\"] },\n      { name: \"Survey\", description: \"Survey design and distribution\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-poll\", features: [\"Survey Builder\", \"Response Collection\", \"Data Visualization\"], shortcuts: [\"Surveys\", \"Responses\", \"Reports\", \"Settings\"] },\n      { name: \"Marketing Automation\", description: \"All-in-one marketing automation\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-robot\", features: [\"Workflow Automation\", \"Lead Nurturing\", \"Behavioral Triggers\"], shortcuts: [\"Workflows\", \"Leads\", \"Analytics\", \"Settings\"] },\n      { name: \"Sites\", description: \"Website builder\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-globe\", features: [\"Drag & Drop Builder\", \"Responsive Templates\", \"SEO Optimization\"], shortcuts: [\"Sites\", \"Templates\", \"SEO\", \"Analytics\"] },\n      { name: \"Webinar\", description: \"Webinar platform\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-video\", features: [\"Live Streaming\", \"Registration Management\", \"Recording\"], shortcuts: [\"Webinars\", \"Registrations\", \"Recordings\", \"Analytics\"] },\n      { name: \"PageSense\", description: \"Website conversion optimization\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-chart-line\", features: [\"A/B Testing\", \"Heatmaps\", \"Conversion Tracking\"], shortcuts: [\"Tests\", \"Heatmaps\", \"Analytics\", \"Settings\"] },\n      { name: \"LandingPage\", description: \"Landing page builder\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-window-maximize\", features: [\"Template Library\", \"Conversion Optimization\", \"Lead Capture\"], shortcuts: [\"Pages\", \"Templates\", \"Analytics\", \"Settings\"] },\n      { name: \"Domains\", description: \"Domain registration and DNS management\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-server\", features: [\"Domain Registration\", \"DNS Management\", \"SSL Certificates\"], shortcuts: [\"Domains\", \"DNS\", \"SSL\", \"Settings\"] },\n      { name: \"CommunitySpaces\", description: \"Online community platform\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-users\", features: [\"Forum Management\", \"Member Engagement\", \"Content Moderation\"], shortcuts: [\"Communities\", \"Members\", \"Posts\", \"Settings\"] },\n      { name: \"Publish\", description: \"Local business listings management\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-map-marked-alt\", features: [\"Listing Management\", \"Review Monitoring\", \"Local SEO\"], shortcuts: [\"Listings\", \"Reviews\", \"Analytics\", \"Settings\"] },\n      { name: \"Backstage\", description: \"Event management software\", categoryId: categories.find(c => c.name === \"Marketing\")!.id, icon: \"fas fa-calendar-check\", features: [\"Event Planning\", \"Registration Management\", \"Ticketing\"], shortcuts: [\"Events\", \"Registrations\", \"Tickets\", \"Analytics\"] },\n\n      // Commerce Apps\n      { name: \"Commerce\", description: \"eCommerce platform\", categoryId: categories.find(c => c.name === \"Commerce\")!.id, icon: \"fas fa-store\", features: [\"Online Store\", \"Inventory Management\", \"Payment Processing\"], shortcuts: [\"Store\", \"Products\", \"Orders\", \"Analytics\", \"Settings\"] },\n\n      // Service Apps\n      { name: \"Desk\", description: \"Helpdesk software\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-life-ring\", features: [\"Ticket Management\", \"Knowledge Base\", \"Customer Support\"], shortcuts: [\"Tickets\", \"Knowledge Base\", \"Reports\", \"Settings\"] },\n      { name: \"Assist\", description: \"Remote support and access\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-hands-helping\", features: [\"Remote Desktop\", \"Screen Sharing\", \"File Transfer\"], shortcuts: [\"Sessions\", \"Computers\", \"Reports\", \"Settings\"] },\n      { name: \"FSM\", description: \"Field Service Management\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-tools\", features: [\"Work Order Management\", \"Technician Scheduling\", \"Inventory Tracking\"], shortcuts: [\"Work Orders\", \"Schedule\", \"Inventory\", \"Reports\"] },\n      { name: \"Lens\", description: \"Remote assistance with augmented reality\", categoryId: categories.find(c => c.name === \"Service\")!.id, icon: \"fas fa-eye\", features: [\"AR Support\", \"Visual Assistance\", \"Real-time Collaboration\"], shortcuts: [\"Sessions\", \"Contacts\", \"Analytics\", \"Settings\"] },\n\n      // Finance Apps\n      { name: \"Books\", description: \"Accounting platform\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-book\", features: [\"Double-entry Accounting\", \"Financial Reports\", \"Tax Management\"], shortcuts: [\"Dashboard\", \"Transactions\", \"Reports\", \"Settings\"] },\n      { name: \"Payroll\", description: \"Payroll processing software\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-money-check-alt\", features: [\"Salary Processing\", \"Tax Calculations\", \"Compliance Management\"], shortcuts: [\"Employees\", \"Payroll\", \"Reports\", \"Settings\"] },\n      { name: \"Expense\", description: \"Expense reporting\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-receipt\", features: [\"Expense Tracking\", \"Receipt Management\", \"Approval Workflows\"], shortcuts: [\"Expenses\", \"Reports\", \"Approvals\", \"Settings\"] },\n      { name: \"Inventory\", description: \"Stock and inventory control\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-boxes\", features: [\"Stock Management\", \"Warehouse Tracking\", \"Order Fulfillment\"], shortcuts: [\"Items\", \"Warehouses\", \"Orders\", \"Reports\"] },\n      { name: \"Billing\", description: \"End-to-end billing solution\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-file-invoice-dollar\", features: [\"Recurring Billing\", \"Payment Processing\", \"Revenue Recognition\"], shortcuts: [\"Subscriptions\", \"Invoices\", \"Payments\", \"Analytics\"] },\n      { name: \"Invoice\", description: \"Free invoicing solution\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-file-invoice\", features: [\"Invoice Creation\", \"Payment Tracking\", \"Client Management\"], shortcuts: [\"Invoices\", \"Clients\", \"Payments\", \"Reports\"] },\n      { name: \"Practice\", description: \"Practice management for accounting firms\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-briefcase\", features: [\"Client Management\", \"Time Tracking\", \"Workflow Management\"], shortcuts: [\"Clients\", \"Projects\", \"Time\", \"Reports\"] },\n      { name: \"Checkout\", description: \"Online payment page collector\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-credit-card\", features: [\"Payment Pages\", \"Checkout Flows\", \"Payment Analytics\"], shortcuts: [\"Pages\", \"Payments\", \"Analytics\", \"Settings\"] },\n      { name: \"Payments\", description: \"Unified payment solution\", categoryId: categories.find(c => c.name === \"Finance\")!.id, icon: \"fas fa-wallet\", features: [\"Payment Gateway\", \"Multi-currency Support\", \"Fraud Protection\"], shortcuts: [\"Transactions\", \"Gateways\", \"Analytics\", \"Settings\"] },\n\n      // Email & Collaboration Apps (first 10)\n      { name: \"Mail\", description: \"Secure email service\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-envelope\", features: [\"Secure Email\", \"Calendar Integration\", \"Contact Management\"], shortcuts: [\"Inbox\", \"Calendar\", \"Contacts\", \"Settings\"] },\n      { name: \"WorkDrive\", description: \"Online file management\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-cloud\", features: [\"File Storage\", \"Team Collaboration\", \"Version Control\"], shortcuts: [\"Files\", \"Shared\", \"Recent\", \"Settings\"] },\n      { name: \"Connect\", description: \"Employee experience platform\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-network-wired\", features: [\"Social Networking\", \"Employee Engagement\", \"Communication\"], shortcuts: [\"Feed\", \"Groups\", \"Events\", \"Settings\"] },\n      { name: \"Cliq\", description: \"Team chat\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-comment-dots\", features: [\"Team Messaging\", \"File Sharing\", \"Video Calls\"], shortcuts: [\"Chats\", \"Channels\", \"Calls\", \"Settings\"] },\n      { name: \"ZeptoMail\", description: \"Transactional email sending service\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-paper-plane\", features: [\"Email API\", \"Delivery Analytics\", \"Template Management\"], shortcuts: [\"Emails\", \"Templates\", \"Analytics\", \"Settings\"] },\n      { name: \"Meeting\", description: \"Online meeting and webinar software\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-video\", features: [\"Video Conferencing\", \"Screen Sharing\", \"Recording\"], shortcuts: [\"Meetings\", \"Schedule\", \"Recordings\", \"Settings\"] },\n      { name: \"Learn\", description: \"Knowledge and learning management\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-graduation-cap\", features: [\"Course Creation\", \"Learning Paths\", \"Progress Tracking\"], shortcuts: [\"Courses\", \"Progress\", \"Reports\", \"Settings\"] },\n      { name: \"TeamInbox\", description: \"Shared inboxes for teams\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-inbox\", features: [\"Shared Email Management\", \"Team Collaboration\", \"Ticket Assignment\"], shortcuts: [\"Inbox\", \"Teams\", \"Reports\", \"Settings\"] },\n      { name: \"Office Integrator\", description: \"Built-in document editors\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-file-alt\", features: [\"Document Editing\", \"Real-time Collaboration\", \"Format Support\"], shortcuts: [\"Documents\", \"Recent\", \"Shared\", \"Settings\"] },\n      { name: \"Writer\", description: \"Word processor\", categoryId: categories.find(c => c.name === \"Email & Collaboration\")!.id, icon: \"fas fa-pen\", features: [\"Document Creation\", \"Collaboration\", \"Templates\"], shortcuts: [\"Documents\", \"Templates\", \"Recent\", \"Settings\"] },\n\n      // Human Resources Apps\n      { name: \"People\", description: \"HR process management\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-user-tie\", features: [\"Employee Management\", \"Performance Reviews\", \"Onboarding\"], shortcuts: [\"Employees\", \"Performance\", \"Onboarding\", \"Reports\"] },\n      { name: \"Recruit\", description: \"Recruiting and hiring platform\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-search\", features: [\"Job Posting\", \"Candidate Management\", \"Interview Scheduling\"], shortcuts: [\"Jobs\", \"Candidates\", \"Interviews\", \"Reports\"] },\n      { name: \"Workerly\", description: \"Temporary staffing management\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-clock\", features: [\"Staff Scheduling\", \"Time Tracking\", \"Payroll Integration\"], shortcuts: [\"Staff\", \"Schedule\", \"Timesheets\", \"Reports\"] },\n      { name: \"Shifts\", description: \"Employee scheduling and time tracking\", categoryId: categories.find(c => c.name === \"Human Resources\")!.id, icon: \"fas fa-calendar-times\", features: [\"Shift Scheduling\", \"Time Clock\", \"Attendance Tracking\"], shortcuts: [\"Schedule\", \"Time Clock\", \"Attendance\", \"Reports\"] },\n\n      // Legal Apps\n      { name: \"Contracts\", description: \"Contract lifecycle management\", categoryId: categories.find(c => c.name === \"Legal\")!.id, icon: \"fas fa-file-contract\", features: [\"Contract Creation\", \"Approval Workflows\", \"Compliance Tracking\"], shortcuts: [\"Contracts\", \"Templates\", \"Approvals\", \"Reports\"] },\n\n      // Security & IT Apps (first 8)\n      { name: \"Creator\", description: \"Custom business app platform\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-cogs\", features: [\"App Development\", \"Workflow Automation\", \"Data Management\"], shortcuts: [\"Apps\", \"Workflows\", \"Data\", \"Settings\"] },\n      { name: \"Vault\", description: \"Online password manager\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-lock\", features: [\"Password Storage\", \"Secure Sharing\", \"Access Control\"], shortcuts: [\"Passwords\", \"Sharing\", \"Reports\", \"Settings\"] },\n      { name: \"eProtect\", description: \"Email security and archiving\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-shield-alt\", features: [\"Email Security\", \"Threat Protection\", \"Archiving\"], shortcuts: [\"Security\", \"Archive\", \"Reports\", \"Settings\"] },\n      { name: \"Directory\", description: \"Workforce identity and access management\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-address-book\", features: [\"Identity Management\", \"Access Control\", \"Single Sign-On\"], shortcuts: [\"Users\", \"Groups\", \"Access\", \"Settings\"] },\n      { name: \"Catalyst\", description: \"Pro-code app deployment platform\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-rocket\", features: [\"App Deployment\", \"Serverless Functions\", \"Database Management\"], shortcuts: [\"Apps\", \"Functions\", \"Database\", \"Analytics\"] },\n      { name: \"RPA\", description: \"Robotic Process Automation\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-robot\", features: [\"Process Automation\", \"Bot Management\", \"Workflow Optimization\"], shortcuts: [\"Bots\", \"Workflows\", \"Analytics\", \"Settings\"] },\n      { name: \"QEngine\", description: \"Test automation software\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-vial\", features: [\"Automated Testing\", \"Test Management\", \"Quality Assurance\"], shortcuts: [\"Tests\", \"Results\", \"Reports\", \"Settings\"] },\n      { name: \"OneAuth\", description: \"Multi-factor authenticator\", categoryId: categories.find(c => c.name === \"Security & IT\")!.id, icon: \"fas fa-key\", features: [\"Two-Factor Authentication\", \"Security Tokens\", \"Access Control\"], shortcuts: [\"Tokens\", \"Devices\", \"Security\", \"Settings\"] },\n\n      // BI & Analytics Apps\n      { name: \"Analytics\", description: \"Self-service BI and analytics\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-chart-area\", features: [\"Data Visualization\", \"Report Building\", \"Dashboard Creation\"], shortcuts: [\"Dashboards\", \"Reports\", \"Data\", \"Settings\"] },\n      { name: \"IoT\", description: \"IoT analytics for operational intelligence\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-wifi\", features: [\"Device Management\", \"Data Collection\", \"Real-time Analytics\"], shortcuts: [\"Devices\", \"Data\", \"Analytics\", \"Settings\"] },\n      { name: \"DataPrep\", description: \"ETL tool for data integration\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-database\", features: [\"Data Integration\", \"ETL Pipelines\", \"Data Transformation\"], shortcuts: [\"Pipelines\", \"Data\", \"Transforms\", \"Settings\"] },\n      { name: \"Embedded BI\", description: \"Embedded and white-label BI solutions\", categoryId: categories.find(c => c.name === \"BI & Analytics\")!.id, icon: \"fas fa-chart-pie\", features: [\"Embedded Analytics\", \"White-label Solutions\", \"API Integration\"], shortcuts: [\"Embeds\", \"APIs\", \"Analytics\", \"Settings\"] },\n\n      // Project Management Apps\n      { name: \"Projects\", description: \"Project management and tracking\", categoryId: categories.find(c => c.name === \"Project Management\")!.id, icon: \"fas fa-project-diagram\", features: [\"Project Planning\", \"Task Management\", \"Resource Allocation\"], shortcuts: [\"Projects\", \"Tasks\", \"Resources\", \"Reports\"] },\n      { name: \"Sprints\", description: \"Planning tool for scrum teams\", categoryId: categories.find(c => c.name === \"Project Management\")!.id, icon: \"fas fa-running\", features: [\"Sprint Planning\", \"Backlog Management\", \"Velocity Tracking\"], shortcuts: [\"Sprints\", \"Backlog\", \"Reports\", \"Settings\"] },\n      { name: \"BugTracker\", description: \"Bug tracking software\", categoryId: categories.find(c => c.name === \"Project Management\")!.id, icon: \"fas fa-bug\", features: [\"Issue Tracking\", \"Bug Reports\", \"Resolution Management\"], shortcuts: [\"Issues\", \"Reports\", \"Analytics\", \"Settings\"] },\n\n      // Developer Platforms Apps (first 8)\n      { name: \"Flow\", description: \"Workflow automation and integration\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-sitemap\", features: [\"Workflow Automation\", \"API Integration\", \"Process Management\"], shortcuts: [\"Flows\", \"Integrations\", \"Analytics\", \"Settings\"] },\n      { name: \"Tables\", description: \"Work management tool\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-table\", features: [\"Data Management\", \"Collaboration\", \"Automation\"], shortcuts: [\"Tables\", \"Views\", \"Automations\", \"Settings\"] },\n      { name: \"Notebook\", description: \"Note-taking app\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-sticky-note\", features: [\"Note Organization\", \"Rich Text Editing\", \"Collaboration\"], shortcuts: [\"Notes\", \"Notebooks\", \"Search\", \"Settings\"] },\n      { name: \"Show\", description: \"Presentation software\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-presentation\", features: [\"Slide Creation\", \"Templates\", \"Collaboration\"], shortcuts: [\"Presentations\", \"Templates\", \"Recent\", \"Settings\"] },\n      { name: \"Sheet\", description: \"Spreadsheet software\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-file-excel\", features: [\"Spreadsheet Creation\", \"Data Analysis\", \"Collaboration\"], shortcuts: [\"Sheets\", \"Recent\", \"Templates\", \"Settings\"] },\n      { name: \"Office Suite\", description: \"Collaborative work platform\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-briefcase\", features: [\"Document Management\", \"Team Collaboration\", \"Integration\"], shortcuts: [\"Documents\", \"Teams\", \"Recent\", \"Settings\"] },\n      { name: \"Calendar\", description: \"Online business calendar\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-calendar\", features: [\"Event Scheduling\", \"Meeting Management\", \"Team Calendars\"], shortcuts: [\"Calendar\", \"Events\", \"Tasks\", \"Settings\"] },\n      { name: \"ToDo\", description: \"Collaborative task management\", categoryId: categories.find(c => c.name === \"Developer Platforms\")!.id, icon: \"fas fa-check-circle\", features: [\"Task Management\", \"Team Collaboration\", \"Project Organization\"], shortcuts: [\"Tasks\", \"Projects\", \"Reports\", \"Settings\"] }\n    ];\n\n    appsData.forEach(app => {\n      const id = randomUUID();\n      this.apps.set(id, { ...app, id });\n    });\n  }\n\n  private initializeSuites() {\n    const suitesData: Array<Omit<Suite, 'id'>> = [\n      { name: \"CRM Plus\", description: \"Unified customer experience platform\", color: \"#00d4ff\", appIds: [] },\n      { name: \"Service Plus\", description: \"Unified customer service platform\", color: \"#eab308\", appIds: [] },\n      { name: \"Finance Plus\", description: \"All-in-one finance and operations suite\", color: \"#22c55e\", appIds: [] },\n      { name: \"People Plus\", description: \"Comprehensive HR platform\", color: \"#ec4899\", appIds: [] },\n      { name: \"Workplace\", description: \"Team productivity and collaboration suite\", color: \"#3b82f6\", appIds: [] },\n      { name: \"Marketing Plus\", description: \"Unified marketing platform\", color: \"#8b5cf6\", appIds: [] },\n      { name: \"Projects Plus\", description: \"Unified project management platform\", color: \"#14b8a6\", appIds: [] }\n    ];\n\n    suitesData.forEach(suite => {\n      const id = randomUUID();\n      this.suites.set(id, { ...suite, id });\n    });\n  }\n\n  // Categories\n  async getCategories(): Promise<Category[]> {\n    return Array.from(this.categories.values());\n  }\n\n  async getCategoryById(id: string): Promise<Category | undefined> {\n    return this.categories.get(id);\n  }\n\n  async createCategory(category: InsertCategory): Promise<Category> {\n    const id = randomUUID();\n    const newCategory: Category = { ...category, id, appCount: category.appCount || 0 };\n    this.categories.set(id, newCategory);\n    return newCategory;\n  }\n\n  // Apps\n  async getApps(): Promise<App[]> {\n    return Array.from(this.apps.values());\n  }\n\n  async getAppsByCategory(categoryId: string): Promise<App[]> {\n    return Array.from(this.apps.values()).filter(app => app.categoryId === categoryId);\n  }\n\n  async getAppById(id: string): Promise<App | undefined> {\n    return this.apps.get(id);\n  }\n\n  async createApp(app: InsertApp): Promise<App> {\n    const id = randomUUID();\n    const newApp: App = { ...app, id };\n    this.apps.set(id, newApp);\n    return newApp;\n  }\n\n  async searchApps(query: string): Promise<App[]> {\n    const lowercaseQuery = query.toLowerCase();\n    return Array.from(this.apps.values()).filter(app => \n      app.name.toLowerCase().includes(lowercaseQuery) ||\n      app.description.toLowerCase().includes(lowercaseQuery)\n    );\n  }\n\n  // Suites\n  async getSuites(): Promise<Suite[]> {\n    return Array.from(this.suites.values());\n  }\n\n  async getSuiteById(id: string): Promise<Suite | undefined> {\n    return this.suites.get(id);\n  }\n\n  async createSuite(suite: InsertSuite): Promise<Suite> {\n    const id = randomUUID();\n    const newSuite: Suite = { ...suite, id };\n    this.suites.set(id, newSuite);\n    return newSuite;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":27684},"FutureHome/server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"FutureHome/shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, jsonb, integer } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const categories = pgTable(\"categories\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  icon: text(\"icon\").notNull(),\n  color: text(\"color\").notNull(),\n  appCount: integer(\"app_count\").notNull().default(0),\n});\n\nexport const apps = pgTable(\"apps\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  categoryId: varchar(\"category_id\").notNull(),\n  icon: text(\"icon\").notNull(),\n  features: jsonb(\"features\").$type<string[]>().notNull(),\n  shortcuts: jsonb(\"shortcuts\").$type<string[]>().notNull(),\n});\n\nexport const suites = pgTable(\"suites\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  color: text(\"color\").notNull(),\n  appIds: jsonb(\"app_ids\").$type<string[]>().notNull(),\n});\n\nexport const insertCategorySchema = createInsertSchema(categories).omit({\n  id: true,\n});\n\nexport const insertAppSchema = createInsertSchema(apps).omit({\n  id: true,\n});\n\nexport const insertSuiteSchema = createInsertSchema(suites).omit({\n  id: true,\n});\n\nexport type InsertCategory = z.infer<typeof insertCategorySchema>;\nexport type Category = typeof categories.$inferSelect;\n\nexport type InsertApp = z.infer<typeof insertAppSchema>;\nexport type App = typeof apps.$inferSelect;\n\nexport type InsertSuite = z.infer<typeof insertSuiteSchema>;\nexport type Suite = typeof suites.$inferSelect;\n","size_bytes":1766},"FutureHome/client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\nimport Category from \"@/pages/category\";\nimport AllApps from \"@/pages/all-apps\";\nimport App from \"@/pages/app\";\nimport Layout from \"@/components/ui/layout\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/app/:appId\">\n        {params => <App />}\n      </Route>\n      <Route path=\"*\">\n        <Layout>\n          <Switch>\n            <Route path=\"/\" component={Home} />\n            <Route path=\"/category/:categoryId\" component={Category} />\n            <Route path=\"/apps\" component={AllApps} />\n            <Route component={NotFound} />\n          </Switch>\n        </Layout>\n      </Route>\n    </Switch>\n  );\n}\n\nfunction AppComponent() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default AppComponent;\n","size_bytes":1201},"FutureHome/client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500;600&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(240, 50%, 6%);\n  --foreground: hsl(0, 0%, 100%);\n  --card: hsl(240, 38%, 11%);\n  --card-foreground: hsl(0, 0%, 100%);\n  --popover: hsl(240, 38%, 11%);\n  --popover-foreground: hsl(0, 0%, 100%);\n  --primary: hsl(195, 100%, 50%);\n  --primary-foreground: hsl(240, 50%, 6%);\n  --secondary: hsl(240, 38%, 11%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(240, 25%, 15%);\n  --muted-foreground: hsl(240, 5%, 65%);\n  --accent: hsl(240, 38%, 11%);\n  --accent-foreground: hsl(195, 100%, 50%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(240, 25%, 20%);\n  --input: hsl(240, 25%, 15%);\n  --ring: hsl(195, 100%, 50%);\n  --radius: 0.5rem;\n  --aura-dark: hsl(240, 50%, 6%);\n  --aura-dark-secondary: hsl(240, 38%, 11%);\n  --aura-neon-blue: hsl(195, 100%, 50%);\n  --aura-neon-purple: hsl(258, 84%, 68%);\n  --aura-accent-cyan: hsl(158, 100%, 51%);\n  --aura-gray: hsl(220, 14%, 28%);\n  --aura-gray-light: hsl(218, 12%, 34%);\n  --font-sans: 'Inter', sans-serif;\n  --font-mono: 'JetBrains Mono', monospace;\n}\n\n.dark {\n  --background: hsl(240, 50%, 6%);\n  --foreground: hsl(0, 0%, 100%);\n  --card: hsl(240, 38%, 11%);\n  --card-foreground: hsl(0, 0%, 100%);\n  --popover: hsl(240, 38%, 11%);\n  --popover-foreground: hsl(0, 0%, 100%);\n  --primary: hsl(195, 100%, 50%);\n  --primary-foreground: hsl(240, 50%, 6%);\n  --secondary: hsl(240, 38%, 11%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --muted: hsl(240, 25%, 15%);\n  --muted-foreground: hsl(240, 5%, 65%);\n  --accent: hsl(240, 38%, 11%);\n  --accent-foreground: hsl(195, 100%, 50%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 100%);\n  --border: hsl(240, 25%, 20%);\n  --input: hsl(240, 25%, 15%);\n  --ring: hsl(195, 100%, 50%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  \n  body {\n    @apply bg-background text-foreground font-sans antialiased;\n    background: linear-gradient(135deg, hsl(240, 50%, 6%) 0%, hsl(240, 38%, 11%) 100%);\n    min-height: 100vh;\n  }\n}\n\n@layer utilities {\n  .gradient-text {\n    background: linear-gradient(135deg, hsl(195, 100%, 50%), hsl(258, 84%, 68%));\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n  }\n  \n  .glass-effect {\n    background: rgba(26, 26, 46, 0.7);\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(139, 92, 246, 0.2);\n  }\n  \n  .neon-border {\n    position: relative;\n    overflow: hidden;\n  }\n  \n  .neon-border::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    padding: 1px;\n    background: linear-gradient(45deg, hsl(195, 100%, 50%), hsl(258, 84%, 68%), hsl(158, 100%, 51%));\n    border-radius: inherit;\n    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\n    mask-composite: subtract;\n    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\n    -webkit-mask-composite: subtract;\n  }\n  \n  .app-card {\n    transition: all 0.3s ease;\n    border: 1px solid rgba(139, 92, 246, 0.1);\n  }\n  \n  .app-card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 0 30px rgba(139, 92, 246, 0.4);\n    border-color: rgba(139, 92, 246, 0.5);\n  }\n  \n  .suite-card:hover {\n    transform: translateY(-5px) scale(1.02);\n    box-shadow: 0 0 30px rgba(0, 212, 255, 0.4);\n  }\n\n  @keyframes float {\n    0%, 100% { transform: translateY(0px); }\n    50% { transform: translateY(-10px); }\n  }\n  \n  .animate-float {\n    animation: float 6s ease-in-out infinite;\n  }\n  \n  .animate-pulse-slow {\n    animation: pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n  }\n\n  .line-clamp-2 {\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n}\n","size_bytes":3964},"FutureHome/client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"FutureHome/client/src/components/app-card.tsx":{"content":"import { Link } from \"wouter\";\nimport { type Category } from \"@shared/schema\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type App } from \"@shared/schema\";\n\ninterface AppCardProps {\n  category: Category;\n}\n\nexport default function AppCard({ category }: AppCardProps) {\n  const { data: apps } = useQuery<App[]>({\n    queryKey: [\"/api/apps\"],\n    select: (allApps: App[]) => allApps.filter(app => app.categoryId === category.id),\n  });\n\n  const displayApps = apps?.slice(0, 3) || [];\n  const remainingCount = (apps?.length || 0) - 3;\n\n  return (\n    <Link href={`/category/${category.id}`}>\n      <div className=\"app-card bg-aura-dark-secondary rounded-xl p-6 neon-border cursor-pointer\">\n        <div className=\"flex items-center mb-4\">\n          <i className={`${category.icon} text-2xl mr-3`} style={{ color: category.color }}></i>\n          <h3 className=\"text-xl font-semibold\">{category.name}</h3>\n          <span \n            className=\"ml-auto text-black text-xs px-2 py-1 rounded-full font-medium\"\n            style={{ backgroundColor: category.color }}\n          >\n            {category.appCount} Apps\n          </span>\n        </div>\n        <p className=\"text-gray-300 text-sm mb-4\">{category.description}</p>\n        <div className=\"space-y-2 text-sm\">\n          {displayApps.map((app) => (\n            <div key={app.id} className=\"flex justify-between\">\n              <span>{app.name}</span>\n              <i className=\"fas fa-arrow-right\" style={{ color: category.color }}></i>\n            </div>\n          ))}\n          {remainingCount > 0 && (\n            <div className=\"text-gray-400\">+{remainingCount} more apps</div>\n          )}\n        </div>\n      </div>\n    </Link>\n  );\n}\n","size_bytes":1712},"FutureHome/client/src/components/app-sidebar.tsx":{"content":"import { type App, type Category } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Link } from \"wouter\";\nimport { \n  ChevronDown, \n  ChevronRight, \n  Home, \n  Settings,\n  BarChart3,\n  Users,\n  FileText,\n  Calendar,\n  MessageSquare,\n  Phone,\n  Mail,\n  CreditCard,\n  Package,\n  Truck,\n  Shield,\n  Database,\n  Code,\n  Zap,\n  Globe,\n  Camera,\n  Video,\n  Headphones,\n  Monitor,\n  Smartphone,\n  Cloud,\n  Share2,\n  Edit3,\n  BookOpen,\n  GraduationCap,\n  Target,\n  PieChart,\n  TrendingUp,\n  TrendingDown,\n  Search,\n  Filter,\n  Upload,\n  Download,\n  Lock,\n  Key,\n  UserCheck,\n  Wifi,\n  Server,\n  HardDrive,\n  Layers,\n  GitBranch,\n  PlayCircle,\n  PauseCircle,\n  RotateCcw,\n  RefreshCw,\n  Eye,\n  EyeOff,\n  MousePointer,\n  Palette,\n  Brush,\n  Image,\n  FileImage,\n  Music,\n  FileMusic,\n  Film,\n  FileVideo,\n  Mic,\n  Volume2,\n  Clock,\n  Timer,\n  MapPin,\n  Map,\n  Navigation,\n  Compass,\n  Star,\n  Heart,\n  ThumbsUp,\n  MessageCircle,\n  Send,\n  Inbox,\n  Archive,\n  Tag,\n  Bookmark,\n  Flag,\n  Bell,\n  AlertCircle,\n  CheckCircle,\n  XCircle,\n  Plus,\n  Minus,\n  X,\n  Check,\n  ArrowRight,\n  ArrowLeft,\n  ArrowUp,\n  ArrowDown,\n  ExternalLink,\n  Paperclip,\n  Scissors,\n  Copy,\n  Clipboard,\n  Save,\n  FolderOpen,\n  Folder,\n  Files,\n  FileCheck,\n  FilePlus,\n  FileX,\n  Grid,\n  List,\n  Table,\n  Columns,\n  Rows,\n  MoreHorizontal,\n  MoreVertical,\n  Menu,\n  Sidebar,\n  Layout,\n  Maximize2,\n  Minimize2,\n  Fullscreen,\n  Crosshair,\n  Move,\n  RotateCw,\n  FlipHorizontal,\n  FlipVertical,\n  Crop,\n  ZoomIn,\n  ZoomOut,\n  Focus,\n  Aperture,\n  Sliders,\n  ToggleLeft,\n  ToggleRight,\n  Power,\n  PowerOff,\n  Plug,\n  Unplug,\n  Battery,\n  BatteryLow,\n  Cpu,\n  MemoryStick,\n  HardDrive as Storage,\n  Router,\n  Bluetooth,\n  Printer,\n  Webcam,\n  Gamepad2,\n  Joystick,\n  Keyboard,\n  Mouse,\n  Tablet,\n  Laptop,\n  Tv,\n  Watch,\n  Radio,\n  Satellite,\n  Bot,\n  DollarSign,\n  Building,\n  Building2,\n  Hash,\n  Calculator,\n  Link2,\n  User\n} from \"lucide-react\";\nimport { useState } from \"react\";\n\ninterface AppSidebarProps {\n  app: App;\n  category: Category;\n  currentPage?: string;\n}\n\n// App-specific navigation structure based on Zoho.com\nconst getAppNavigation = (appName: string) => {\n  const navigationMap: Record<string, any> = {\n    \"CRM\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Dashboard\", \"Today's Activities\", \"Recent Items\", \"My CRM Home\", \"Home Page Designer\"]\n        },\n        {\n          title: \"Leads\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Leads\", \"Today's Leads\", \"Recently Created Leads\", \"Recently Modified Leads\", \"Overdue Leads\", \"My Leads\", \"Converted Leads\", \"Unqualified Leads\"]\n        },\n        {\n          title: \"Contacts\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Contacts\", \"Today's Contacts\", \"Recently Created Contacts\", \"Recently Modified Contacts\", \"My Contacts\", \"Mailing Labels\", \"Untouched Contacts\"]\n        },\n        {\n          title: \"Accounts\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Accounts\", \"Today's Accounts\", \"Recently Created Accounts\", \"Recently Modified Accounts\", \"My Accounts\", \"Untouched Accounts\"]\n        },\n        {\n          title: \"Deals\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"All Deals\", \"Today's Deals\", \"Recently Created Deals\", \"Recently Modified Deals\", \"My Deals\", \"Closing This Month\", \"Overdue Deals\", \"Won Deals\", \"Lost Deals\"]\n        },\n        {\n          title: \"Tasks\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"All Tasks\", \"Today's Tasks\", \"Yesterday's Tasks\", \"This Week's Tasks\", \"Overdue Tasks\", \"Recently Created Tasks\", \"Recently Modified Tasks\", \"My Tasks\", \"Recurring Tasks\"]\n        },\n        {\n          title: \"Events\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"All Events\", \"Today's Events\", \"This Week's Events\", \"Recently Created Events\", \"Recently Modified Events\", \"My Events\", \"Recurring Events\"]\n        },\n        {\n          title: \"Calls\",\n          icon: <Phone className=\"w-4 h-4\" />,\n          items: [\"All Calls\", \"Today's Calls\", \"Overdue Calls\", \"Recently Created Calls\", \"Recently Modified Calls\", \"My Calls\", \"Recurring Calls\"]\n        },\n        {\n          title: \"Campaigns\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"All Campaigns\", \"Recently Created Campaigns\", \"Recently Modified Campaigns\", \"My Campaigns\", \"Active Campaigns\", \"Inactive Campaigns\", \"Archived Campaigns\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"All Reports\", \"Lead Reports\", \"Contact Reports\", \"Account Reports\", \"Deal Reports\", \"Activity Reports\", \"Campaign Reports\", \"Forecast Reports\", \"Analytics\"]\n        },\n        {\n          title: \"Dashboards\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"All Dashboards\", \"Sales Dashboard\", \"Marketing Dashboard\", \"CEO Dashboard\", \"Sales Manager Dashboard\", \"My Dashboard\"]\n        },\n        {\n          title: \"Forecasts\",\n          icon: <TrendingUp className=\"w-4 h-4\" />,\n          items: [\"Forecasts\", \"Forecast Settings\", \"Territory Forecasts\", \"User Forecasts\"]\n        },\n        {\n          title: \"Products\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"All Products\", \"Recently Created Products\", \"Recently Modified Products\", \"My Products\", \"Active Products\", \"Inactive Products\"]\n        },\n        {\n          title: \"Price Books\",\n          icon: <DollarSign className=\"w-4 h-4\" />,\n          items: [\"All Price Books\", \"Recently Created Price Books\", \"Recently Modified Price Books\", \"My Price Books\", \"Active Price Books\"]\n        },\n        {\n          title: \"Quotes\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Quotes\", \"Recently Created Quotes\", \"Recently Modified Quotes\", \"My Quotes\", \"Accepted Quotes\", \"Declined Quotes\", \"Draft Quotes\"]\n        },\n        {\n          title: \"Sales Orders\",\n          icon: <Truck className=\"w-4 h-4\" />,\n          items: [\"All Sales Orders\", \"Recently Created Sales Orders\", \"Recently Modified Sales Orders\", \"My Sales Orders\", \"Confirmed Sales Orders\", \"Delivered Sales Orders\"]\n        },\n        {\n          title: \"Purchase Orders\",\n          icon: <Truck className=\"w-4 h-4\" />,\n          items: [\"All Purchase Orders\", \"Recently Created Purchase Orders\", \"Recently Modified Purchase Orders\", \"My Purchase Orders\", \"Delivered Purchase Orders\"]\n        },\n        {\n          title: \"Invoices\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Invoices\", \"Recently Created Invoices\", \"Recently Modified Invoices\", \"My Invoices\", \"Sent Invoices\", \"Paid Invoices\", \"Overdue Invoices\"]\n        },\n        {\n          title: \"Cases\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"All Cases\", \"Today's Cases\", \"Recently Created Cases\", \"Recently Modified Cases\", \"My Cases\", \"Open Cases\", \"On Hold Cases\", \"Escalated Cases\", \"Closed Cases\"]\n        },\n        {\n          title: \"Solutions\",\n          icon: <BookOpen className=\"w-4 h-4\" />,\n          items: [\"All Solutions\", \"Recently Created Solutions\", \"Recently Modified Solutions\", \"My Solutions\", \"Published Solutions\", \"Draft Solutions\"]\n        },\n        {\n          title: \"Vendors\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Vendors\", \"Recently Created Vendors\", \"Recently Modified Vendors\", \"My Vendors\", \"Active Vendors\", \"Inactive Vendors\"]\n        },\n        {\n          title: \"Documents\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"All Documents\", \"Recently Created Documents\", \"Recently Modified Documents\", \"My Documents\", \"Folders\"]\n        },\n        {\n          title: \"Feeds\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"What I Follow\", \"Company Updates\", \"My Posts\", \"All Posts\", \"Recent Activities\"]\n        },\n        {\n          title: \"Recycle Bin\",\n          icon: <Archive className=\"w-4 h-4\" />,\n          items: [\"Deleted Leads\", \"Deleted Contacts\", \"Deleted Accounts\", \"Deleted Deals\", \"Deleted Activities\", \"Deleted Records\"]\n        }\n      ]\n    },\n    \"Bigin\": {\n      sections: [\n        {\n          title: \"Pipelines\",\n          icon: <GitBranch className=\"w-4 h-4\" />,\n          items: [\"Team Pipelines\", \"Sub-Pipelines\", \"Sales Pipeline\", \"Customer Support Pipelines\", \"Stage Automation\", \"Collapsible Stages\"]\n        },\n        {\n          title: \"Contacts\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Customer Data\", \"Prospect Management\", \"Contact Details\", \"Associated Deals\", \"Lead Conversion\", \"Custom Contact Fields\", \"Activities History\"]\n        },\n        {\n          title: \"Companies\",\n          icon: <Building2 className=\"w-4 h-4\" />,\n          items: [\"Business Partners\", \"Company Profiles\", \"Associated Contacts\", \"Business Relationships\", \"Company Pipelines\"]\n        },\n        {\n          title: \"Products\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Product Catalog\", \"Services Management\", \"Product Lifecycle\", \"Pricing & Inventory\", \"Product Records\", \"Custom Product Fields\"]\n        },\n        {\n          title: \"Activities\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Tasks & Events\", \"Calls Scheduling\", \"Calendar Integration\", \"Follow-up Reminders\", \"Activity Notifications\", \"Call Logging\", \"Meeting Scheduling\"]\n        },\n        {\n          title: \"Dashboards\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Goal Setting\", \"Goal Tracking\", \"Business Insights\", \"Performance Metrics\", \"Custom Reporting\", \"Data Visualization\", \"Progress Monitoring\"]\n        },\n        {\n          title: \"Messages\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Lead Capture\", \"Customer Communication\", \"Chat History\", \"Multi-channel Messaging\", \"WhatsApp Integration\", \"Communication Logs\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Email Workflows\", \"Stage Automation\", \"Booking Pages\", \"LeadChain Integration\", \"Marketing Automation\", \"Workflow Builder\"]\n        },\n        {\n          title: \"Integrations\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"Zoho SalesIQ\", \"Instagram Integration\", \"Facebook Integration\", \"LinkedIn Integration\", \"TikTok Integration\", \"Enhanced Forms\"]\n        },\n        {\n          title: \"Mobile Features\",\n          icon: <Smartphone className=\"w-4 h-4\" />,\n          items: [\"Business Card Scanner\", \"Offline Access\", \"Push Notifications\", \"Touch ID Security\", \"Dark Mode\", \"Calendar View\"]\n        }\n      ]\n    },\n    \"Books\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Dashboard\", \"Getting Started\", \"Announcements\", \"Recent Updates\", \"Custom Dashboards\"]\n        },\n        {\n          title: \"Sales\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Customers\", \"Invoices\", \"Sales Orders\", \"Quotes\", \"Delivery Challans\", \"Sales Receipts\", \"Credit Notes\", \"Payments Received\", \"Retainer Invoices\"]\n        },\n        {\n          title: \"Purchases\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Vendors\", \"Bills\", \"Purchase Orders\", \"Purchase Receives\", \"Vendor Credits\", \"Payments Made\", \"Expenses\"]\n        },\n        {\n          title: \"Items\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Items\", \"Price Lists\", \"Inventory Adjustments\", \"Composite Items\", \"Item Groups\"]\n        },\n        {\n          title: \"Banking\",\n          icon: <Building2 className=\"w-4 h-4\" />,\n          items: [\"Bank Accounts\", \"Deposits\", \"Withdrawals\", \"Bank Reconciliation\", \"Rules\"]\n        },\n        {\n          title: \"Accountant\",\n          icon: <Calculator className=\"w-4 h-4\" />,\n          items: [\"Chart of Accounts\", \"Manual Journals\", \"Bulk Updates\", \"Currencies\", \"Opening Balances\"]\n        },\n        {\n          title: \"Projects\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Projects\", \"Time Tracking\", \"Project Expenses\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Financial Reports\", \"Sales Reports\", \"Purchase Reports\", \"Tax Reports\", \"Inventory Reports\", \"Account Reports\", \"Project Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"More\",\n          icon: <MoreHorizontal className=\"w-4 h-4\" />,\n          items: [\"Custom Modules\", \"Retainer Invoices\", \"Documents\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Organization Profile\", \"Users & Roles\", \"General Preferences\", \"Taxes\", \"Templates\", \"Online Payments\", \"Email Settings\", \"Import/Export\", \"Extensions\", \"Backup\"]\n        }\n      ]\n    },\n    \"Campaigns\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Campaign Analytics\", \"Performance Overview\", \"Customized Dashboard\", \"Recent Activity\"]\n        },\n        {\n          title: \"Campaigns\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Email Campaigns\", \"SMS Campaigns\", \"A/B Testing\", \"Event Platform Integration\", \"Send Immediately\", \"Schedule Campaigns\", \"Batch Sending\"]\n        },\n        {\n          title: \"Contacts\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"List Management\", \"Dynamic Segments\", \"Exclusion Lists\", \"Zoho CRM Sync\", \"Custom Fields\", \"Signup Forms\", \"Permission-based Marketing\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Drip Campaigns\", \"Workflow Builder\", \"Lead Scoring\", \"Triggered Actions\", \"Behavior-based Sequences\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <Palette className=\"w-4 h-4\" />,\n          items: [\"Mobile-responsive Templates\", \"Custom HTML\", \"Drag-and-drop Builder\", \"Image Editing\", \"Merge Tags\", \"Template Library\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Real-time Analytics\", \"A/B Test Results\", \"Litmus Integration\", \"Campaign Performance\", \"Version History\"]\n        },\n        {\n          title: \"Social Integration\",\n          icon: <Share2 className=\"w-4 h-4\" />,\n          items: [\"Facebook Promotion\", \"Twitter Integration\", \"LinkedIn Sharing\", \"Social Media Analytics\"]\n        },\n        {\n          title: \"Integrations\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"Zoho Ecosystem\", \"WooCommerce\", \"Shopify\", \"Zapier Integration\", \"50+ App Integrations\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Dashboard Customization\", \"Sender Authentication\", \"Data Management\", \"Team Collaboration\", \"Template Management\"]\n        }\n      ]\n    },\n    \"Desk\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"The HQ\", \"My Dashboard\", \"Team Dashboard\", \"Getting Started\", \"Recent Activity\"]\n        },\n        {\n          title: \"Tickets\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"My Tickets\", \"All Tickets\", \"Ticket Views\", \"Blueprints\", \"Assignment Rules\", \"Escalation Rules\", \"Time Tracking\"]\n        },\n        {\n          title: \"Contacts\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Contacts\", \"Accounts\", \"Contact Views\", \"Account Views\"]\n        },\n        {\n          title: \"Knowledge Base\",\n          icon: <BookOpen className=\"w-4 h-4\" />,\n          items: [\"Articles\", \"Categories\", \"Community Forums\", \"Help Center\", \"ASAP\", \"Multilingual Support\"]\n        },\n        {\n          title: \"Channels\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Email Integration\", \"Live Chat\", \"Phone Integration\", \"Social Media\", \"WhatsApp Business\", \"Web Forms\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"The HQ Dashboard\", \"Ticket Status Dashboard\", \"Agent Performance\", \"Customer Satisfaction\", \"Custom Dashboards\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Standard Reports\", \"Custom Reports\", \"Scheduled Reports\", \"Performance Metrics\", \"Trend Analysis\"]\n        },\n        {\n          title: \"AI & Automation\",\n          icon: <Bot className=\"w-4 h-4\" />,\n          items: [\"Zia AI Assistant\", \"Sentiment Analysis\", \"Answer Bot\", \"Workflows\", \"Macros\", \"Custom Functions\"]\n        },\n        {\n          title: \"Setup\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Users & Roles\", \"Departments\", \"Products\", \"Custom Fields\", \"Layouts\", \"Email Templates\", \"Integrations\", \"Extensions\"]\n        }\n      ]\n    },\n    \"Mail\": {\n      sections: [\n        {\n          title: \"Compose\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"New Email\", \"Templates\", \"Signatures\", \"Scheduled Send\", \"Rich Text Editor\"]\n        },\n        {\n          title: \"Inbox\",\n          icon: <Inbox className=\"w-4 h-4\" />,\n          items: [\"All Mail\", \"Unread\", \"Important\", \"Starred\", \"With Attachments\"]\n        },\n        {\n          title: \"Drafts\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Draft Emails\", \"Auto-saved Drafts\", \"Scheduled Emails\"]\n        },\n        {\n          title: \"Outbox\",\n          icon: <Send className=\"w-4 h-4\" />,\n          items: [\"Pending Send\", \"Scheduled Emails\", \"Failed Sends\"]\n        },\n        {\n          title: \"Sent\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Sent Mail\", \"Delivery Reports\", \"Read Receipts\"]\n        },\n        {\n          title: \"Spam\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Spam Emails\", \"Blocked Senders\", \"Spam Settings\"]\n        },\n        {\n          title: \"Trash\",\n          icon: <Archive className=\"w-4 h-4\" />,\n          items: [\"Deleted Emails\", \"Empty Trash\", \"Recover Emails\"]\n        },\n        {\n          title: \"Folders\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"Custom Folders\", \"Shared Folders\", \"System Folders\", \"Folder Settings\"]\n        },\n        {\n          title: \"Tags\",\n          icon: <Tag className=\"w-4 h-4\" />,\n          items: [\"Color Tags\", \"Custom Tags\", \"Tag Management\"]\n        },\n        {\n          title: \"Views\",\n          icon: <Eye className=\"w-4 h-4\" />,\n          items: [\"Unread View\", \"Archived View\", \"Attachment View\", \"Conversation View\"]\n        },\n        {\n          title: \"Streams\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Team Streams\", \"Group Collaboration\", \"Stream Settings\"]\n        },\n        {\n          title: \"Zoho Apps\",\n          icon: <Grid className=\"w-4 h-4\" />,\n          items: [\"Calendar\", \"Contacts\", \"Tasks\", \"Notes\", \"Bookmarks\", \"Resources\", \"eArchive\"]\n        }\n      ]\n    },\n    \"Projects\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Homepage\", \"Dashboard Overview\", \"Recent Activity\", \"Quick Access Widgets\"]\n        },\n        {\n          title: \"Projects\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Projects\", \"Project Templates\", \"Project Creation\", \"Active Projects\", \"Archived Projects\"]\n        },\n        {\n          title: \"Tasks\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Task Lists\", \"All Tasks\", \"My Tasks\", \"Task Views\", \"Task Dependencies\", \"Subtasks\"]\n        },\n        {\n          title: \"Gantt & Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Milestone Gantt\", \"Chronology Gantt\", \"Dependencies Visualization\", \"Critical Path\", \"Baseline Comparisons\"]\n        },\n        {\n          title: \"Time Tracking\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Timesheets\", \"Manual Time Entry\", \"Timer-based Logging\", \"Billable Hours\", \"Time Reports\"]\n        },\n        {\n          title: \"Milestones\",\n          icon: <Flag className=\"w-4 h-4\" />,\n          items: [\"All Milestones\", \"Create Milestone\", \"Milestone Tracking\", \"Project Phases\"]\n        },\n        {\n          title: \"Issues\",\n          icon: <AlertCircle className=\"w-4 h-4\" />,\n          items: [\"Bug Tracking\", \"Issue Management\", \"Bug-Task Associations\", \"Issue Reports\"]\n        },\n        {\n          title: \"Documents\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"File Management\", \"WorkDrive Integration\", \"Document Sharing\", \"Version Control\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <TrendingUp className=\"w-4 h-4\" />,\n          items: [\"Workload Tracking\", \"Plan vs Actuals\", \"Resource Utilization\", \"Project Analytics\", \"Custom Reports\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Activity Feeds\", \"Shared Calendars\", \"Team Chat\", \"Comments & Mentions\"]\n        }\n      ]\n    },\n    \"People\": {\n      sections: [\n        {\n          title: \"Employee\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Employee Directory\", \"My Space\", \"Employee Profiles\", \"Organization Chart\"]\n        },\n        {\n          title: \"Attendance\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Check In/Out\", \"Attendance Reports\", \"Attendance Settings\", \"Regularization\", \"Shifts\", \"Working Hours\", \"Overtime\"]\n        },\n        {\n          title: \"Leave\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Apply Leave\", \"Leave Calendar\", \"Leave Approvals\", \"Leave Reports\", \"Leave Settings\", \"Leave Types\", \"Holiday Calendar\"]\n        },\n        {\n          title: \"Performance\",\n          icon: <Target className=\"w-4 h-4\" />,\n          items: [\"Performance Management\", \"Learning Management\", \"Compensation Module\"]\n        },\n        {\n          title: \"Communication\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Announcements\", \"Feeds\", \"Files\", \"Forms\"]\n        },\n        {\n          title: \"Administration\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Settings\", \"Reports\", \"Integrations\", \"Cases\"]\n        },\n        {\n          title: \"Mobile Features\",\n          icon: <Smartphone className=\"w-4 h-4\" />,\n          items: [\"Facial Recognition\", \"Location Tracking\", \"Push Notifications\", \"Offline Capability\", \"AI Chatbot Zia\"]\n        }\n      ]\n    },\n    \"Invoice\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Sales Overview\", \"Receivables Summary\", \"Top Projects\", \"Business Metrics\", \"Real-time Sync\"]\n        },\n        {\n          title: \"Invoices\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Create Invoice\", \"All Invoices\", \"Draft Invoices\", \"Sent Invoices\", \"Paid Invoices\", \"Overdue Invoices\", \"Batch Operations\", \"Advanced Search\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Customers\", \"Customer Portal\", \"Customer Statements\", \"Credit Limit Management\", \"Payment Information\", \"Multi-factor Authentication\"]\n        },\n        {\n          title: \"Items\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Product Catalog\", \"Service Items\", \"Item Categories\", \"Import Items\", \"Import Overwrite\"]\n        },\n        {\n          title: \"Quotes\",\n          icon: <FileCheck className=\"w-4 h-4\" />,\n          items: [\"Create Estimate\", \"All Quotes\", \"Professional Quotes\", \"Quote Templates\"]\n        },\n        {\n          title: \"Recurring Invoices\",\n          icon: <RefreshCw className=\"w-4 h-4\" />,\n          items: [\"Automated Billing\", \"Recurring Templates\", \"Subscription Management\"]\n        },\n        {\n          title: \"Credit Notes\",\n          icon: <FileX className=\"w-4 h-4\" />,\n          items: [\"Refund Management\", \"Credit Adjustments\", \"Credit Note Templates\"]\n        },\n        {\n          title: \"Expenses\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Track Expenses\", \"Expense Categories\", \"Billable Expenses\", \"Receipt Management\"]\n        },\n        {\n          title: \"Timesheets\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Time Tracking\", \"Project Billing\", \"Timesheet Reports\"]\n        },\n        {\n          title: \"Projects\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"Project Management\", \"Revenue Tracking\", \"Project Reports\"]\n        },\n        {\n          title: \"Payment Links\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"Standalone Payment Collection\", \"Payment Link Management\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Financial Reports\", \"Invoice Analytics\", \"Payment Reports\", \"Tax Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Organization Profile\", \"User Management\", \"Custom Fields\", \"Templates\", \"Payment Gateways\", \"Integrations\", \"Digital Signatures\"]\n        }\n      ]\n    },\n    \"SalesInbox\": {\n      sections: [\n        {\n          title: \"Deals\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Active Deals\", \"Deal Pipeline\", \"Deal Communications\", \"Deal Progress\", \"Sales Opportunities\"]\n        },\n        {\n          title: \"Leads\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Prospective Customers\", \"Lead Communications\", \"Lead Conversion\", \"Follow-up Management\"]\n        },\n        {\n          title: \"Contacts\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Customer Correspondence\", \"Contact Timeline\", \"Interaction History\", \"Customer Engagement\"]\n        },\n        {\n          title: \"Not in CRM\",\n          icon: <User className=\"w-4 h-4\" />,\n          items: [\"Unknown Contacts\", \"New Prospects\", \"External Communications\", \"Lead Creation\"]\n        },\n        {\n          title: \"Colleagues\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Internal Communications\", \"Team Collaboration\", \"Internal Updates\"]\n        },\n        {\n          title: \"Smart Features\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Auto-prioritization\", \"CRM Filtering\", \"Label System\", \"Drag-and-drop Actions\", \"Contact Suggestions\"]\n        },\n        {\n          title: \"ResponseWatch\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Deadline Reminders\", \"Overdue Notifications\", \"VIP Customer Alerts\", \"Follow-up Automation\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Email Intelligence\", \"Open Tracking\", \"Template Performance\", \"Dashboard Reports\", \"A/B Testing Insights\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Sales Email Templates\", \"Email Scheduling\", \"Performance Tracking\", \"CRM-based Suggestions\"]\n        },\n        {\n          title: \"Team Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Shared Contexts\", \"Team Handoffs\", \"New Hire Onboarding\", \"Role Change Continuity\"]\n        }\n      ]\n    },\n    \"SalesIQ\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Settings > Brands\", \"Channel Management\", \"Brand Configuration\", \"Department Access\", \"Dark/Light Theme\"]\n        },\n        {\n          title: \"Live Chat\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Chat Widget Customization\", \"Float vs Static Options\", \"Custom Branding\", \"Chat Window Themes\", \"Operator Profile Pictures\", \"24-Hour Idle Management\"]\n        },\n        {\n          title: \"Multi-Channel\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"WhatsApp Integration\", \"Telegram Support\", \"Facebook Messenger\", \"Pre-chat Forms\", \"Canned Response Categories\", \"Hebrew RTL Support\"]\n        },\n        {\n          title: \"Visitor Tracking\",\n          icon: <Eye className=\"w-4 h-4\" />,\n          items: [\"Real-time Analytics\", \"Geographic Tracking\", \"Behavioral Insights\", \"Lead Scoring\", \"Mobile App Tracking\", \"Mobilisten SDK\"]\n        },\n        {\n          title: \"Visitor Data\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Demographics\", \"Engagement Metrics\", \"CRM Integration\", \"Email Campaign Tracking\", \"MailChimp Integration\"]\n        },\n        {\n          title: \"Widgets\",\n          icon: <Code className=\"w-4 h-4\" />,\n          items: [\"Custom Widget Development\", \"Deluge Scripting\", \"API Access\", \"Webhooks\", \"Platform Support\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Weekly Reports Dashboard\", \"Visitor Trends\", \"Real-time Notifications\", \"Automated Mailing Lists\", \"Google Analytics Sync\"]\n        },\n        {\n          title: \"Integrations\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"Zoho Desk Integration\", \"TV Apps\", \"Android TV\", \"Apple TV\", \"Desktop Apps\", \"Mobile Alerts\"]\n        }\n      ]\n    },\n    \"Motivator\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Performance Overview\", \"Team Standings\", \"Achievement Gallery\", \"Recent Activities\"]\n        },\n        {\n          title: \"Games\",\n          icon: <Target className=\"w-4 h-4\" />,\n          items: [\"Active Games\", \"Game Templates\", \"Custom Games\", \"Game History\", \"Game Settings\"]\n        },\n        {\n          title: \"Leaderboards\",\n          icon: <TrendingUp className=\"w-4 h-4\" />,\n          items: [\"Top Performers\", \"Team Rankings\", \"Individual Scores\", \"Period Comparisons\"]\n        },\n        {\n          title: \"Achievements\",\n          icon: <Star className=\"w-4 h-4\" />,\n          items: [\"Badges\", \"Rewards\", \"Milestones\", \"Recognition Wall\", \"Achievement History\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Performance Metrics\", \"Engagement Reports\", \"ROI Analysis\", \"Behavioral Insights\"]\n        },\n        {\n          title: \"Setup\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"KPI Configuration\", \"Team Setup\", \"Reward System\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Social\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Brand Health Overview\", \"Performance Metrics\", \"Live Notifications\", \"Unified Activity Feed\"]\n        },\n        {\n          title: \"Publish\",\n          icon: <Send className=\"w-4 h-4\" />,\n          items: [\"New Post Composer\", \"Multi-platform Support\", \"Publishing Calendar\", \"Content Queue\", \"SmartQ Predictions\", \"Draft Management\", \"Team Approvals\"]\n        },\n        {\n          title: \"Posts\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Published Posts\", \"Scheduled Posts\", \"Performance Tracking\", \"Failed Posts\", \"Post Analytics\"]\n        },\n        {\n          title: \"Calendar\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Visual Content Planning\", \"Monthly/Weekly/Daily Views\", \"Drag-and-drop Scheduling\", \"Notes & Events\", \"Holiday View\", \"Time Zone Customization\"]\n        },\n        {\n          title: \"Monitor\",\n          icon: <Search className=\"w-4 h-4\" />,\n          items: [\"Real-time Social Listening\", \"Brand Mentions\", \"Keyword Monitoring\", \"Hashtag Performance\", \"Custom Columns\", \"Competitor Tracking\"]\n        },\n        {\n          title: \"Messages\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Unified Inbox\", \"WhatsApp Business\", \"Telegram Integration\", \"Saved Replies\", \"Conversation History\", \"Team Assignment\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Custom Analytics Dashboard\", \"Pre-built Templates\", \"Performance Metrics\", \"Automated Scheduling\", \"PDF/PNG Export\", \"White-label Options\"]\n        },\n        {\n          title: \"Connections\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Audience Profile Management\", \"Lead Identification\", \"CRM Integration\", \"Follower Organization\", \"Direct Engagement\"]\n        },\n        {\n          title: \"Platforms\",\n          icon: <Grid className=\"w-4 h-4\" />,\n          items: [\"Facebook\", \"Instagram\", \"X/Twitter\", \"LinkedIn\", \"YouTube\", \"TikTok\", \"Pinterest\", \"Threads\", \"Bluesky\", \"Mastodon\"]\n        },\n        {\n          title: \"Team\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Role-based Permissions\", \"Content Approval\", \"Team Chat\", \"Client Portal\", \"White-label Reporting\"]\n        }\n      ]\n    },\n    \"Marketing Automation\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Campaign Overview\", \"Lead Flow Analytics\", \"Performance Metrics\", \"Real-time Activities\", \"ROI Dashboard\"]\n        },\n        {\n          title: \"Journey Builder\",\n          icon: <GitBranch className=\"w-4 h-4\" />,\n          items: [\"Visual Journey Designer\", \"Customer Journey Mapping\", \"Multi-channel Journeys\", \"Trigger Events\", \"Path Analysis\", \"Journey Templates\"]\n        },\n        {\n          title: \"Campaigns\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Email Campaigns\", \"SMS Campaigns\", \"Push Notifications\", \"In-App Messages\", \"Web Push\", \"Social Media Campaigns\"]\n        },\n        {\n          title: \"Lead Management\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Lead Scoring\", \"Lead Nurturing\", \"Behavioral Tracking\", \"Lead Lifecycle\", \"Progressive Profiling\"]\n        },\n        {\n          title: \"Segmentation\",\n          icon: <Filter className=\"w-4 h-4\" />,\n          items: [\"Audience Segments\", \"Dynamic Lists\", \"Behavioral Triggers\", \"Custom Attributes\", \"Smart Segmentation\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Workflow Automation\", \"Trigger Campaigns\", \"Auto-responses\", \"Drip Sequences\", \"Event-based Actions\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Campaign Performance\", \"Attribution Reports\", \"Conversion Tracking\", \"A/B Test Results\", \"Revenue Attribution\"]\n        },\n        {\n          title: \"Integration\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"CRM Integration\", \"Website Tracking\", \"API Configuration\", \"Webhooks\", \"Third-party Apps\"]\n        }\n      ]\n    },\n    \"PageSense\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Optimization Overview\", \"Active Experiments\", \"Conversion Insights\", \"Performance Summary\", \"Quick Stats\"]\n        },\n        {\n          title: \"A/B Testing\",\n          icon: <Target className=\"w-4 h-4\" />,\n          items: [\"Create A/B Test\", \"Running Tests\", \"Test Results\", \"Statistical Significance\", \"Winner Selection\", \"Test Templates\", \"Multivariate Testing\"]\n        },\n        {\n          title: \"Heatmaps\",\n          icon: <MousePointer className=\"w-4 h-4\" />,\n          items: [\"Click Heatmaps\", \"Scroll Heatmaps\", \"Move Heatmaps\", \"Attention Heatmaps\", \"Mobile Heatmaps\", \"Page Comparison\", \"Element Analysis\"]\n        },\n        {\n          title: \"Session Recordings\",\n          icon: <PlayCircle className=\"w-4 h-4\" />,\n          items: [\"User Sessions\", \"Visitor Recordings\", \"Funnel Analysis\", \"Error Tracking\", \"Form Analytics\", \"Conversion Paths\", \"Drop-off Analysis\"]\n        },\n        {\n          title: \"Funnels\",\n          icon: <TrendingDown className=\"w-4 h-4\" />,\n          items: [\"Funnel Builder\", \"Conversion Funnel\", \"Drop-off Points\", \"Funnel Optimization\", \"Goal Tracking\"]\n        },\n        {\n          title: \"Polls & Surveys\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"On-page Polls\", \"Exit-Intent Surveys\", \"Feedback Widgets\", \"NPS Surveys\", \"User Voice\", \"Custom Questions\"]\n        },\n        {\n          title: \"Form Analytics\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Form Analysis\", \"Field Analytics\", \"Form Drop-offs\", \"Completion Rates\", \"Form Optimization\"]\n        },\n        {\n          title: \"Goals & Events\",\n          icon: <Flag className=\"w-4 h-4\" />,\n          items: [\"Goal Setup\", \"Conversion Goals\", \"Custom Events\", \"Revenue Tracking\", \"Goal Analytics\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Conversion Reports\", \"Experiment Reports\", \"Revenue Impact\", \"Visitor Behavior\", \"Performance Analytics\"]\n        }\n      ]\n    },\n    \"Forms\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Form Overview\", \"Submission Stats\", \"Performance Metrics\", \"Recent Submissions\", \"Quick Actions\"]\n        },\n        {\n          title: \"All Forms\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"My Forms\", \"Shared Forms\", \"Published Forms\", \"Draft Forms\", \"Archived Forms\", \"Deleted Forms\"]\n        },\n        {\n          title: \"Form Builder\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Drag & Drop Builder\", \"Field Library\", \"Design Themes\", \"Logic & Rules\", \"Conditional Logic\", \"Multi-page Forms\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <Copy className=\"w-4 h-4\" />,\n          items: [\"Form Templates\", \"Industry Templates\", \"Custom Templates\", \"Template Gallery\", \"Template Builder\"]\n        },\n        {\n          title: \"Submissions\",\n          icon: <Inbox className=\"w-4 h-4\" />,\n          items: [\"All Submissions\", \"Recent Submissions\", \"Export Data\", \"Submission Details\", \"Data Validation\", \"Duplicate Detection\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Form Analytics\", \"Submission Reports\", \"Conversion Rates\", \"Field Analytics\", \"Drop-off Analysis\", \"Time Analytics\"]\n        },\n        {\n          title: \"Integrations\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"CRM Integration\", \"Email Marketing\", \"Payment Gateways\", \"Webhooks\", \"API Access\", \"Third-party Apps\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Account Settings\", \"Form Settings\", \"Notification Settings\", \"Security Settings\", \"User Management\"]\n        }\n      ]\n    },\n    \"Survey\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Survey Overview\", \"Response Analytics\", \"Active Surveys\", \"Performance Summary\"]\n        },\n        {\n          title: \"Surveys\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"All Surveys\", \"Published Surveys\", \"Draft Surveys\", \"Survey Templates\", \"Question Bank\"]\n        },\n        {\n          title: \"Builder\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Survey Builder\", \"Question Types\", \"Logic & Branching\", \"Survey Themes\", \"Advanced Settings\"]\n        },\n        {\n          title: \"Distribution\",\n          icon: <Share2 className=\"w-4 h-4\" />,\n          items: [\"Email Invitations\", \"Social Sharing\", \"Website Embedding\", \"QR Codes\", \"Mobile App\"]\n        },\n        {\n          title: \"Responses\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"All Responses\", \"Response Details\", \"Export Responses\", \"Real-time Results\", \"Data Filtering\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Response Analytics\", \"Cross Tabulation\", \"Sentiment Analysis\", \"Text Analytics\", \"Reports\"]\n        }\n      ]\n    },\n    \"Backstage\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Event Overview\", \"Registration Stats\", \"Revenue Summary\", \"Recent Activities\"]\n        },\n        {\n          title: \"Events\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"All Events\", \"Upcoming Events\", \"Past Events\", \"Event Templates\", \"Event Series\"]\n        },\n        {\n          title: \"Registration\",\n          icon: <UserCheck className=\"w-4 h-4\" />,\n          items: [\"Registration Forms\", \"Ticket Types\", \"Pricing Tiers\", \"Discount Codes\", \"Waitlist Management\"]\n        },\n        {\n          title: \"Attendees\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Attendee List\", \"Check-in Management\", \"Attendee Communication\", \"Badge Printing\", \"Networking\"]\n        },\n        {\n          title: \"Marketing\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Email Campaigns\", \"Social Promotion\", \"Landing Pages\", \"Referral Program\", \"Analytics\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Registration Reports\", \"Revenue Reports\", \"Attendance Reports\", \"Survey Results\"]\n        }\n      ]\n    },\n    \"Expense\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Expense Overview\", \"Pending Approvals\", \"Monthly Summary\", \"Quick Actions\"]\n        },\n        {\n          title: \"Expenses\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"All Expenses\", \"My Expenses\", \"Team Expenses\", \"Recurring Expenses\", \"Mileage Tracking\"]\n        },\n        {\n          title: \"Receipts\",\n          icon: <Camera className=\"w-4 h-4\" />,\n          items: [\"Receipt Capture\", \"Auto-Scan\", \"Receipt Matching\", \"Receipt Storage\", \"Mobile Upload\"]\n        },\n        {\n          title: \"Approvals\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Pending Approvals\", \"Approval Workflows\", \"Rejected Expenses\", \"Approved Expenses\"]\n        },\n        {\n          title: \"Reimbursements\",\n          icon: <DollarSign className=\"w-4 h-4\" />,\n          items: [\"Pending Reimbursements\", \"Payment Processing\", \"Reimbursement History\", \"Payment Methods\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Expense Reports\", \"Category Reports\", \"Employee Reports\", \"Tax Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Expense Policies\", \"Categories\", \"Approval Rules\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Subscriptions\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Revenue Overview\", \"Subscription Metrics\", \"Growth Analytics\", \"Churn Analysis\"]\n        },\n        {\n          title: \"Subscriptions\",\n          icon: <RefreshCw className=\"w-4 h-4\" />,\n          items: [\"All Subscriptions\", \"Active Subscriptions\", \"Paused Subscriptions\", \"Cancelled Subscriptions\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Customers\", \"Customer Portal\", \"Customer Communication\", \"Customer Segmentation\"]\n        },\n        {\n          title: \"Plans\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Subscription Plans\", \"Pricing Tiers\", \"Add-ons\", \"Plan Upgrades\", \"Plan Analytics\"]\n        },\n        {\n          title: \"Billing\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Invoices\", \"Payment Methods\", \"Failed Payments\", \"Dunning Management\", \"Tax Settings\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Revenue Reports\", \"Subscription Analytics\", \"Cohort Analysis\", \"Lifetime Value\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Billing Settings\", \"Payment Gateways\", \"Email Templates\", \"Webhooks\"]\n        }\n      ]\n    },\n    \"Inventory\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Inventory Overview\", \"Stock Levels\", \"Low Stock Alerts\", \"Recent Transactions\"]\n        },\n        {\n          title: \"Items\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"All Items\", \"Item Groups\", \"Composite Items\", \"Serial Numbers\", \"Item Images\"]\n        },\n        {\n          title: \"Stock\",\n          icon: <Storage className=\"w-4 h-4\" />,\n          items: [\"Stock Summary\", \"Stock Adjustments\", \"Stock Transfers\", \"Physical Count\", \"Reorder Points\"]\n        },\n        {\n          title: \"Orders\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Sales Orders\", \"Purchase Orders\", \"Order Fulfillment\", \"Backorders\", \"Order History\"]\n        },\n        {\n          title: \"Warehouses\",\n          icon: <Building2 className=\"w-4 h-4\" />,\n          items: [\"Warehouse Management\", \"Locations\", \"Bin Management\", \"Warehouse Transfers\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Inventory Reports\", \"Valuation Reports\", \"Movement Reports\", \"Aging Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"Units of Measure\", \"Categories\", \"Preferences\"]\n        }\n      ]\n    },\n    \"Checkout\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Payment Overview\", \"Transaction Stats\", \"Revenue Summary\", \"Recent Payments\"]\n        },\n        {\n          title: \"Payment Pages\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"All Pages\", \"Published Pages\", \"Draft Pages\", \"Page Templates\", \"Mobile Pages\"]\n        },\n        {\n          title: \"Transactions\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Transactions\", \"Successful Payments\", \"Failed Payments\", \"Refunds\", \"Chargebacks\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Customer Database\", \"Payment Methods\", \"Customer Communications\", \"Purchase History\"]\n        },\n        {\n          title: \"Products\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Product Catalog\", \"Pricing\", \"Inventory Integration\", \"Digital Products\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Payment Analytics\", \"Conversion Rates\", \"Abandonment Analysis\", \"Revenue Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Payment Settings\", \"Gateway Configuration\", \"Security Settings\", \"Branding\"]\n        }\n      ]\n    },\n    \"Analytics\": {\n      sections: [\n        {\n          title: \"Modules\",\n          icon: <Grid className=\"w-4 h-4\" />,\n          items: [\"Teamspace Modules\", \"Module Management\", \"Custom Modules\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Reports\", \"Favorite Reports\", \"Recent Reports\", \"Shared Reports\", \"Create New Report\"]\n        },\n        {\n          title: \"Dashboards\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"All Dashboards\", \"Favorite Dashboards\", \"Recent Dashboards\", \"Shared Dashboards\", \"Create New Dashboard\"]\n        },\n        {\n          title: \"Data Sources\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Connected Sources\", \"Import Data\", \"Database Connections\", \"File Imports\", \"Zoho App Integrations\", \"Third-party Connectors\"]\n        },\n        {\n          title: \"AI & Intelligence\",\n          icon: <Bot className=\"w-4 h-4\" />,\n          items: [\"Ask Zia\", \"Zia Insights\", \"Predictive Analytics\", \"Advanced Analytics\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Shared Workspaces\", \"Comments & Annotations\", \"User Management\", \"Activity Logs\"]\n        },\n        {\n          title: \"New Features 2024\",\n          icon: <Star className=\"w-4 h-4\" />,\n          items: [\"Sunburst Charts\", \"Enhanced JavaScript API\", \"Distributed Architecture\", \"Puvi Font Support\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Workspace Settings\", \"Currency Formatting\", \"Week/Year Format\", \"Fiscal Year Settings\", \"Data Backup\", \"User Permissions\"]\n        }\n      ]\n    },\n    \"Recruit\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Recruitment Overview\", \"Pipeline Analytics\", \"Team Performance\", \"Recent Activities\"]\n        },\n        {\n          title: \"Jobs\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Jobs\", \"Published Jobs\", \"Draft Jobs\", \"Job Templates\", \"Job Boards\"]\n        },\n        {\n          title: \"Candidates\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Candidates\", \"Resume Database\", \"Candidate Profiles\", \"Source Tracking\", \"Candidate Pool\"]\n        },\n        {\n          title: \"Applications\",\n          icon: <Inbox className=\"w-4 h-4\" />,\n          items: [\"All Applications\", \"Interview Scheduling\", \"Application Status\", \"Candidate Pipeline\"]\n        },\n        {\n          title: \"Interviews\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Schedule Interview\", \"Interview Calendar\", \"Interview Feedback\", \"Panel Management\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Recruitment Reports\", \"Source Analytics\", \"Time-to-Hire\", \"Cost-per-Hire\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Recruitment Settings\", \"User Management\", \"Workflow Configuration\", \"Integrations\"]\n        }\n      ]\n    },\n    \"Workerly\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Workforce Overview\", \"Assignment Status\", \"Performance Metrics\", \"Recent Activities\"]\n        },\n        {\n          title: \"Workers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Workers\", \"Worker Profiles\", \"Skills & Qualifications\", \"Availability\"]\n        },\n        {\n          title: \"Assignments\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Current Assignments\", \"Assignment History\", \"Assignment Matching\", \"Client Requests\"]\n        },\n        {\n          title: \"Scheduling\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Shift Scheduling\", \"Calendar View\", \"Time Tracking\", \"Attendance Management\"]\n        },\n        {\n          title: \"Payroll\",\n          icon: <DollarSign className=\"w-4 h-4\" />,\n          items: [\"Payroll Processing\", \"Timesheets\", \"Payment Records\", \"Tax Management\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Workforce Analytics\", \"Performance Reports\", \"Financial Reports\", \"Compliance Reports\"]\n        }\n      ]\n    },\n    \"Cliq\": {\n      sections: [\n        {\n          title: \"Chats\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"All Conversations\", \"Direct Messages\", \"Group Chats\", \"Starred Messages\", \"Message Search\"]\n        },\n        {\n          title: \"Channels\",\n          icon: <Hash className=\"w-4 h-4\" />,\n          items: [\"All Channels\", \"Public Channels\", \"Private Channels\", \"Channel Discovery\", \"Channel Settings\"]\n        },\n        {\n          title: \"Teams\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"My Teams\", \"Team Directory\", \"Team Settings\", \"Team Analytics\", \"Cross-functional Teams\"]\n        },\n        {\n          title: \"Calls\",\n          icon: <Phone className=\"w-4 h-4\" />,\n          items: [\"Audio Calls\", \"Video Calls\", \"Screen Sharing\", \"Call History\", \"Conference Calls\"]\n        },\n        {\n          title: \"Files\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Shared Files\", \"File Library\", \"Recent Files\", \"File Search\", \"Cloud Storage\"]\n        },\n        {\n          title: \"Integrations\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"App Integrations\", \"Bots\", \"Workflows\", \"Custom Commands\", \"API Access\"]\n        }\n      ]\n    },\n    \"Meeting\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Meeting Overview\", \"Upcoming Meetings\", \"Recent Recordings\", \"Usage Analytics\"]\n        },\n        {\n          title: \"Meetings\",\n          icon: <Video className=\"w-4 h-4\" />,\n          items: [\"Start Meeting\", \"Schedule Meeting\", \"Join Meeting\", \"Meeting History\", \"Recurring Meetings\"]\n        },\n        {\n          title: \"Webinars\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Host Webinar\", \"Webinar Registration\", \"Attendee Management\", \"Webinar Analytics\"]\n        },\n        {\n          title: \"Recordings\",\n          icon: <PlayCircle className=\"w-4 h-4\" />,\n          items: [\"All Recordings\", \"Cloud Recordings\", \"Local Recordings\", \"Recording Settings\"]\n        },\n        {\n          title: \"Room Management\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"Meeting Rooms\", \"Room Booking\", \"Room Equipment\", \"Room Analytics\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Meeting Settings\", \"Security Settings\", \"Integration Settings\", \"User Management\"]\n        }\n      ]\n    },\n    \"Connect\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Activity Feed\", \"News & Updates\", \"Trending Topics\", \"Company Announcements\"]\n        },\n        {\n          title: \"Groups\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"My Groups\", \"All Groups\", \"Create Group\", \"Group Directory\", \"Group Analytics\"]\n        },\n        {\n          title: \"Forums\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Discussion Forums\", \"Q&A Forums\", \"Knowledge Sharing\", \"Expert Networks\"]\n        },\n        {\n          title: \"Events\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Upcoming Events\", \"Create Event\", \"Event Calendar\", \"Event Registration\", \"Virtual Events\"]\n        },\n        {\n          title: \"Knowledge Base\",\n          icon: <BookOpen className=\"w-4 h-4\" />,\n          items: [\"Articles\", \"Wikis\", \"Best Practices\", \"Training Materials\", \"Resource Library\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Engagement Metrics\", \"User Activity\", \"Content Performance\", \"Network Analysis\"]\n        }\n      ]\n    },\n    \"WorkDrive\": {\n      sections: [\n        {\n          title: \"My Files\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"All Files\", \"Recent Files\", \"Starred Files\", \"Trash\", \"Offline Files\"]\n        },\n        {\n          title: \"Shared\",\n          icon: <Share2 className=\"w-4 h-4\" />,\n          items: [\"Shared with Me\", \"Shared by Me\", \"Team Folders\", \"Public Links\", \"External Sharing\"]\n        },\n        {\n          title: \"Team Folders\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Team Folders\", \"My Teams\", \"Folder Permissions\", \"Team Analytics\"]\n        },\n        {\n          title: \"Sync\",\n          icon: <RefreshCw className=\"w-4 h-4\" />,\n          items: [\"Desktop Sync\", \"Mobile Sync\", \"Sync Status\", \"Sync Settings\", \"Version History\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Access Permissions\", \"Data Encryption\", \"Audit Logs\", \"Compliance Reports\"]\n        },\n        {\n          title: \"Administration\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"User Management\", \"Storage Management\", \"Security Settings\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Writer\": {\n      sections: [\n        {\n          title: \"Documents\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"My Documents\", \"Recent Documents\", \"Shared Documents\", \"Templates\", \"Drafts\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Real-time Editing\", \"Comments\", \"Suggestions\", \"Track Changes\", \"Document Sharing\"]\n        },\n        {\n          title: \"Formatting\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Text Formatting\", \"Styles\", \"Headers & Footers\", \"Tables\", \"Images & Media\"]\n        },\n        {\n          title: \"Review\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Spell Check\", \"Grammar Check\", \"Document Review\", \"Version History\", \"Approval Workflow\"]\n        },\n        {\n          title: \"Export\",\n          icon: <Download className=\"w-4 h-4\" />,\n          items: [\"PDF Export\", \"Word Export\", \"HTML Export\", \"Print Options\", \"Batch Export\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Document Settings\", \"Sharing Permissions\", \"Auto-save Settings\", \"Language Settings\"]\n        }\n      ]\n    },\n    \"Sheet\": {\n      sections: [\n        {\n          title: \"Spreadsheets\",\n          icon: <Table className=\"w-4 h-4\" />,\n          items: [\"My Spreadsheets\", \"Recent Sheets\", \"Shared Sheets\", \"Templates\", \"Drafts\"]\n        },\n        {\n          title: \"Data\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Data Import\", \"Data Validation\", \"Pivot Tables\", \"Charts & Graphs\", \"Data Analysis\"]\n        },\n        {\n          title: \"Functions\",\n          icon: <Calculator className=\"w-4 h-4\" />,\n          items: [\"Formula Builder\", \"Function Library\", \"Custom Functions\", \"Array Formulas\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Real-time Editing\", \"Comments\", \"Sheet Sharing\", \"Permission Management\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Macros\", \"Scripts\", \"Auto-fill\", \"Conditional Formatting\", \"Data Triggers\"]\n        },\n        {\n          title: \"Export\",\n          icon: <Download className=\"w-4 h-4\" />,\n          items: [\"Excel Export\", \"CSV Export\", \"PDF Export\", \"Chart Export\", \"Print Options\"]\n        }\n      ]\n    },\n    \"Show\": {\n      sections: [\n        {\n          title: \"Presentations\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"My Presentations\", \"Recent Presentations\", \"Shared Presentations\", \"Templates\", \"Drafts\"]\n        },\n        {\n          title: \"Design\",\n          icon: <Palette className=\"w-4 h-4\" />,\n          items: [\"Slide Layouts\", \"Themes\", \"Master Slides\", \"Animation Effects\", \"Transitions\"]\n        },\n        {\n          title: \"Media\",\n          icon: <Image className=\"w-4 h-4\" />,\n          items: [\"Images\", \"Videos\", \"Audio\", \"Charts\", \"Icons\", \"Stock Media\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Real-time Editing\", \"Comments\", \"Presenter Notes\", \"Review Mode\", \"Sharing\"]\n        },\n        {\n          title: \"Present\",\n          icon: <PlayCircle className=\"w-4 h-4\" />,\n          items: [\"Slideshow Mode\", \"Presenter View\", \"Remote Control\", \"Broadcast\", \"Record Presentation\"]\n        },\n        {\n          title: \"Export\",\n          icon: <Download className=\"w-4 h-4\" />,\n          items: [\"PDF Export\", \"PowerPoint Export\", \"Image Export\", \"Video Export\", \"Print\"]\n        }\n      ]\n    },\n    \"Notebook\": {\n      sections: [\n        {\n          title: \"Notebooks\",\n          icon: <BookOpen className=\"w-4 h-4\" />,\n          items: [\"My Notebooks\", \"Shared Notebooks\", \"Recent Notes\", \"Favorites\", \"Archived\"]\n        },\n        {\n          title: \"Notes\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Create Note\", \"Text Notes\", \"Audio Notes\", \"Photo Notes\", \"Sketch Notes\"]\n        },\n        {\n          title: \"Organization\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"Tags\", \"Categories\", \"Search\", \"Filters\", \"Quick Access\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Share2 className=\"w-4 h-4\" />,\n          items: [\"Share Notebooks\", \"Team Notes\", \"Comments\", \"Real-time Sync\"]\n        },\n        {\n          title: \"Sync\",\n          icon: <RefreshCw className=\"w-4 h-4\" />,\n          items: [\"Cloud Sync\", \"Offline Access\", \"Multi-device Sync\", \"Backup\"]\n        }\n      ]\n    },\n    \"Sign\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Document Overview\", \"Pending Signatures\", \"Completed Documents\", \"Recent Activity\"]\n        },\n        {\n          title: \"Documents\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Documents\", \"Draft Documents\", \"In Progress\", \"Completed\", \"Templates\"]\n        },\n        {\n          title: \"Send for Signature\",\n          icon: <Send className=\"w-4 h-4\" />,\n          items: [\"Upload Document\", \"Add Recipients\", \"Set Signature Fields\", \"Customize Message\"]\n        },\n        {\n          title: \"Sign Documents\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Pending Signatures\", \"Digital Signature\", \"Initial & Date\", \"Fill Forms\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <Copy className=\"w-4 h-4\" />,\n          items: [\"Document Templates\", \"Signature Templates\", \"Reusable Fields\", \"Template Library\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Signature Analytics\", \"Document Status\", \"Audit Trail\", \"Compliance Reports\"]\n        }\n      ]\n    },\n    \"Assist\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Support Overview\", \"Active Sessions\", \"Performance Metrics\", \"Recent Activities\"]\n        },\n        {\n          title: \"Remote Support\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"Screen Sharing\", \"Remote Control\", \"File Transfer\", \"Multi-monitor Support\"]\n        },\n        {\n          title: \"Sessions\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Current Sessions\", \"Scheduled Sessions\", \"Session History\", \"Session Recording\"]\n        },\n        {\n          title: \"Chat Support\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Live Chat\", \"Chat History\", \"File Sharing\", \"Screen Annotation\"]\n        },\n        {\n          title: \"Tools\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"System Information\", \"Diagnostic Tools\", \"Performance Monitor\", \"Registry Editor\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Session Reports\", \"Performance Reports\", \"Usage Analytics\", \"Customer Satisfaction\"]\n        }\n      ]\n    },\n    \"Lens\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"AR Overview\", \"Active Sessions\", \"Device Status\", \"Recent Activities\"]\n        },\n        {\n          title: \"AR Sessions\",\n          icon: <Eye className=\"w-4 h-4\" />,\n          items: [\"Start AR Session\", \"Join Session\", \"Session Library\", \"Session Recording\"]\n        },\n        {\n          title: \"Annotations\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"3D Annotations\", \"Voice Notes\", \"Drawing Tools\", \"Measurement Tools\"]\n        },\n        {\n          title: \"Knowledge Base\",\n          icon: <BookOpen className=\"w-4 h-4\" />,\n          items: [\"AR Guides\", \"Step-by-step Instructions\", \"Video Tutorials\", \"Documentation\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Multi-user Sessions\", \"Expert Assistance\", \"Real-time Sharing\", \"Team Collaboration\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Usage Analytics\", \"Performance Metrics\", \"Session Analysis\", \"ROI Reports\"]\n        }\n      ]\n    },\n    \"Sites\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Site Overview\", \"Traffic Analytics\", \"Performance Metrics\", \"Recent Updates\"]\n        },\n        {\n          title: \"Sites\",\n          icon: <Globe className=\"w-4 h-4\" />,\n          items: [\"All Sites\", \"Published Sites\", \"Draft Sites\", \"Site Templates\", \"Mobile Sites\"]\n        },\n        {\n          title: \"Builder\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Page Builder\", \"Design Elements\", \"Layouts\", \"Widgets\", \"Custom Code\"]\n        },\n        {\n          title: \"Content\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Pages\", \"Blog Posts\", \"Media Library\", \"Forms\", \"SEO Settings\"]\n        },\n        {\n          title: \"E-commerce\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Online Store\", \"Products\", \"Orders\", \"Payment Settings\", \"Inventory\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Traffic Reports\", \"Visitor Analytics\", \"Conversion Tracking\", \"SEO Performance\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Domain Settings\", \"SSL Certificates\", \"Backup\", \"Performance Optimization\"]\n        }\n      ]\n    },\n    \"Creator\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"App Overview\", \"Usage Analytics\", \"Performance Stats\", \"Recent Activities\"]\n        },\n        {\n          title: \"Applications\",\n          icon: <Code className=\"w-4 h-4\" />,\n          items: [\"My Apps\", \"Published Apps\", \"Draft Apps\", \"App Templates\", \"Shared Apps\"]\n        },\n        {\n          title: \"Builder\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Form Builder\", \"Report Builder\", \"Workflow Builder\", \"Page Builder\", \"Script Editor\"]\n        },\n        {\n          title: \"Data\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Data Management\", \"Import/Export\", \"Data Validation\", \"Relationships\", \"Lookup Fields\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Workflows\", \"Triggers\", \"Scheduled Actions\", \"Email Notifications\", \"Webhooks\"]\n        },\n        {\n          title: \"Integration\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"API Access\", \"Third-party Integrations\", \"Zapier\", \"Custom Connections\"]\n        },\n        {\n          title: \"Publishing\",\n          icon: <Upload className=\"w-4 h-4\" />,\n          items: [\"App Deployment\", \"User Management\", \"Access Control\", \"Mobile Apps\"]\n        }\n      ]\n    },\n    \"Flow\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Automation Overview\", \"Active Workflows\", \"Execution Stats\", \"Recent Activities\"]\n        },\n        {\n          title: \"Workflows\",\n          icon: <GitBranch className=\"w-4 h-4\" />,\n          items: [\"My Workflows\", \"Shared Workflows\", \"Workflow Templates\", \"Draft Workflows\"]\n        },\n        {\n          title: \"Builder\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Visual Builder\", \"Triggers\", \"Actions\", \"Conditions\", \"Functions\"]\n        },\n        {\n          title: \"Executions\",\n          icon: <PlayCircle className=\"w-4 h-4\" />,\n          items: [\"Execution History\", \"Failed Executions\", \"Scheduled Executions\", \"Real-time Monitoring\"]\n        },\n        {\n          title: \"Connections\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"App Connections\", \"API Integrations\", \"Webhooks\", \"Custom Connections\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Account Settings\", \"Team Management\", \"Usage Limits\", \"Security Settings\"]\n        }\n      ]\n    },\n    \"DataPrep\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Data Overview\", \"Processing Stats\", \"Recent Datasets\", \"Quick Actions\"]\n        },\n        {\n          title: \"Datasets\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"My Datasets\", \"Shared Datasets\", \"Data Sources\", \"Import Data\"]\n        },\n        {\n          title: \"Preparation\",\n          icon: <Filter className=\"w-4 h-4\" />,\n          items: [\"Data Cleaning\", \"Transform Data\", \"Merge Datasets\", \"Data Validation\"]\n        },\n        {\n          title: \"Recipes\",\n          icon: <Code className=\"w-4 h-4\" />,\n          items: [\"Transformation Recipes\", \"Recipe Templates\", \"Custom Functions\", \"Recipe History\"]\n        },\n        {\n          title: \"Export\",\n          icon: <Download className=\"w-4 h-4\" />,\n          items: [\"Export Data\", \"Schedule Exports\", \"Export Formats\", \"Data Publishing\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"Data Sources\", \"Performance Settings\", \"Security\"]\n        }\n      ]\n    },\n    \"Vault\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Password Overview\", \"Security Score\", \"Recent Activities\", \"Alerts\"]\n        },\n        {\n          title: \"Passwords\",\n          icon: <Key className=\"w-4 h-4\" />,\n          items: [\"All Passwords\", \"Favorites\", \"Weak Passwords\", \"Duplicate Passwords\", \"Recently Used\"]\n        },\n        {\n          title: \"Secure Notes\",\n          icon: <Lock className=\"w-4 h-4\" />,\n          items: [\"Personal Notes\", \"Business Notes\", \"Credit Cards\", \"Bank Accounts\", \"Documents\"]\n        },\n        {\n          title: \"Sharing\",\n          icon: <Share2 className=\"w-4 h-4\" />,\n          items: [\"Shared Items\", \"Emergency Access\", \"Team Sharing\", \"Secure Sharing\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Two-Factor Auth\", \"Security Audit\", \"Breach Monitoring\", \"Password Generator\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Account Settings\", \"Security Settings\", \"Backup & Sync\", \"Browser Extensions\"]\n        }\n      ]\n    },\n    \"OneAuth\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Authentication Overview\", \"Login Analytics\", \"Security Alerts\", \"Recent Activities\"]\n        },\n        {\n          title: \"Multi-Factor Auth\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Authenticator Apps\", \"SMS Verification\", \"Email Verification\", \"Hardware Tokens\"]\n        },\n        {\n          title: \"Applications\",\n          icon: <Grid className=\"w-4 h-4\" />,\n          items: [\"Connected Apps\", \"SSO Applications\", \"App Directory\", \"Custom Apps\"]\n        },\n        {\n          title: \"Users\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"User Management\", \"User Groups\", \"Access Policies\", \"Login History\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Lock className=\"w-4 h-4\" />,\n          items: [\"Security Policies\", \"Risk Assessment\", \"Compliance Reports\", \"Audit Logs\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Organization Settings\", \"Authentication Policies\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Directory\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Organization Overview\", \"User Activity\", \"Device Status\", \"Security Summary\"]\n        },\n        {\n          title: \"Users\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Users\", \"User Profiles\", \"User Groups\", \"Organizational Units\", \"User Import\"]\n        },\n        {\n          title: \"Devices\",\n          icon: <Smartphone className=\"w-4 h-4\" />,\n          items: [\"All Devices\", \"Device Groups\", \"Device Policies\", \"Device Compliance\"]\n        },\n        {\n          title: \"Applications\",\n          icon: <Grid className=\"w-4 h-4\" />,\n          items: [\"App Management\", \"App Deployment\", \"App Policies\", \"App Usage Analytics\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Access Control\", \"Security Policies\", \"Threat Detection\", \"Compliance Monitoring\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"User Reports\", \"Device Reports\", \"Security Reports\", \"Compliance Reports\"]\n        }\n      ]\n    },\n    \"MDM\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Device Overview\", \"Enrollment Stats\", \"Compliance Status\", \"Recent Activities\"]\n        },\n        {\n          title: \"Devices\",\n          icon: <Smartphone className=\"w-4 h-4\" />,\n          items: [\"All Devices\", \"iOS Devices\", \"Android Devices\", \"Windows Devices\", \"Device Groups\"]\n        },\n        {\n          title: \"Enrollment\",\n          icon: <UserCheck className=\"w-4 h-4\" />,\n          items: [\"Device Enrollment\", \"Enrollment Policies\", \"Enrollment Templates\", \"Bulk Enrollment\"]\n        },\n        {\n          title: \"Policies\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Device Policies\", \"App Policies\", \"Security Policies\", \"Compliance Policies\"]\n        },\n        {\n          title: \"Applications\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"App Management\", \"App Distribution\", \"App Store\", \"Enterprise Apps\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Device Security\", \"Remote Actions\", \"Location Tracking\", \"Threat Protection\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Device Reports\", \"Compliance Reports\", \"Security Reports\", \"Usage Reports\"]\n        }\n      ]\n    },\n    \"Learn\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Learning Overview\", \"Progress Tracking\", \"Course Analytics\", \"Recent Activities\"]\n        },\n        {\n          title: \"Courses\",\n          icon: <GraduationCap className=\"w-4 h-4\" />,\n          items: [\"All Courses\", \"My Courses\", \"Course Catalog\", \"Course Creation\", \"Course Library\"]\n        },\n        {\n          title: \"Learning Paths\",\n          icon: <Map className=\"w-4 h-4\" />,\n          items: [\"Learning Paths\", \"Skill Tracks\", \"Certification Programs\", \"Custom Paths\"]\n        },\n        {\n          title: \"Assessments\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Quizzes\", \"Assignments\", \"Exams\", \"Certifications\", \"Skill Assessments\"]\n        },\n        {\n          title: \"Social Learning\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Discussion Forums\", \"Study Groups\", \"Peer Reviews\", \"Knowledge Sharing\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Learning Analytics\", \"Progress Reports\", \"Performance Metrics\", \"ROI Analysis\"]\n        }\n      ]\n    },\n    \"TeamInbox\": {\n      sections: [\n        {\n          title: \"Inbox\",\n          icon: <Inbox className=\"w-4 h-4\" />,\n          items: [\"Shared Inbox\", \"Unassigned\", \"My Messages\", \"High Priority\", \"Archived\"]\n        },\n        {\n          title: \"Channels\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Email Channels\", \"Social Channels\", \"Chat Channels\", \"Custom Channels\"]\n        },\n        {\n          title: \"Team Management\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Team Members\", \"Assignment Rules\", \"Workload Distribution\", \"Performance Tracking\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <Copy className=\"w-4 h-4\" />,\n          items: [\"Response Templates\", \"Email Templates\", \"Canned Responses\", \"Signature Templates\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Auto-assignment\", \"Auto-responses\", \"Workflow Rules\", \"Escalation Rules\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Response Time\", \"Team Performance\", \"Volume Analytics\", \"Customer Satisfaction\"]\n        }\n      ]\n    },\n    \"Sprints\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Sprint Overview\", \"Team Velocity\", \"Burndown Charts\", \"Sprint Progress\"]\n        },\n        {\n          title: \"Backlog\",\n          icon: <List className=\"w-4 h-4\" />,\n          items: [\"Product Backlog\", \"Sprint Backlog\", \"Epic Management\", \"Story Mapping\"]\n        },\n        {\n          title: \"Sprints\",\n          icon: <Timer className=\"w-4 h-4\" />,\n          items: [\"Active Sprints\", \"Sprint Planning\", \"Sprint Review\", \"Sprint Retrospective\"]\n        },\n        {\n          title: \"Scrum Board\",\n          icon: <Grid className=\"w-4 h-4\" />,\n          items: [\"Kanban Board\", \"Task Management\", \"Workflow Stages\", \"Custom Workflows\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Velocity Reports\", \"Burndown Reports\", \"Sprint Reports\", \"Team Performance\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Project Settings\", \"Team Configuration\", \"Workflow Settings\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Bookings\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Booking Overview\", \"Today's Appointments\", \"Revenue Summary\", \"Customer Insights\"]\n        },\n        {\n          title: \"Calendar\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Appointment Calendar\", \"Availability Settings\", \"Time Slots\", \"Recurring Appointments\"]\n        },\n        {\n          title: \"Services\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Service Catalog\", \"Service Pricing\", \"Service Duration\", \"Service Categories\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Customer Directory\", \"Customer History\", \"Customer Communications\", \"Customer Feedback\"]\n        },\n        {\n          title: \"Staff\",\n          icon: <UserCheck className=\"w-4 h-4\" />,\n          items: [\"Staff Management\", \"Staff Schedules\", \"Staff Assignments\", \"Staff Performance\"]\n        },\n        {\n          title: \"Payments\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Payment Processing\", \"Payment Methods\", \"Invoicing\", \"Payment Reports\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Booking Analytics\", \"Revenue Reports\", \"Customer Analytics\", \"Performance Metrics\"]\n        }\n      ]\n    },\n    \"Thrive\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Partner Overview\", \"Relationship Health\", \"Performance Metrics\", \"Recent Activities\"]\n        },\n        {\n          title: \"Partners\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Partners\", \"Partner Profiles\", \"Partner Hierarchy\", \"Partner Onboarding\"]\n        },\n        {\n          title: \"Opportunities\",\n          icon: <Target className=\"w-4 h-4\" />,\n          items: [\"Deal Registration\", \"Partner Opportunities\", \"Pipeline Management\", \"Revenue Tracking\"]\n        },\n        {\n          title: \"Programs\",\n          icon: <GraduationCap className=\"w-4 h-4\" />,\n          items: [\"Partner Programs\", \"Certification Programs\", \"Training Materials\", \"Program Analytics\"]\n        },\n        {\n          title: \"Marketing\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Co-marketing\", \"Marketing Resources\", \"Campaign Management\", \"Brand Guidelines\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Partner Performance\", \"Revenue Analytics\", \"Program Effectiveness\", \"ROI Reports\"]\n        }\n      ]\n    },\n    \"LandingPage\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Page Overview\", \"Conversion Analytics\", \"Traffic Stats\", \"Performance Summary\"]\n        },\n        {\n          title: \"Pages\",\n          icon: <Globe className=\"w-4 h-4\" />,\n          items: [\"All Pages\", \"Published Pages\", \"Draft Pages\", \"Page Templates\", \"Mobile Pages\"]\n        },\n        {\n          title: \"Builder\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Page Builder\", \"Design Elements\", \"Layout Templates\", \"Custom Code\", \"Media Library\"]\n        },\n        {\n          title: \"Forms\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Lead Forms\", \"Contact Forms\", \"Subscription Forms\", \"Custom Forms\", \"Form Analytics\"]\n        },\n        {\n          title: \"A/B Testing\",\n          icon: <Target className=\"w-4 h-4\" />,\n          items: [\"Create Tests\", \"Running Tests\", \"Test Results\", \"Winner Selection\", \"Test History\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Conversion Analytics\", \"Traffic Sources\", \"Visitor Behavior\", \"Performance Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Domain Settings\", \"SEO Settings\", \"Integration Settings\", \"Publishing Options\"]\n        }\n      ]\n    },\n    \"Commerce\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Store Overview\", \"Sales Dashboard\", \"Analytics Dashboard\", \"Performance Metrics\", \"Quick Actions\"]\n        },\n        {\n          title: \"Products\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"All Products\", \"Add Product\", \"Categories\", \"Brands\", \"Variants\", \"Bulk Import\", \"Product Reviews\", \"Digital Products\"]\n        },\n        {\n          title: \"Orders\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"All Orders\", \"Pending Orders\", \"Processing Orders\", \"Shipped Orders\", \"Delivered Orders\", \"Cancelled Orders\", \"Returns\", \"Refunds\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Customers\", \"Customer Groups\", \"Customer Reviews\", \"Wishlist\", \"Customer Analytics\", \"Loyalty Program\"]\n        },\n        {\n          title: \"Inventory\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Stock Management\", \"Low Stock Alerts\", \"Inventory Reports\", \"Stock Adjustments\", \"Warehouses\", \"Transfers\"]\n        },\n        {\n          title: \"Marketing\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Campaigns\", \"Coupons & Discounts\", \"Email Marketing\", \"SEO Tools\", \"Social Media\", \"Abandoned Cart Recovery\"]\n        },\n        {\n          title: \"Payments\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Payment Methods\", \"Transaction History\", \"Payment Reports\", \"Gateway Settings\", \"Refund Management\"]\n        },\n        {\n          title: \"Shipping\",\n          icon: <Truck className=\"w-4 h-4\" />,\n          items: [\"Shipping Methods\", \"Shipping Zones\", \"Shipping Labels\", \"Tracking\", \"Shipping Reports\", \"Carriers\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Sales Reports\", \"Product Reports\", \"Customer Reports\", \"Inventory Reports\", \"Financial Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Store Settings\", \"Payment Settings\", \"Shipping Settings\", \"Tax Settings\", \"Theme Customization\", \"Integrations\"]\n        }\n      ]\n    },\n    \"BugTracker\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Project Overview\", \"My Dashboard\", \"Team Dashboard\", \"Bug Statistics\", \"Recent Activity\"]\n        },\n        {\n          title: \"Bugs\",\n          icon: <AlertCircle className=\"w-4 h-4\" />,\n          items: [\"All Bugs\", \"Open Bugs\", \"Assigned to Me\", \"Recently Added\", \"Critical Bugs\", \"Resolved Bugs\", \"Closed Bugs\"]\n        },\n        {\n          title: \"Projects\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Projects\", \"Active Projects\", \"My Projects\", \"Project Templates\", \"Archived Projects\"]\n        },\n        {\n          title: \"Categories\",\n          icon: <Tag className=\"w-4 h-4\" />,\n          items: [\"Bug Categories\", \"Severity Levels\", \"Priority Levels\", \"Custom Categories\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Bug Reports\", \"Project Reports\", \"User Activity Reports\", \"Custom Reports\", \"Analytics\"]\n        },\n        {\n          title: \"Users\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Users\", \"User Groups\", \"User Roles\", \"User Activity\", \"Permissions\"]\n        },\n        {\n          title: \"Forums\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Discussion Forums\", \"Topics\", \"My Posts\", \"Popular Discussions\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"Email Settings\", \"Custom Fields\", \"Workflow Settings\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Wiki\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Wiki Home\", \"Recent Changes\", \"Popular Pages\", \"My Contributions\", \"Getting Started\"]\n        },\n        {\n          title: \"Pages\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Pages\", \"Create Page\", \"Page Templates\", \"Draft Pages\", \"My Pages\", \"Recently Viewed\"]\n        },\n        {\n          title: \"Categories\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"All Categories\", \"Create Category\", \"Category Tree\", \"Manage Categories\"]\n        },\n        {\n          title: \"Search\",\n          icon: <Search className=\"w-4 h-4\" />,\n          items: [\"Advanced Search\", \"Search Results\", \"Search History\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"User Contributions\", \"Page Comments\", \"Change History\", \"User Activity\", \"Team Wikis\"]\n        },\n        {\n          title: \"Administration\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"User Management\", \"Permissions\", \"Wiki Settings\", \"Templates\", \"Import/Export\"]\n        }\n      ]\n    },\n    \"Calendar\": {\n      sections: [\n        {\n          title: \"Calendar Views\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Month View\", \"Week View\", \"Day View\", \"Agenda View\", \"Year View\"]\n        },\n        {\n          title: \"Events\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"All Events\", \"Create Event\", \"Recurring Events\", \"My Events\", \"Upcoming Events\", \"Past Events\"]\n        },\n        {\n          title: \"Calendars\",\n          icon: <Grid className=\"w-4 h-4\" />,\n          items: [\"My Calendars\", \"Shared Calendars\", \"Public Calendars\", \"Subscribed Calendars\", \"Calendar Settings\"]\n        },\n        {\n          title: \"Tasks\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"All Tasks\", \"Today's Tasks\", \"Overdue Tasks\", \"Completed Tasks\", \"Task Lists\"]\n        },\n        {\n          title: \"Meetings\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Schedule Meeting\", \"Meeting Rooms\", \"Video Conferences\", \"Meeting History\"]\n        },\n        {\n          title: \"Reminders\",\n          icon: <Bell className=\"w-4 h-4\" />,\n          items: [\"All Reminders\", \"Email Reminders\", \"SMS Reminders\", \"Desktop Notifications\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"Notification Settings\", \"Sharing Settings\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Contacts\": {\n      sections: [\n        {\n          title: \"Contacts\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Contacts\", \"Add Contact\", \"My Contacts\", \"Recent Contacts\", \"Favorites\", \"Duplicates\"]\n        },\n        {\n          title: \"Groups\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Contact Groups\", \"Create Group\", \"Smart Groups\", \"Group Management\"]\n        },\n        {\n          title: \"Lists\",\n          icon: <List className=\"w-4 h-4\" />,\n          items: [\"Mailing Lists\", \"Distribution Lists\", \"Custom Lists\", \"List Management\"]\n        },\n        {\n          title: \"Communication\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Send Email\", \"Send SMS\", \"Communication History\", \"Templates\"]\n        },\n        {\n          title: \"Import/Export\",\n          icon: <Upload className=\"w-4 h-4\" />,\n          items: [\"Import Contacts\", \"Export Contacts\", \"Sync Settings\", \"Data Sources\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"Custom Fields\", \"Privacy Settings\", \"Sync Settings\"]\n        }\n      ]\n    },\n    \"Tasks\": {\n      sections: [\n        {\n          title: \"My Tasks\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"All Tasks\", \"Today's Tasks\", \"This Week\", \"Overdue\", \"Completed\", \"Deleted\"]\n        },\n        {\n          title: \"Projects\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Projects\", \"Active Projects\", \"My Projects\", \"Shared Projects\", \"Templates\"]\n        },\n        {\n          title: \"Lists\",\n          icon: <List className=\"w-4 h-4\" />,\n          items: [\"Task Lists\", \"Create List\", \"Shared Lists\", \"List Templates\"]\n        },\n        {\n          title: \"Calendar\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Task Calendar\", \"Timeline View\", \"Gantt View\", \"Due Dates\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Shared Tasks\", \"Team Tasks\", \"Comments\", \"Attachments\", \"Activity Feed\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Task Reports\", \"Progress Reports\", \"Time Tracking\", \"Productivity Analytics\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"Notification Settings\", \"Integration Settings\", \"Custom Fields\"]\n        }\n      ]\n    },\n    \"Reports\": {\n      sections: [\n        {\n          title: \"Folders\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"All Reports\", \"My Reports\", \"Favorites\", \"Recently Viewed\", \"Scheduled Reports\", \"Recently Deleted\"]\n        },\n        {\n          title: \"Account and Contact Reports\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Account Reports\", \"Contact Reports\", \"Account Contact Relationships\", \"Contact Activity Reports\"]\n        },\n        {\n          title: \"Deal Reports\",\n          icon: <TrendingUp className=\"w-4 h-4\" />,\n          items: [\"Deal Performance\", \"Deal Pipeline\", \"Deal Conversion\", \"Deal Activity\", \"Deal Forecast\"]\n        },\n        {\n          title: \"Lead Reports\",\n          icon: <ArrowRight className=\"w-4 h-4\" />,\n          items: [\"Lead Generation\", \"Lead Conversion\", \"Lead Source Analysis\", \"Lead Activity\", \"Lead Performance\"]\n        },\n        {\n          title: \"Campaign Reports\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Campaign Performance\", \"Campaign ROI\", \"Campaign Analytics\", \"Email Campaign Reports\"]\n        },\n        {\n          title: \"Case and Solution Reports\",\n          icon: <AlertCircle className=\"w-4 h-4\" />,\n          items: [\"Case Reports\", \"Solution Reports\", \"Case Resolution\", \"Support Analytics\"]\n        },\n        {\n          title: \"Product Reports\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Product Performance\", \"Product Analytics\", \"Inventory Reports\", \"Product Catalog\"]\n        },\n        {\n          title: \"Vendor Reports\",\n          icon: <Building2 className=\"w-4 h-4\" />,\n          items: [\"Vendor Performance\", \"Vendor Analysis\", \"Purchase Reports\", \"Vendor Analytics\"]\n        },\n        {\n          title: \"Quote Reports\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Quote Performance\", \"Quote Analysis\", \"Quote Conversion\", \"Quote Activity\"]\n        },\n        {\n          title: \"Sales Order Reports\",\n          icon: <Truck className=\"w-4 h-4\" />,\n          items: [\"Sales Order Performance\", \"Order Analysis\", \"Delivery Reports\", \"Order Tracking\"]\n        },\n        {\n          title: \"Purchase Order Reports\",\n          icon: <Truck className=\"w-4 h-4\" />,\n          items: [\"Purchase Order Performance\", \"Purchase Analysis\", \"Procurement Reports\", \"Purchase Tracking\"]\n        },\n        {\n          title: \"Invoice Reports\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Invoice Performance\", \"Invoice Analysis\", \"Payment Reports\", \"Revenue Reports\"]\n        },\n        {\n          title: \"Sales Metrics Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Sales Performance\", \"Sales Analytics\", \"Revenue Analytics\", \"Sales Forecasting\"]\n        },\n        {\n          title: \"Email Reports\",\n          icon: <Mail className=\"w-4 h-4\" />,\n          items: [\"Email Performance\", \"Email Analytics\", \"Email Campaign Reports\", \"Email Tracking\"]\n        },\n        {\n          title: \"Meeting Reports\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Meeting Performance\", \"Meeting Analytics\", \"Meeting Activity\", \"Meeting Scheduling\"]\n        }\n      ]\n    },\n    \"MarketingHub\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Marketing Dashboard\", \"Campaign Performance\", \"Lead Overview\", \"ROI Analytics\"]\n        },\n        {\n          title: \"Campaigns\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"All Campaigns\", \"Email Campaigns\", \"SMS Campaigns\", \"Social Campaigns\", \"Multi-channel Campaigns\"]\n        },\n        {\n          title: \"Lead Management\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Leads\", \"Lead Scoring\", \"Lead Nurturing\", \"Lead Qualification\", \"Lead Distribution\"]\n        },\n        {\n          title: \"Content\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Content Library\", \"Email Templates\", \"Landing Pages\", \"Forms\", \"Social Content\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Marketing Workflows\", \"Lead Nurturing\", \"Drip Campaigns\", \"Behavioral Triggers\", \"A/B Testing\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Campaign Analytics\", \"Lead Analytics\", \"Revenue Analytics\", \"Attribution Analysis\", \"Custom Reports\"]\n        },\n        {\n          title: \"Integration\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"CRM Integration\", \"Social Media\", \"Web Analytics\", \"Email Services\", \"Third-party Apps\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Account Settings\", \"Team Management\", \"Brand Settings\", \"API Configuration\"]\n        }\n      ]\n    },\n    \"Finances\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Financial Dashboard\", \"Cash Flow\", \"P&L Overview\", \"Key Metrics\", \"Budget vs Actual\"]\n        },\n        {\n          title: \"Transactions\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"All Transactions\", \"Income\", \"Expenses\", \"Transfers\", \"Recurring Transactions\"]\n        },\n        {\n          title: \"Accounts\",\n          icon: <Building2 className=\"w-4 h-4\" />,\n          items: [\"Chart of Accounts\", \"Bank Accounts\", \"Credit Cards\", \"Assets\", \"Liabilities\"]\n        },\n        {\n          title: \"Budgeting\",\n          icon: <Target className=\"w-4 h-4\" />,\n          items: [\"Budget Planning\", \"Budget vs Actual\", \"Variance Analysis\", \"Budget Categories\", \"Forecasting\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Financial Reports\", \"P&L Statement\", \"Balance Sheet\", \"Cash Flow Statement\", \"Custom Reports\"]\n        },\n        {\n          title: \"Reconciliation\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Bank Reconciliation\", \"Credit Card Reconciliation\", \"Account Matching\", \"Reconciliation History\"]\n        },\n        {\n          title: \"Tax Management\",\n          icon: <Calculator className=\"w-4 h-4\" />,\n          items: [\"Tax Categories\", \"Tax Reports\", \"Tax Filing\", \"Deductions\", \"Tax Planning\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"Account Setup\", \"Currency Settings\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Payroll\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Payroll Dashboard\", \"Monthly Overview\", \"Employee Summary\", \"Compliance Status\"]\n        },\n        {\n          title: \"Employees\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Employee Directory\", \"Add Employee\", \"Employee Profiles\", \"Salary Details\", \"Employment History\"]\n        },\n        {\n          title: \"Payroll Processing\",\n          icon: <Calculator className=\"w-4 h-4\" />,\n          items: [\"Run Payroll\", \"Payroll History\", \"Draft Payrolls\", \"Payroll Calendar\", \"Bulk Updates\"]\n        },\n        {\n          title: \"Salary Components\",\n          icon: <DollarSign className=\"w-4 h-4\" />,\n          items: [\"Basic Salary\", \"Allowances\", \"Deductions\", \"Benefits\", \"Bonuses\", \"Overtime\"]\n        },\n        {\n          title: \"Time & Attendance\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Time Tracking\", \"Attendance Reports\", \"Leave Management\", \"Overtime Tracking\", \"Shift Management\"]\n        },\n        {\n          title: \"Tax & Compliance\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Tax Settings\", \"Statutory Compliance\", \"Tax Reports\", \"Form Generation\", \"Audit Trail\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Payroll Reports\", \"Employee Reports\", \"Tax Reports\", \"Compliance Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Organization Settings\", \"Payroll Settings\", \"Tax Configuration\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Webinar\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Webinar Overview\", \"Analytics Dashboard\", \"Upcoming Events\", \"Performance Metrics\"]\n        },\n        {\n          title: \"Webinars\",\n          icon: <Video className=\"w-4 h-4\" />,\n          items: [\"All Webinars\", \"Live Webinars\", \"Scheduled Events\", \"Recurring Webinars\", \"Practice Sessions\"]\n        },\n        {\n          title: \"Registrations\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Attendee Management\", \"Registration Forms\", \"Approval Workflows\", \"Bulk Registration\"]\n        },\n        {\n          title: \"Recordings\",\n          icon: <PlayCircle className=\"w-4 h-4\" />,\n          items: [\"All Recordings\", \"Cloud Storage\", \"Download Center\", \"Sharing Settings\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Attendance Reports\", \"Engagement Analytics\", \"Registration Analytics\", \"Performance Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Webinar Settings\", \"Branding\", \"Email Templates\", \"Integration\"]\n        }\n      ]\n    },\n    \"RouteIQ\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Route Overview\", \"Sales Performance\", \"Territory Analytics\", \"Team Status\"]\n        },\n        {\n          title: \"Routes\",\n          icon: <Navigation className=\"w-4 h-4\" />,\n          items: [\"Route Planning\", \"Optimized Routes\", \"Route History\", \"Multi-day Routes\"]\n        },\n        {\n          title: \"Territories\",\n          icon: <Map className=\"w-4 h-4\" />,\n          items: [\"Territory Management\", \"Territory Assignment\", \"Coverage Analysis\", \"Boundary Settings\"]\n        },\n        {\n          title: \"Maps\",\n          icon: <MapPin className=\"w-4 h-4\" />,\n          items: [\"Interactive Maps\", \"Location Tracking\", \"Geofencing\", \"Map Layers\"]\n        },\n        {\n          title: \"Check-ins\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Visit Tracking\", \"Check-in History\", \"Location Verification\", \"Time Tracking\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Route Reports\", \"Territory Reports\", \"Performance Analytics\", \"Distance Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Route Settings\", \"Map Configuration\", \"Team Management\", \"Integration\"]\n        }\n      ]\n    },\n    \"FSM\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Field Service Overview\", \"Technician Performance\", \"Job Analytics\", \"Revenue Metrics\"]\n        },\n        {\n          title: \"Work Orders\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Work Orders\", \"Open Orders\", \"Scheduled Orders\", \"Completed Orders\", \"Recurring Orders\", \"Emergency Orders\"]\n        },\n        {\n          title: \"Scheduling\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Dispatch Board\", \"Technician Calendar\", \"Auto-scheduling\", \"Route Optimization\", \"Appointment Booking\"]\n        },\n        {\n          title: \"Technicians\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Technician Management\", \"Skills Matrix\", \"Availability\", \"Performance Tracking\", \"Mobile App\"]\n        },\n        {\n          title: \"Inventory\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"Parts Management\", \"Stock Levels\", \"Purchase Orders\", \"Supplier Management\", \"Inventory Tracking\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Customer Database\", \"Service History\", \"Equipment Records\", \"Contracts\", \"Customer Portal\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Service Reports\", \"Technician Reports\", \"Revenue Reports\", \"Inventory Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Service Types\", \"SLA Configuration\", \"Mobile Settings\", \"Integration\", \"Billing Settings\"]\n        }\n      ]\n    },\n    \"Billing\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Billing Overview\", \"Revenue Metrics\", \"Subscription Analytics\", \"Payment Status\", \"MRR Tracking\"]\n        },\n        {\n          title: \"Subscriptions\",\n          icon: <RefreshCw className=\"w-4 h-4\" />,\n          items: [\"All Subscriptions\", \"Active Subscriptions\", \"Trials\", \"Cancelled\", \"Subscription Plans\", \"Upgrades & Downgrades\"]\n        },\n        {\n          title: \"Invoices\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Invoices\", \"Draft Invoices\", \"Pending Invoices\", \"Paid Invoices\", \"Overdue Invoices\", \"Credit Notes\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Customer Management\", \"Billing Contacts\", \"Payment Methods\", \"Customer Portal\", \"Dunning Management\"]\n        },\n        {\n          title: \"Payments\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Payment History\", \"Failed Payments\", \"Refunds\", \"Payment Gateways\", \"Payment Links\"]\n        },\n        {\n          title: \"Revenue Recognition\",\n          icon: <TrendingUp className=\"w-4 h-4\" />,\n          items: [\"Revenue Schedules\", \"Deferred Revenue\", \"Revenue Reports\", \"ASC 606 Compliance\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Revenue Analytics\", \"Churn Analysis\", \"Cohort Analysis\", \"Subscription Metrics\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Billing Settings\", \"Tax Settings\", \"Payment Settings\", \"Dunning Settings\", \"Integration\"]\n        }\n      ]\n    },\n    \"Practice\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Practice Overview\", \"Client Portfolio\", \"Revenue Metrics\", \"Team Performance\", \"Deadline Tracking\"]\n        },\n        {\n          title: \"Clients\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Client Management\", \"Client Onboarding\", \"Client Portal\", \"Client Communications\", \"Entity Management\"]\n        },\n        {\n          title: \"Jobs\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Jobs\", \"Tax Preparation\", \"Bookkeeping\", \"Audit & Review\", \"Advisory Services\", \"Job Templates\"]\n        },\n        {\n          title: \"Time Tracking\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Time Entry\", \"Timesheet Approval\", \"Billable Hours\", \"Time Reports\", \"Timer Integration\"]\n        },\n        {\n          title: \"Documents\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"Document Management\", \"Client Documents\", \"Templates\", \"E-signatures\", \"Document Sharing\"]\n        },\n        {\n          title: \"Billing\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"Invoice Generation\", \"Fee Management\", \"Payment Tracking\", \"Recurring Billing\", \"Collections\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Financial Reports\", \"Time Reports\", \"Productivity Reports\", \"Client Reports\", \"Tax Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Practice Settings\", \"Team Management\", \"Fee Structure\", \"Tax Settings\", \"Integration\"]\n        }\n      ]\n    },\n    \"Payments\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Payment Overview\", \"Transaction Volume\", \"Success Rates\", \"Revenue Analytics\", \"Gateway Performance\"]\n        },\n        {\n          title: \"Transactions\",\n          icon: <CreditCard className=\"w-4 h-4\" />,\n          items: [\"All Transactions\", \"Successful Payments\", \"Failed Payments\", \"Pending Payments\", \"Refunds\"]\n        },\n        {\n          title: \"Payment Gateways\",\n          icon: <Server className=\"w-4 h-4\" />,\n          items: [\"Gateway Management\", \"Multi-gateway Setup\", \"Failover Configuration\", \"Gateway Analytics\"]\n        },\n        {\n          title: \"Customers\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Customer Management\", \"Payment Methods\", \"Transaction History\", \"Customer Insights\"]\n        },\n        {\n          title: \"Fraud Protection\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Fraud Detection\", \"Risk Rules\", \"Blocked Transactions\", \"Whitelist Management\"]\n        },\n        {\n          title: \"Reconciliation\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Settlement Reports\", \"Bank Reconciliation\", \"Dispute Management\", \"Chargeback Handling\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Payment Analytics\", \"Revenue Reports\", \"Gateway Performance\", \"Customer Analytics\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Payment Configuration\", \"Security Settings\", \"Webhook Management\", \"API Keys\"]\n        }\n      ]\n    },\n    \"ZeptoMail\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Email Analytics\", \"Delivery Dashboard\", \"Bounce Analytics\", \"Performance Overview\", \"Recent Activity\"]\n        },\n        {\n          title: \"Email Management\",\n          icon: <Mail className=\"w-4 h-4\" />,\n          items: [\"Compose Email\", \"Email Templates\", \"Scheduled Emails\", \"Draft Emails\", \"Sent Emails\", \"Bounced Emails\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Templates\", \"Email Templates\", \"Custom Templates\", \"Template Categories\", \"Shared Templates\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Email Performance\", \"Delivery Reports\", \"Open Rates\", \"Click Rates\", \"Bounce Reports\", \"Spam Reports\"]\n        },\n        {\n          title: \"Domain Management\",\n          icon: <Globe className=\"w-4 h-4\" />,\n          items: [\"Verified Domains\", \"Domain Authentication\", \"SPF Records\", \"DKIM Settings\", \"Domain Reputation\"]\n        },\n        {\n          title: \"API Integration\",\n          icon: <Code className=\"w-4 h-4\" />,\n          items: [\"API Documentation\", \"API Keys\", \"Webhooks\", \"Integration Guide\", \"SDK Downloads\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Account Settings\", \"Email Configuration\", \"Security Settings\", \"Team Management\", \"Billing\"]\n        }\n      ]\n    },\n    \"Office Integrator\": {\n      sections: [\n        {\n          title: \"Documents\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Recent Documents\", \"All Documents\", \"Shared Documents\", \"Favorites\", \"Document Templates\"]\n        },\n        {\n          title: \"Editor\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Word Processor\", \"Spreadsheet Editor\", \"Presentation Editor\", \"Form Builder\", \"Document Viewer\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Real-time Editing\", \"Comments & Reviews\", \"Version History\", \"Share Settings\", \"Team Workspaces\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <Bookmark className=\"w-4 h-4\" />,\n          items: [\"Document Templates\", \"Form Templates\", \"Report Templates\", \"Letter Templates\", \"Custom Templates\"]\n        },\n        {\n          title: \"Integration\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"API Integration\", \"Embed Options\", \"Third-party Apps\", \"Webhooks\", \"Developer Tools\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Editor Preferences\", \"Format Settings\", \"Security Options\", \"Export Options\", \"Admin Panel\"]\n        }\n      ]\n    },\n    \"Tables\": {\n      sections: [\n        {\n          title: \"Tables\",\n          icon: <Table className=\"w-4 h-4\" />,\n          items: [\"All Tables\", \"Recent Tables\", \"Shared Tables\", \"Templates\", \"Archived Tables\"]\n        },\n        {\n          title: \"Forms\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Forms\", \"Form Builder\", \"Form Responses\", \"Published Forms\", \"Form Analytics\"]\n        },\n        {\n          title: \"Workflows\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"All Workflows\", \"Workflow Builder\", \"Automation Rules\", \"Triggered Actions\", \"Workflow History\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Data Reports\", \"Visual Reports\", \"Custom Reports\", \"Scheduled Reports\", \"Report Builder\"]\n        },\n        {\n          title: \"Data Management\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Import Data\", \"Export Data\", \"Data Validation\", \"Bulk Operations\", \"Data Backup\"]\n        },\n        {\n          title: \"Team Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Team Members\", \"Permissions\", \"Comments\", \"Activity Log\", \"Notifications\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Table Settings\", \"Access Control\", \"Integrations\", \"API Settings\", \"Account Preferences\"]\n        }\n      ]\n    },\n    \"Office Suite\": {\n      sections: [\n        {\n          title: \"Home\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Dashboard\", \"Recent Files\", \"Quick Access\", \"Team Activity\", \"Getting Started\"]\n        },\n        {\n          title: \"Documents\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Documents\", \"Word Documents\", \"Text Files\", \"Document Templates\", \"Shared Documents\"]\n        },\n        {\n          title: \"Spreadsheets\",\n          icon: <Table className=\"w-4 h-4\" />,\n          items: [\"All Spreadsheets\", \"Excel Files\", \"CSV Files\", \"Data Analysis\", \"Spreadsheet Templates\"]\n        },\n        {\n          title: \"Presentations\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"All Presentations\", \"PowerPoint Files\", \"Slide Templates\", \"Presentation Themes\", \"Shared Presentations\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Team Workspaces\", \"Real-time Editing\", \"Comments & Reviews\", \"Version Control\", \"Share Settings\"]\n        },\n        {\n          title: \"Storage\",\n          icon: <Cloud className=\"w-4 h-4\" />,\n          items: [\"File Manager\", \"Recent Files\", \"Shared Files\", \"Storage Usage\", \"File Recovery\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Suite Preferences\", \"Account Settings\", \"Security Options\", \"Integration Settings\", \"Admin Panel\"]\n        }\n      ]\n    },\n    \"ToDo\": {\n      sections: [\n        {\n          title: \"Tasks\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"All Tasks\", \"My Tasks\", \"Today's Tasks\", \"Overdue Tasks\", \"Completed Tasks\", \"Recurring Tasks\"]\n        },\n        {\n          title: \"Projects\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Projects\", \"Active Projects\", \"My Projects\", \"Shared Projects\", \"Project Templates\", \"Archived Projects\"]\n        },\n        {\n          title: \"Teams\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Team Tasks\", \"Team Projects\", \"Team Members\", \"Task Assignment\", \"Team Activity\", \"Permissions\"]\n        },\n        {\n          title: \"Calendar\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Task Calendar\", \"Due Dates\", \"Schedule View\", \"Calendar Integration\", \"Timeline View\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Task Reports\", \"Project Reports\", \"Team Performance\", \"Time Tracking\", \"Productivity Analytics\"]\n        },\n        {\n          title: \"Labels & Filters\",\n          icon: <Tag className=\"w-4 h-4\" />,\n          items: [\"Task Labels\", \"Custom Filters\", \"Smart Lists\", \"Saved Searches\", \"Priority Levels\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Task Preferences\", \"Notification Settings\", \"Integration Settings\", \"Team Settings\", \"Account Settings\"]\n        }\n      ]\n    },\n    \"PDF Editor\": {\n      sections: [\n        {\n          title: \"Editor\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Edit PDF\", \"Text Editing\", \"Image Editing\", \"Page Management\", \"Annotation Tools\"]\n        },\n        {\n          title: \"Forms\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Create Forms\", \"Fill Forms\", \"Form Templates\", \"Interactive Forms\", \"Form Fields\"]\n        },\n        {\n          title: \"Convert\",\n          icon: <RefreshCw className=\"w-4 h-4\" />,\n          items: [\"PDF to Word\", \"PDF to Excel\", \"PDF to Image\", \"Word to PDF\", \"HTML to PDF\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Share Documents\", \"Comments & Reviews\", \"Version Control\", \"Team Collaboration\", \"Document History\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Lock className=\"w-4 h-4\" />,\n          items: [\"Password Protection\", \"Digital Signatures\", \"Encryption\", \"Watermarks\", \"Permission Settings\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <Bookmark className=\"w-4 h-4\" />,\n          items: [\"Document Templates\", \"Form Templates\", \"Letter Templates\", \"Report Templates\", \"Custom Templates\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Editor Preferences\", \"Export Settings\", \"Security Options\", \"Integration Settings\", \"Account Settings\"]\n        }\n      ]\n    },\n    \"Shifts\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Today's Schedule\", \"Team Overview\", \"Shift Statistics\", \"Quick Actions\", \"Recent Activity\"]\n        },\n        {\n          title: \"Schedule\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"View Schedule\", \"Create Schedule\", \"Shift Templates\", \"Recurring Shifts\", \"Schedule Conflicts\"]\n        },\n        {\n          title: \"Employees\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Employees\", \"Shift Assignments\", \"Employee Availability\", \"Skill Sets\", \"Employee Profiles\"]\n        },\n        {\n          title: \"Time Tracking\",\n          icon: <Clock className=\"w-4 h-4\" />,\n          items: [\"Clock In/Out\", \"Time Logs\", \"Break Management\", \"Overtime Tracking\", \"Time Corrections\"]\n        },\n        {\n          title: \"Attendance\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Attendance Reports\", \"Absence Management\", \"Late Arrivals\", \"Early Departures\", \"Attendance Policies\"]\n        },\n        {\n          title: \"Requests\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Shift Requests\", \"Time Off Requests\", \"Swap Requests\", \"Overtime Requests\", \"Request Approvals\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Schedule Reports\", \"Attendance Reports\", \"Labor Cost Reports\", \"Productivity Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Shift Settings\", \"Employee Settings\", \"Notification Settings\", \"Integration Settings\", \"Company Settings\"]\n        }\n      ]\n    },\n    \"Contracts\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Contract Overview\", \"Recent Activity\", \"Pending Actions\", \"Contract Analytics\", \"Quick Stats\"]\n        },\n        {\n          title: \"Contracts\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Contracts\", \"Active Contracts\", \"Draft Contracts\", \"Expired Contracts\", \"Archived Contracts\"]\n        },\n        {\n          title: \"Templates\",\n          icon: <Bookmark className=\"w-4 h-4\" />,\n          items: [\"Contract Templates\", \"Clause Library\", \"Standard Terms\", \"Custom Templates\", \"Template Categories\"]\n        },\n        {\n          title: \"Workflow\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Approval Workflows\", \"Review Process\", \"Signature Workflows\", \"Automated Actions\", \"Workflow Builder\"]\n        },\n        {\n          title: \"Compliance\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Compliance Tracking\", \"Regulatory Requirements\", \"Audit Trail\", \"Risk Assessment\", \"Compliance Reports\"]\n        },\n        {\n          title: \"Reporting\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Contract Reports\", \"Performance Analytics\", \"Renewal Reports\", \"Compliance Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Contract Settings\", \"Workflow Settings\", \"User Management\", \"Integration Settings\", \"Security Settings\"]\n        }\n      ]\n    },\n    \"Catalyst\": {\n      sections: [\n        {\n          title: \"Functions\",\n          icon: <Code className=\"w-4 h-4\" />,\n          items: [\"All Functions\", \"HTTP Functions\", \"Cron Functions\", \"Event Functions\", \"Function Templates\", \"Function Logs\"]\n        },\n        {\n          title: \"Database\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Tables\", \"Data Browser\", \"Query Builder\", \"Database Backup\", \"Migrations\", \"Database Analytics\"]\n        },\n        {\n          title: \"Deployments\",\n          icon: <Upload className=\"w-4 h-4\" />,\n          items: [\"Project Deployments\", \"Version History\", \"Build Logs\", \"Environment Variables\", \"Custom Domains\"]\n        },\n        {\n          title: \"File Storage\",\n          icon: <Folder className=\"w-4 h-4\" />,\n          items: [\"File Manager\", \"Upload Files\", \"Download Files\", \"File Permissions\", \"Storage Analytics\"]\n        },\n        {\n          title: \"Authentication\",\n          icon: <Lock className=\"w-4 h-4\" />,\n          items: [\"User Management\", \"Auth Settings\", \"Social Login\", \"Custom Authentication\", \"Security Rules\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Function Analytics\", \"Database Analytics\", \"Performance Metrics\", \"Error Tracking\", \"Usage Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Project Settings\", \"Environment Settings\", \"API Settings\", \"Team Settings\", \"Billing\"]\n        }\n      ]\n    },\n    \"RPA\": {\n      sections: [\n        {\n          title: \"Bots\",\n          icon: <Bot className=\"w-4 h-4\" />,\n          items: [\"All Bots\", \"Active Bots\", \"Scheduled Bots\", \"Bot Templates\", \"Bot Library\", \"Failed Bots\"]\n        },\n        {\n          title: \"Workflows\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"All Workflows\", \"Workflow Builder\", \"Workflow Templates\", \"Automated Workflows\", \"Workflow History\"]\n        },\n        {\n          title: \"Schedule\",\n          icon: <Calendar className=\"w-4 h-4\" />,\n          items: [\"Scheduled Tasks\", \"Recurring Jobs\", \"Job Calendar\", \"Schedule Management\", \"Time Triggers\"]\n        },\n        {\n          title: \"Monitoring\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"Bot Performance\", \"Execution Logs\", \"Error Monitoring\", \"Real-time Status\", \"System Health\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Execution Analytics\", \"Performance Reports\", \"Success Rates\", \"Error Analysis\", \"Time Savings\"]\n        },\n        {\n          title: \"Integration\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"API Integration\", \"Third-party Apps\", \"Database Connections\", \"Web Services\", \"Custom Connectors\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Bot Settings\", \"Security Settings\", \"Notification Settings\", \"Team Management\", \"License Management\"]\n        }\n      ]\n    },\n    \"QEngine\": {\n      sections: [\n        {\n          title: \"Tests\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"All Tests\", \"Test Cases\", \"Test Scripts\", \"Manual Tests\", \"Automated Tests\", \"Test Templates\"]\n        },\n        {\n          title: \"Test Suites\",\n          icon: <List className=\"w-4 h-4\" />,\n          items: [\"All Suites\", \"Regression Suites\", \"Smoke Tests\", \"Integration Tests\", \"Performance Tests\"]\n        },\n        {\n          title: \"Execution\",\n          icon: <PlayCircle className=\"w-4 h-4\" />,\n          items: [\"Test Execution\", \"Test Runs\", \"Scheduled Runs\", \"Parallel Execution\", \"Test Results\"]\n        },\n        {\n          title: \"Results\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Test Results\", \"Failed Tests\", \"Passed Tests\", \"Test History\", \"Result Analysis\"]\n        },\n        {\n          title: \"Defects\",\n          icon: <AlertCircle className=\"w-4 h-4\" />,\n          items: [\"All Defects\", \"Open Defects\", \"Defect Tracking\", \"Bug Reports\", \"Defect Analysis\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Test Reports\", \"Coverage Reports\", \"Quality Reports\", \"Performance Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Test Configuration\", \"Environment Settings\", \"Integration Settings\", \"Team Settings\", \"Project Settings\"]\n        }\n      ]\n    },\n    \"eProtect\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Security Overview\", \"Threat Dashboard\", \"Email Analytics\", \"Protection Status\", \"Recent Activity\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Threat Protection\", \"Anti-spam\", \"Anti-virus\", \"Email Encryption\", \"Security Policies\"]\n        },\n        {\n          title: \"Archive\",\n          icon: <Archive className=\"w-4 h-4\" />,\n          items: [\"Email Archive\", \"Archived Messages\", \"Search Archive\", \"Archive Policies\", \"Data Retention\"]\n        },\n        {\n          title: \"Policies\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Security Policies\", \"Compliance Policies\", \"Content Filtering\", \"Data Loss Prevention\", \"Policy Management\"]\n        },\n        {\n          title: \"Compliance\",\n          icon: <CheckCircle className=\"w-4 h-4\" />,\n          items: [\"Compliance Reports\", \"Audit Logs\", \"Regulatory Compliance\", \"Legal Hold\", \"eDiscovery\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Security Reports\", \"Archive Reports\", \"Compliance Reports\", \"Threat Reports\", \"Custom Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Security Settings\", \"Archive Settings\", \"Policy Settings\", \"User Management\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Toolkit\": {\n      sections: [\n        {\n          title: \"Queries\",\n          icon: <Search className=\"w-4 h-4\" />,\n          items: [\"Database Queries\", \"Custom Queries\", \"Saved Queries\", \"Query Builder\", \"Query History\"]\n        },\n        {\n          title: \"Tools\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Admin Tools\", \"Database Tools\", \"System Tools\", \"Diagnostic Tools\", \"Maintenance Tools\"]\n        },\n        {\n          title: \"Data Analysis\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Data Explorer\", \"Data Reports\", \"Performance Analysis\", \"Usage Statistics\", \"Data Insights\"]\n        },\n        {\n          title: \"System Monitoring\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"System Status\", \"Performance Monitoring\", \"Resource Usage\", \"Error Logs\", \"Health Checks\"]\n        },\n        {\n          title: \"Administration\",\n          icon: <User className=\"w-4 h-4\" />,\n          items: [\"User Management\", \"Permission Management\", \"System Configuration\", \"Backup Management\", \"Security Settings\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"System Reports\", \"Usage Reports\", \"Performance Reports\", \"Security Reports\", \"Custom Reports\"]\n        }\n      ]\n    },\n    \"ManageEngine\": {\n      sections: [\n        {\n          title: \"Assets\",\n          icon: <Package className=\"w-4 h-4\" />,\n          items: [\"IT Assets\", \"Hardware Assets\", \"Software Assets\", \"Asset Discovery\", \"Asset Lifecycle\", \"Asset Reports\"]\n        },\n        {\n          title: \"Network\",\n          icon: <Wifi className=\"w-4 h-4\" />,\n          items: [\"Network Monitoring\", \"Device Management\", \"Network Topology\", \"Performance Monitoring\", \"Network Reports\"]\n        },\n        {\n          title: \"Help Desk\",\n          icon: <MessageSquare className=\"w-4 h-4\" />,\n          items: [\"Tickets\", \"Incident Management\", \"Problem Management\", \"Change Management\", \"Knowledge Base\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Security Monitoring\", \"Vulnerability Assessment\", \"Patch Management\", \"Compliance Management\", \"Security Reports\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"IT Analytics\", \"Performance Analytics\", \"Cost Analytics\", \"Usage Analytics\", \"Custom Dashboards\"]\n        },\n        {\n          title: \"Automation\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"IT Automation\", \"Workflow Automation\", \"Scheduled Tasks\", \"Policy Automation\", \"Process Automation\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"System Settings\", \"User Management\", \"Integration Settings\", \"Notification Settings\", \"License Management\"]\n        }\n      ]\n    },\n    \"IoT\": {\n      sections: [\n        {\n          title: \"Devices\",\n          icon: <Smartphone className=\"w-4 h-4\" />,\n          items: [\"All Devices\", \"Device Registry\", \"Device Status\", \"Device Groups\", \"Device Configuration\", \"Device Logs\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Device Analytics\", \"Data Visualization\", \"Performance Metrics\", \"Usage Analytics\", \"Predictive Analytics\"]\n        },\n        {\n          title: \"Monitoring\",\n          icon: <Monitor className=\"w-4 h-4\" />,\n          items: [\"Real-time Monitoring\", \"Device Health\", \"Performance Monitoring\", \"Alert Management\", \"System Status\"]\n        },\n        {\n          title: \"Data Management\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Data Streams\", \"Data Storage\", \"Data Processing\", \"Data Export\", \"Data Quality\"]\n        },\n        {\n          title: \"Alerts & Rules\",\n          icon: <Bell className=\"w-4 h-4\" />,\n          items: [\"Alert Rules\", \"Notifications\", \"Threshold Settings\", \"Automated Actions\", \"Escalation Rules\"]\n        },\n        {\n          title: \"Integration\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"API Integration\", \"Third-party Connectors\", \"Data Export\", \"Webhook Configuration\", \"Custom Integration\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Device Settings\", \"Data Settings\", \"Security Settings\", \"User Management\", \"Account Settings\"]\n        }\n      ]\n    },\n    \"Embedded BI\": {\n      sections: [\n        {\n          title: \"Embeds\",\n          icon: <Code className=\"w-4 h-4\" />,\n          items: [\"All Embeds\", \"Dashboard Embeds\", \"Report Embeds\", \"Chart Embeds\", \"Widget Embeds\", \"Custom Embeds\"]\n        },\n        {\n          title: \"APIs\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"API Documentation\", \"REST APIs\", \"JavaScript APIs\", \"SDK Downloads\", \"API Testing\", \"Authentication\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Usage Analytics\", \"Performance Metrics\", \"User Analytics\", \"Embed Analytics\", \"API Analytics\"]\n        },\n        {\n          title: \"White-label\",\n          icon: <Palette className=\"w-4 h-4\" />,\n          items: [\"Branding Options\", \"Custom Themes\", \"Logo Management\", \"Color Schemes\", \"UI Customization\"]\n        },\n        {\n          title: \"Data Sources\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"Connect Data\", \"Database Connections\", \"File Uploads\", \"Cloud Connectors\", \"Data Refresh\"]\n        },\n        {\n          title: \"Security\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Access Control\", \"Domain Management\", \"User Authentication\", \"Encryption Settings\", \"Security Policies\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Embed Settings\", \"API Settings\", \"Integration Settings\", \"Account Settings\", \"Billing\"]\n        }\n      ]\n    },\n    \"Domains\": {\n      sections: [\n        {\n          title: \"Domains\",\n          icon: <Globe className=\"w-4 h-4\" />,\n          items: [\"All Domains\", \"Active Domains\", \"Expired Domains\", \"Pending Domains\", \"Domain Search\", \"Domain Transfer\"]\n        },\n        {\n          title: \"DNS Management\",\n          icon: <Server className=\"w-4 h-4\" />,\n          items: [\"DNS Records\", \"A Records\", \"CNAME Records\", \"MX Records\", \"TXT Records\", \"DNS Analytics\"]\n        },\n        {\n          title: \"SSL Certificates\",\n          icon: <Lock className=\"w-4 h-4\" />,\n          items: [\"SSL Certificates\", \"Certificate Installation\", \"Certificate Renewal\", \"Wildcard SSL\", \"SSL Analytics\"]\n        },\n        {\n          title: \"Website Builder\",\n          icon: <Edit3 className=\"w-4 h-4\" />,\n          items: [\"Build Website\", \"Website Templates\", \"Landing Pages\", \"Website Analytics\", \"Mobile Optimization\"]\n        },\n        {\n          title: \"Email Setup\",\n          icon: <Mail className=\"w-4 h-4\" />,\n          items: [\"Email Accounts\", \"Email Forwarding\", \"Email Hosting\", \"Email Security\", \"Email Analytics\"]\n        },\n        {\n          title: \"WHOIS & Privacy\",\n          icon: <Eye className=\"w-4 h-4\" />,\n          items: [\"WHOIS Information\", \"Domain Privacy\", \"Contact Information\", \"Privacy Protection\", \"Domain Lock\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Domain Settings\", \"DNS Settings\", \"Security Settings\", \"Billing Settings\", \"Renewal Settings\"]\n        }\n      ]\n    },\n    \"CommunitySpaces\": {\n      sections: [\n        {\n          title: \"Communities\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"All Communities\", \"My Communities\", \"Public Communities\", \"Private Communities\", \"Community Templates\"]\n        },\n        {\n          title: \"Members\",\n          icon: <User className=\"w-4 h-4\" />,\n          items: [\"All Members\", \"Member Profiles\", \"Member Roles\", \"Member Analytics\", \"Member Invitations\"]\n        },\n        {\n          title: \"Posts & Content\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"All Posts\", \"Popular Posts\", \"Recent Posts\", \"Content Categories\", \"Content Moderation\"]\n        },\n        {\n          title: \"Forums\",\n          icon: <MessageCircle className=\"w-4 h-4\" />,\n          items: [\"Discussion Forums\", \"Forum Topics\", \"Forum Categories\", \"Forum Moderation\", \"Forum Analytics\"]\n        },\n        {\n          title: \"Engagement\",\n          icon: <Heart className=\"w-4 h-4\" />,\n          items: [\"Member Engagement\", \"Community Events\", \"Gamification\", \"Rewards System\", \"Engagement Analytics\"]\n        },\n        {\n          title: \"Moderation\",\n          icon: <Shield className=\"w-4 h-4\" />,\n          items: [\"Content Moderation\", \"User Management\", \"Community Guidelines\", \"Reporting System\", \"Moderation Tools\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Community Analytics\", \"Member Analytics\", \"Content Analytics\", \"Engagement Metrics\", \"Growth Analytics\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Community Settings\", \"Privacy Settings\", \"Notification Settings\", \"Integration Settings\", \"Theme Settings\"]\n        }\n      ]\n    },\n    \"Publish\": {\n      sections: [\n        {\n          title: \"Listings\",\n          icon: <MapPin className=\"w-4 h-4\" />,\n          items: [\"All Listings\", \"Google My Business\", \"Bing Places\", \"Apple Maps\", \"Local Directories\", \"Industry Listings\"]\n        },\n        {\n          title: \"Reviews\",\n          icon: <Star className=\"w-4 h-4\" />,\n          items: [\"All Reviews\", \"Google Reviews\", \"Facebook Reviews\", \"Yelp Reviews\", \"Review Monitoring\", \"Review Responses\"]\n        },\n        {\n          title: \"Local SEO\",\n          icon: <Search className=\"w-4 h-4\" />,\n          items: [\"SEO Performance\", \"Keyword Tracking\", \"Local Rankings\", \"Citation Building\", \"SEO Analytics\"]\n        },\n        {\n          title: \"Social Posts\",\n          icon: <Share2 className=\"w-4 h-4\" />,\n          items: [\"Social Media Posts\", \"Google Posts\", \"Facebook Posts\", \"Post Scheduling\", \"Social Analytics\"]\n        },\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Listing Analytics\", \"Review Analytics\", \"SEO Analytics\", \"Social Analytics\", \"Performance Reports\"]\n        },\n        {\n          title: \"Reputation Management\",\n          icon: <ThumbsUp className=\"w-4 h-4\" />,\n          items: [\"Reputation Monitoring\", \"Review Management\", \"Response Templates\", \"Sentiment Analysis\", \"Reputation Reports\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"Business Information\", \"Listing Settings\", \"Review Settings\", \"Notification Settings\", \"Integration Settings\"]\n        }\n      ]\n    },\n    \"Apptics\": {\n      sections: [\n        {\n          title: \"Analytics\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"App Analytics\", \"User Analytics\", \"Performance Analytics\", \"Custom Analytics\", \"Real-time Analytics\"]\n        },\n        {\n          title: \"Users\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"User Behavior\", \"User Segments\", \"User Journey\", \"User Retention\", \"User Acquisition\"]\n        },\n        {\n          title: \"Performance\",\n          icon: <TrendingUp className=\"w-4 h-4\" />,\n          items: [\"App Performance\", \"Load Times\", \"Crash Reports\", \"Error Tracking\", \"Performance Optimization\"]\n        },\n        {\n          title: \"Events\",\n          icon: <Target className=\"w-4 h-4\" />,\n          items: [\"Custom Events\", \"Event Tracking\", \"Conversion Events\", \"Event Analytics\", \"Event Funnels\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <FileText className=\"w-4 h-4\" />,\n          items: [\"Standard Reports\", \"Custom Reports\", \"Scheduled Reports\", \"Export Reports\", \"Report Builder\"]\n        },\n        {\n          title: \"Integration\",\n          icon: <Link2 className=\"w-4 h-4\" />,\n          items: [\"SDK Integration\", \"API Integration\", \"Third-party Tools\", \"Data Export\", \"Custom Integration\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"App Settings\", \"Analytics Settings\", \"Privacy Settings\", \"Team Settings\", \"Account Settings\"]\n        }\n      ]\n    },\n    // Default navigation for apps without specific structure\n    \"Default\": {\n      sections: [\n        {\n          title: \"Dashboard\",\n          icon: <Home className=\"w-4 h-4\" />,\n          items: [\"Overview\", \"Recent Activity\", \"Quick Stats\", \"Performance Metrics\"]\n        },\n        {\n          title: \"Main Features\",\n          icon: <Zap className=\"w-4 h-4\" />,\n          items: [\"Core Features\", \"Advanced Tools\", \"Automation\", \"Workflows\", \"Templates\"]\n        },\n        {\n          title: \"Data Management\",\n          icon: <Database className=\"w-4 h-4\" />,\n          items: [\"All Records\", \"Import/Export\", \"Data Views\", \"Search\", \"Bulk Operations\", \"Data Quality\"]\n        },\n        {\n          title: \"Collaboration\",\n          icon: <Users className=\"w-4 h-4\" />,\n          items: [\"Team Workspace\", \"Sharing\", \"Comments\", \"Notifications\", \"User Activity\"]\n        },\n        {\n          title: \"Reports\",\n          icon: <BarChart3 className=\"w-4 h-4\" />,\n          items: [\"Standard Reports\", \"Custom Reports\", \"Analytics\", \"Export\", \"Scheduled Reports\", \"Dashboards\"]\n        },\n        {\n          title: \"Settings\",\n          icon: <Settings className=\"w-4 h-4\" />,\n          items: [\"General Settings\", \"User Management\", \"Preferences\", \"Integrations\", \"API Access\", \"Security\"]\n        }\n      ]\n    }\n  };\n\n  // Return specific navigation or default for any unmapped apps\n  return navigationMap[appName] || navigationMap[\"Default\"];\n};\n\nexport default function AppSidebar({ app, category, currentPage = \"Dashboard\" }: AppSidebarProps) {\n  const [expandedSections, setExpandedSections] = useState<string[]>([\"Dashboard\"]);\n  const navigation = getAppNavigation(app.name);\n\n  const toggleSection = (sectionTitle: string) => {\n    setExpandedSections(prev => \n      prev.includes(sectionTitle) \n        ? prev.filter(s => s !== sectionTitle)\n        : [...prev, sectionTitle]\n    );\n  };\n\n  return (\n    <div className=\"w-64 bg-aura-dark-secondary border-r border-aura-gray h-full flex flex-col\">\n      {/* App Header */}\n      <div className=\"p-4 border-b border-aura-gray\">\n        <div className=\"flex items-center space-x-3\">\n          <div \n            className=\"p-2 rounded-lg\"\n            style={{ \n              backgroundColor: `${category.color}20`,\n              color: category.color \n            }}\n          >\n            <i className={`${app.icon} text-lg`}></i>\n          </div>\n          <div>\n            <h2 className=\"font-bold text-lg\">{app.name}</h2>\n            <p className=\"text-xs text-gray-400\">{category.name}</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation Menu */}\n      <ScrollArea className=\"flex-1 p-2\">\n        <nav className=\"space-y-1\">\n          {navigation.sections.map((section: any, sectionIndex: number) => {\n            const isExpanded = expandedSections.includes(section.title);\n            \n            return (\n              <div key={sectionIndex} className=\"space-y-1\">\n                <button\n                  onClick={() => toggleSection(section.title)}\n                  className={`\n                    w-full flex items-center justify-between px-3 py-2 rounded-md text-sm font-medium transition-colors\n                    ${section.title === \"Dashboard\" && currentPage === \"Dashboard\" \n                      ? `text-black` \n                      : \"text-gray-300 hover:text-white hover:bg-aura-gray/50\"\n                    }\n                  `}\n                  style={section.title === \"Dashboard\" && currentPage === \"Dashboard\" ? {\n                    backgroundColor: category.color,\n                    color: '#000'\n                  } : {}}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    {section.icon}\n                    <span>{section.title}</span>\n                  </div>\n                  {isExpanded ? (\n                    <ChevronDown className=\"w-4 h-4\" />\n                  ) : (\n                    <ChevronRight className=\"w-4 h-4\" />\n                  )}\n                </button>\n\n                {isExpanded && (\n                  <div className=\"ml-6 space-y-1\">\n                    {section.items.map((item: string, itemIndex: number) => (\n                      <Link \n                        key={itemIndex}\n                        href={`/app/${app.id}/${section.title.toLowerCase()}/${item.toLowerCase().replace(/\\s+/g, '-')}`}\n                      >\n                        <div\n                          className={`\n                            block px-3 py-1.5 text-sm rounded-md transition-colors cursor-pointer\n                            ${currentPage === item\n                              ? `text-black font-medium`\n                              : \"text-gray-400 hover:text-white hover:bg-aura-gray/30\"\n                            }\n                          `}\n                          style={currentPage === item ? {\n                            backgroundColor: `${category.color}40`,\n                            color: category.color\n                          } : {}}\n                        >\n                          {item}\n                        </div>\n                      </Link>\n                    ))}\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </nav>\n      </ScrollArea>\n\n      {/* Quick Actions Footer */}\n      <div className=\"p-4 border-t border-aura-gray\">\n        <div className=\"space-y-2\">\n          <Button \n            size=\"sm\" \n            className=\"w-full justify-start text-xs\"\n            style={{ \n              backgroundColor: `${category.color}20`,\n              color: category.color,\n              border: `1px solid ${category.color}40`\n            }}\n          >\n            <Zap className=\"w-3 h-3 mr-2\" />\n            Quick Add\n          </Button>\n          <Button \n            size=\"sm\" \n            variant=\"ghost\" \n            className=\"w-full justify-start text-xs text-gray-400 hover:text-white\"\n          >\n            <Settings className=\"w-3 h-3 mr-2\" />\n            Settings\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":148593},"FutureHome/client/src/components/search-bar.tsx":{"content":"import { useState } from \"react\";\nimport { Search } from \"lucide-react\";\nimport { Input } from \"@/components/ui/input\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type App } from \"@shared/schema\";\nimport { Link } from \"wouter\";\nimport { useSearchHook } from \"@/hooks/use-search\";\n\nexport default function SearchBar() {\n  const [query, setQuery] = useState(\"\");\n  const { searchResults, isSearching } = useSearchHook(query);\n\n  return (\n    <div className=\"relative max-w-2xl mx-auto\">\n      <div className=\"relative\">\n        <Search className=\"absolute left-4 top-4 h-5 w-5 text-gray-400\" />\n        <Input\n          type=\"text\"\n          placeholder=\"Search across all 80+ apps...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          className=\"pl-12 py-4 text-lg bg-aura-dark-secondary border-aura-gray focus:border-aura-neon-blue focus:shadow-neon-blue rounded-xl\"\n        />\n      </div>\n      \n      {query && (\n        <div className=\"absolute top-full mt-2 w-full bg-aura-dark-secondary border border-aura-gray rounded-xl shadow-lg z-50 max-h-96 overflow-y-auto\">\n          {isSearching ? (\n            <div className=\"p-4 text-center text-gray-400\">Searching...</div>\n          ) : searchResults?.length === 0 ? (\n            <div className=\"p-4 text-center text-gray-400\">No apps found for \"{query}\"</div>\n          ) : (\n            <div className=\"p-2\">\n              {searchResults?.map((app) => (\n                <Link key={app.id} href={`/app/${app.id}`}>\n                  <div className=\"flex items-center p-3 hover:bg-aura-gray rounded-lg cursor-pointer transition-colors\">\n                    <i className={`${app.icon} text-xl mr-3 text-aura-neon-blue`}></i>\n                    <div>\n                      <div className=\"font-medium\">{app.name}</div>\n                      <div className=\"text-sm text-gray-400\">{app.description}</div>\n                    </div>\n                  </div>\n                </Link>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","size_bytes":2077},"FutureHome/client/src/components/suite-card.tsx":{"content":"import { type Suite } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface SuiteCardProps {\n  suite: Suite;\n}\n\nexport default function SuiteCard({ suite }: SuiteCardProps) {\n  return (\n    <div \n      className=\"suite-card rounded-xl p-6 border transition-all duration-300\"\n      style={{ \n        background: `linear-gradient(135deg, ${suite.color}10 0%, ${suite.color}05 100%)`,\n        borderColor: `${suite.color}30`\n      }}\n    >\n      <div className=\"flex items-center mb-4\">\n        <i \n          className=\"fas fa-star text-2xl mr-3\"\n          style={{ color: suite.color }}\n        ></i>\n        <h3 className=\"text-xl font-semibold\">{suite.name}</h3>\n      </div>\n      <p className=\"text-gray-300 text-sm mb-4\">{suite.description}</p>\n      <Button \n        className=\"w-full py-2 rounded-lg font-medium transition-colors\"\n        style={{ \n          backgroundColor: suite.color,\n          color: suite.color === '#3b82f6' ? '#fff' : '#000'\n        }}\n      >\n        Explore Suite\n      </Button>\n    </div>\n  );\n}\n","size_bytes":1059},"FutureHome/client/src/data/apps.ts":{"content":"// This file contains the comprehensive app data structure for Aura\n// All apps are organized by category with complete feature sets\n\nexport const CATEGORY_COLORS = {\n  Sales: \"#00d4ff\",\n  Marketing: \"#8b5cf6\",\n  Commerce: \"#06ffa5\",\n  Service: \"#eab308\",\n  Finance: \"#22c55e\",\n  \"Email & Collaboration\": \"#3b82f6\",\n  \"Human Resources\": \"#ec4899\",\n  Legal: \"#f97316\",\n  \"Security & IT\": \"#ef4444\",\n  \"BI & Analytics\": \"#6366f1\",\n  \"Project Management\": \"#14b8a6\",\n  \"Developer Platforms\": \"#a855f7\"\n} as const;\n\nexport const SUITE_COLORS = {\n  \"CRM Plus\": \"#00d4ff\",\n  \"Service Plus\": \"#eab308\",\n  \"Finance Plus\": \"#22c55e\",\n  \"People Plus\": \"#ec4899\",\n  \"Workplace\": \"#3b82f6\",\n  \"Marketing Plus\": \"#8b5cf6\",\n  \"Projects Plus\": \"#14b8a6\"\n} as const;\n","size_bytes":751},"FutureHome/client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"FutureHome/client/src/hooks/use-search.ts":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type App } from \"@shared/schema\";\n\nexport function useSearchHook(query: string) {\n  const [debouncedQuery, setDebouncedQuery] = useState(query);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedQuery(query);\n    }, 300);\n\n    return () => clearTimeout(timer);\n  }, [query]);\n\n  const { data: searchResults, isLoading: isSearching } = useQuery<App[]>({\n    queryKey: [\"/api/apps\", { search: debouncedQuery }],\n    enabled: debouncedQuery.length > 0,\n  });\n\n  return {\n    searchResults: debouncedQuery.length > 0 ? searchResults : [],\n    isSearching: isSearching && debouncedQuery.length > 0,\n  };\n}\n","size_bytes":731},"FutureHome/client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"FutureHome/client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"FutureHome/client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"FutureHome/client/src/pages/all-apps.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { type Category, type App } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Link } from \"wouter\";\nimport SearchBar from \"@/components/search-bar\";\nimport { ArrowLeft } from \"lucide-react\";\n\nexport default function AllApps() {\n  const { data: categories, isLoading: categoriesLoading } = useQuery<Category[]>({\n    queryKey: [\"/api/categories\"],\n  });\n\n  const { data: apps, isLoading: appsLoading } = useQuery<App[]>({\n    queryKey: [\"/api/apps\"],\n  });\n\n  // Group apps by category\n  const appsByCategory = categories?.reduce((acc, category) => {\n    acc[category.id] = apps?.filter(app => app.categoryId === category.id) || [];\n    return acc;\n  }, {} as Record<string, App[]>) || {};\n\n  if (categoriesLoading || appsLoading) {\n    return (\n      <div className=\"min-h-screen bg-aura-dark pt-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-6 gap-4\">\n            {Array.from({ length: 24 }).map((_, i) => (\n              <Skeleton key={i} className=\"h-40 rounded-lg\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-aura-dark pt-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-8\">\n          <div>\n            <Link href=\"/\">\n              <Button variant=\"ghost\" className=\"mb-4 text-gray-300 hover:text-white\">\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Back to Home\n              </Button>\n            </Link>\n            <h1 className=\"text-4xl font-bold mb-2\">All Applications</h1>\n            <p className=\"text-gray-300\">Complete directory of all {apps?.length || 0} apps across {categories?.length || 0} categories</p>\n          </div>\n        </div>\n\n        {/* Search */}\n        <div className=\"mb-8\">\n          <SearchBar />\n        </div>\n\n        {/* Apps organized by category */}\n        <div className=\"space-y-12\">\n          {categories?.map((category) => {\n            const categoryApps = appsByCategory[category.id] || [];\n            if (categoryApps.length === 0) return null;\n\n            return (\n              <div key={category.id} className=\"space-y-6\">\n                {/* Category Header */}\n                <div className=\"flex items-center space-x-4 border-b border-aura-gray pb-4\">\n                  <i className={`${category.icon} text-3xl`} style={{ color: category.color }}></i>\n                  <div className=\"flex-1\">\n                    <h2 className=\"text-2xl font-bold\">{category.name}</h2>\n                    <p className=\"text-gray-400\">{category.description}</p>\n                  </div>\n                  <span \n                    className=\"text-black text-sm px-4 py-2 rounded-full font-semibold\"\n                    style={{ backgroundColor: category.color }}\n                  >\n                    {categoryApps.length} Apps\n                  </span>\n                </div>\n\n                {/* Apps Grid */}\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-4\">\n                  {categoryApps.map((app) => (\n                    <Link key={app.id} href={`/app/${app.id}`}>\n                      <div className=\"bg-aura-dark-secondary rounded-xl p-6 cursor-pointer transition-all duration-300 hover:scale-105 hover:shadow-xl border border-transparent hover:border-opacity-50\" style={{ borderColor: `${category.color}40` }}>\n                        <div className=\"text-center\">\n                          <div \n                            className=\"w-16 h-16 rounded-2xl mx-auto mb-4 flex items-center justify-center\"\n                            style={{ backgroundColor: `${category.color}20` }}\n                          >\n                            <i \n                              className={`${app.icon} text-2xl`} \n                              style={{ color: category.color }}\n                            ></i>\n                          </div>\n                          <h3 className=\"font-bold mb-2 text-white\">{app.name}</h3>\n                          <p className=\"text-xs text-gray-400 mb-4 line-clamp-2\">{app.description}</p>\n                          \n                          {/* Features preview */}\n                          <div className=\"space-y-1 mb-4\">\n                            {app.features.slice(0, 3).map((feature, idx) => (\n                              <div key={idx} className=\"text-xs text-gray-500 truncate\">\n                                • {feature}\n                              </div>\n                            ))}\n                          </div>\n\n                          {/* Shortcuts */}\n                          <div className=\"flex flex-wrap gap-1 justify-center\">\n                            {app.shortcuts.slice(0, 3).map((shortcut, idx) => (\n                              <span \n                                key={idx}\n                                className=\"text-xs px-2 py-1 rounded-full\"\n                                style={{ \n                                  backgroundColor: `${category.color}10`,\n                                  color: category.color,\n                                  border: `1px solid ${category.color}30`\n                                }}\n                              >\n                                {shortcut}\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Summary Footer */}\n        <div className=\"mt-16 text-center bg-aura-dark-secondary rounded-2xl p-8 border border-aura-gray\">\n          <h3 className=\"text-2xl font-bold mb-4\">Complete Business Suite</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div>\n              <div className=\"text-3xl font-bold gradient-text\">{apps?.length || 0}</div>\n              <div className=\"text-gray-400\">Total Apps</div>\n            </div>\n            <div>\n              <div className=\"text-3xl font-bold gradient-text\">{categories?.length || 0}</div>\n              <div className=\"text-gray-400\">Categories</div>\n            </div>\n            <div>\n              <div className=\"text-3xl font-bold gradient-text\">\n                {apps?.reduce((sum, app) => sum + app.features.length, 0) || 0}\n              </div>\n              <div className=\"text-gray-400\">Features</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":6888},"FutureHome/client/src/pages/app.tsx":{"content":"import { useParams } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type App, type Category } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowLeft, Bell, UserCircle, Search, Plus } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport AppSidebar from \"@/components/app-sidebar\";\n\nexport default function AppPage() {\n  const { appId } = useParams<{ appId: string }>();\n\n  const { data: app, isLoading: appLoading } = useQuery<App>({\n    queryKey: [\"/api/apps\", appId],\n  });\n\n  const { data: category, isLoading: categoryLoading } = useQuery<Category>({\n    queryKey: [\"/api/categories\", app?.categoryId],\n    enabled: !!app?.categoryId,\n  });\n\n  if (appLoading || categoryLoading) {\n    return (\n      <div className=\"min-h-screen bg-aura-dark\">\n        <div className=\"bg-aura-dark-secondary border-b border-aura-gray\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex items-center justify-between h-14\">\n              <Skeleton className=\"h-6 w-32\" />\n              <Skeleton className=\"h-8 w-96\" />\n              <div className=\"flex space-x-4\">\n                <Skeleton className=\"h-8 w-8 rounded-full\" />\n                <Skeleton className=\"h-8 w-8 rounded-full\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex\">\n          <Skeleton className=\"w-64 h-screen\" />\n          <div className=\"flex-1 p-8\">\n            <Skeleton className=\"h-12 w-64 mb-4\" />\n            <Skeleton className=\"h-6 w-96 mb-8\" />\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {Array.from({ length: 4 }).map((_, i) => (\n                <Skeleton key={i} className=\"h-32 rounded-lg\" />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!app || !category) {\n    return (\n      <div className=\"min-h-screen bg-aura-dark pt-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <h1 className=\"text-2xl font-bold text-red-400 mb-4\">App Not Found</h1>\n            <Link href=\"/\">\n              <Button>Back to Home</Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-aura-dark\">\n      {/* App-specific Top Navigation */}\n      <nav className=\"bg-aura-dark-secondary border-b border-aura-gray\">\n        <div className=\"flex items-center justify-between h-14 px-4\">\n          {/* Left section */}\n          <div className=\"flex items-center space-x-4\">\n            <Link href=\"/\">\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-300 hover:text-white\">\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                Home\n              </Button>\n            </Link>\n            <div className=\"h-6 w-px bg-aura-gray\"></div>\n            <span \n              className=\"text-lg font-semibold\"\n              style={{ color: category.color }}\n            >\n              {app.name}\n            </span>\n          </div>\n\n          {/* Center search */}\n          <div className=\"flex-1 max-w-2xl mx-8\">\n            <div className=\"relative\">\n              <input \n                type=\"text\" \n                placeholder={`Search in ${app.name}...`}\n                className=\"w-full bg-aura-dark border border-aura-gray rounded-lg px-4 py-2 pl-10 text-sm focus:outline-none focus:border-opacity-50 transition-all\"\n                style={{ borderColor: category.color + '40' }}\n              />\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n            </div>\n          </div>\n\n          {/* Right section */}\n          <div className=\"flex items-center space-x-2\">\n            <Button \n              size=\"sm\" \n              className=\"text-black font-medium\"\n              style={{ backgroundColor: category.color }}\n            >\n              <Plus className=\"h-4 w-4 mr-1\" />\n              New\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-300 hover:text-white\">\n              <Bell className=\"h-4 w-4\" />\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-300 hover:text-white\">\n              <UserCircle className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </nav>\n\n      {/* Main Layout with Sidebar */}\n      <div className=\"flex\">\n        {/* App-specific Sidebar */}\n        <AppSidebar app={app} category={category} currentPage=\"Dashboard\" />\n\n        {/* Main Content Area */}\n        <div className=\"flex-1 bg-aura-dark\">\n          <div className=\"p-8\">\n            {/* Dashboard Header */}\n            <div className=\"mb-8\">\n              <h1 className=\"text-3xl font-bold mb-2\">Dashboard</h1>\n              <p className=\"text-gray-300\">Welcome back! Here's what's happening with your {app.name}.</p>\n            </div>\n\n            {/* Quick Stats Cards */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n              {app.features.map((feature, index) => (\n                <div \n                  key={index}\n                  className=\"bg-aura-dark-secondary rounded-lg p-6 border border-aura-gray hover:border-opacity-50 transition-all duration-200\"\n                  style={{ borderColor: `${category.color}20` }}\n                >\n                  <div className=\"flex items-center\">\n                    <div \n                      className=\"p-3 rounded-full mr-4\"\n                      style={{ \n                        backgroundColor: `${category.color}20`,\n                        color: category.color \n                      }}\n                    >\n                      <i className={`${app.icon} text-xl`}></i>\n                    </div>\n                    <div>\n                      <p className=\"text-2xl font-bold\">{(index + 1) * 1247}</p>\n                      <p className=\"text-gray-400 text-sm\">{feature}</p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Quick Actions Section */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n              <div className=\"bg-aura-dark-secondary rounded-lg p-6 border border-aura-gray\">\n                <h3 className=\"text-xl font-semibold mb-4\">Quick Actions</h3>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  {app.shortcuts.slice(0, 4).map((shortcut, index) => (\n                    <Button \n                      key={index}\n                      variant=\"outline\"\n                      className=\"p-4 h-auto flex flex-col items-center justify-center space-y-2 border-aura-gray hover:border-opacity-50\"\n                      style={{ \n                        borderColor: `${category.color}40`,\n                        color: category.color,\n                      }}\n                    >\n                      <i className=\"fas fa-plus text-lg\"></i>\n                      <span className=\"text-sm\">{shortcut}</span>\n                    </Button>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"bg-aura-dark-secondary rounded-lg p-6 border border-aura-gray\">\n                <h3 className=\"text-xl font-semibold mb-4\">Recent Activity</h3>\n                <div className=\"space-y-3\">\n                  {[\n                    { action: \"New record created\", time: \"2 minutes ago\" },\n                    { action: \"Report generated\", time: \"1 hour ago\" },\n                    { action: \"Data imported\", time: \"3 hours ago\" },\n                    { action: \"Settings updated\", time: \"1 day ago\" }\n                  ].map((activity, index) => (\n                    <div key={index} className=\"flex items-center justify-between py-2 border-b border-aura-gray/30 last:border-b-0\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div \n                          className=\"w-2 h-2 rounded-full\"\n                          style={{ backgroundColor: category.color }}\n                        ></div>\n                        <span className=\"text-sm\">{activity.action}</span>\n                      </div>\n                      <span className=\"text-xs text-gray-400\">{activity.time}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* App-specific Content Grid */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              <div className=\"lg:col-span-2 bg-aura-dark-secondary rounded-lg p-6 border border-aura-gray\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <h3 className=\"text-xl font-semibold\">Overview Chart</h3>\n                  <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-400 hover:text-white\">\n                    View Details\n                  </Button>\n                </div>\n                <div className=\"h-64 bg-aura-dark rounded-lg flex items-center justify-center border border-aura-gray\">\n                  <div className=\"text-center\">\n                    <i \n                      className=\"fas fa-chart-line text-4xl mb-4\"\n                      style={{ color: category.color }}\n                    ></i>\n                    <p className=\"text-gray-400\">Interactive charts and analytics will be displayed here</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-aura-dark-secondary rounded-lg p-6 border border-aura-gray\">\n                <h3 className=\"text-xl font-semibold mb-4\">Key Metrics</h3>\n                <div className=\"space-y-4\">\n                  {app.features.slice(0, 3).map((feature, index) => (\n                    <div key={index} className=\"space-y-2\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span>{feature}</span>\n                        <span style={{ color: category.color }}>{85 + index * 5}%</span>\n                      </div>\n                      <div className=\"w-full bg-aura-gray rounded-full h-2\">\n                        <div \n                          className=\"h-2 rounded-full transition-all duration-300\"\n                          style={{ \n                            backgroundColor: category.color,\n                            width: `${85 + index * 5}%` \n                          }}\n                        ></div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":10824},"FutureHome/client/src/pages/category.tsx":{"content":"import { useParams } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { type Category, type App } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowLeft } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\nexport default function CategoryPage() {\n  const { categoryId } = useParams<{ categoryId: string }>();\n\n  const { data: category, isLoading: categoryLoading } = useQuery<Category>({\n    queryKey: [\"/api/categories\", categoryId],\n  });\n\n  const { data: apps, isLoading: appsLoading } = useQuery<App[]>({\n    queryKey: [\"/api/apps\"],\n    select: (allApps: App[]) => allApps.filter(app => app.categoryId === categoryId),\n  });\n\n  if (categoryLoading || appsLoading) {\n    return (\n      <div className=\"min-h-screen bg-aura-dark pt-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <Skeleton className=\"h-10 w-32 mb-8\" />\n          <Skeleton className=\"h-12 w-64 mb-4\" />\n          <Skeleton className=\"h-6 w-96 mb-8\" />\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {Array.from({ length: 6 }).map((_, i) => (\n              <Skeleton key={i} className=\"h-48 rounded-xl\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!category) {\n    return (\n      <div className=\"min-h-screen bg-aura-dark pt-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center\">\n            <h1 className=\"text-2xl font-bold text-red-400 mb-4\">Category Not Found</h1>\n            <Link href=\"/\">\n              <Button>Back to Home</Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-aura-dark pt-20\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <Link href=\"/\">\n          <Button variant=\"ghost\" className=\"mb-8 text-gray-300 hover:text-white\">\n            <ArrowLeft className=\"mr-2 h-4 w-4\" />\n            Back to Home\n          </Button>\n        </Link>\n\n        <div className=\"mb-8\">\n          <div className=\"flex items-center mb-4\">\n            <i className={`${category.icon} text-3xl mr-4`} style={{ color: category.color }}></i>\n            <h1 className=\"text-4xl font-bold\">{category.name}</h1>\n            <span \n              className=\"ml-4 text-black text-sm px-3 py-1 rounded-full font-medium\"\n              style={{ backgroundColor: category.color }}\n            >\n              {category.appCount} Apps\n            </span>\n          </div>\n          <p className=\"text-gray-300 text-lg\">{category.description}</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {apps?.map((app) => (\n            <Link key={app.id} href={`/app/${app.id}`}>\n              <div className=\"app-card bg-aura-dark-secondary rounded-xl p-6 cursor-pointer\">\n                <div className=\"flex items-center mb-4\">\n                  <i className={`${app.icon} text-2xl mr-3`} style={{ color: category.color }}></i>\n                  <h3 className=\"text-xl font-semibold\">{app.name}</h3>\n                </div>\n                <p className=\"text-gray-300 text-sm mb-4\">{app.description}</p>\n                <div className=\"space-y-2 text-sm\">\n                  {app.features.slice(0, 3).map((feature, index) => (\n                    <div key={index} className=\"flex justify-between items-center\">\n                      <span>{feature}</span>\n                      <i className=\"fas fa-arrow-right\" style={{ color: category.color }}></i>\n                    </div>\n                  ))}\n                  {app.features.length > 3 && (\n                    <div className=\"text-gray-400\">+{app.features.length - 3} more features</div>\n                  )}\n                </div>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4004},"FutureHome/client/src/pages/home.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { type Category, type Suite, type App } from \"@shared/schema\";\nimport SuiteCard from \"@/components/suite-card\";\nimport SearchBar from \"@/components/search-bar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Link } from \"wouter\";\n\nexport default function Home() {\n  const { data: categories, isLoading: categoriesLoading } = useQuery<Category[]>({\n    queryKey: [\"/api/categories\"],\n  });\n\n  const { data: apps, isLoading: appsLoading } = useQuery<App[]>({\n    queryKey: [\"/api/apps\"],\n  });\n\n  const { data: suites, isLoading: suitesLoading } = useQuery<Suite[]>({\n    queryKey: [\"/api/suites\"],\n  });\n\n  // Group apps by category\n  const appsByCategory = categories?.reduce((acc, category) => {\n    acc[category.id] = apps?.filter(app => app.categoryId === category.id) || [];\n    return acc;\n  }, {} as Record<string, App[]>) || {};\n\n  if (categoriesLoading || appsLoading || suitesLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-aura-dark via-aura-dark-secondary to-aura-dark\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20\">\n          <div className=\"text-center mb-16\">\n            <Skeleton className=\"h-16 w-96 mx-auto mb-6\" />\n            <Skeleton className=\"h-6 w-[600px] mx-auto mb-8\" />\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Skeleton className=\"h-12 w-32\" />\n              <Skeleton className=\"h-12 w-32\" />\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            {Array.from({ length: 12 }).map((_, i) => (\n              <Skeleton key={i} className=\"h-64 rounded-xl\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-aura-dark via-aura-dark-secondary to-aura-dark\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-16\">\n          <h1 className=\"text-5xl md:text-7xl font-bold mb-6 animate-float\">\n            Welcome to <span className=\"gradient-text\">AURA</span>\n          </h1>\n          <p className=\"text-xl text-gray-300 mb-8 max-w-3xl mx-auto\">\n            The next generation business suite with 80+ integrated applications.\n            Transform your workflow with our futuristic, AI-powered platform.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link href=\"/apps\">\n              <Button className=\"bg-aura-neon-blue hover:bg-blue-600 text-black px-8 py-3 rounded-lg font-semibold transition-all hover:shadow-neon-blue\">\n                View All Apps\n              </Button>\n            </Link>\n            <Button variant=\"outline\" className=\"border border-aura-neon-purple text-aura-neon-purple hover:bg-aura-neon-purple hover:text-black px-8 py-3 rounded-lg font-semibold transition-all hover:shadow-neon-purple\">\n              Watch Demo\n            </Button>\n          </div>\n        </div>\n\n        {/* Search Bar */}\n        <div className=\"mb-12\">\n          <SearchBar />\n        </div>\n\n        {/* Stats Summary */}\n        <div className=\"bg-aura-dark-secondary rounded-2xl p-8 mb-12 text-center border border-aura-gray\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div className=\"space-y-2\">\n              <h3 className=\"text-3xl font-bold gradient-text\">{apps?.length || 0}</h3>\n              <p className=\"text-gray-300\">Total Applications</p>\n            </div>\n            <div className=\"space-y-2\">\n              <h3 className=\"text-3xl font-bold gradient-text\">{categories?.length || 0}</h3>\n              <p className=\"text-gray-300\">Business Categories</p>\n            </div>\n            <div className=\"space-y-2\">\n              <h3 className=\"text-3xl font-bold gradient-text\">{suites?.length || 0}</h3>\n              <p className=\"text-gray-300\">Integrated Suites</p>\n            </div>\n          </div>\n        </div>\n\n        {/* All Apps Organized by Categories */}\n        <div className=\"space-y-16 mb-20\">\n          {categories?.map((category) => {\n            const categoryApps = appsByCategory[category.id] || [];\n            if (categoryApps.length === 0) return null;\n\n            return (\n              <div key={category.id} className=\"space-y-6\">\n                {/* Category Header */}\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-4\">\n                    <i className={`${category.icon} text-3xl`} style={{ color: category.color }}></i>\n                    <div>\n                      <h2 className=\"text-2xl font-bold\">{category.name}</h2>\n                      <p className=\"text-gray-300 text-sm\">{category.description}</p>\n                    </div>\n                    <span \n                      className=\"text-black text-xs px-3 py-1 rounded-full font-medium\"\n                      style={{ backgroundColor: category.color }}\n                    >\n                      {categoryApps.length} Apps\n                    </span>\n                  </div>\n                  <Link href={`/category/${category.id}`}>\n                    <Button \n                      variant=\"outline\" \n                      className=\"text-sm\"\n                      style={{ \n                        borderColor: category.color,\n                        color: category.color \n                      }}\n                    >\n                      View All <i className=\"fas fa-arrow-right ml-2\"></i>\n                    </Button>\n                  </Link>\n                </div>\n\n                {/* Apps Grid for this Category - Show ALL apps */}\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4\">\n                  {categoryApps.map((app) => (\n                    <Link key={app.id} href={`/app/${app.id}`}>\n                      <div className=\"app-card bg-aura-dark-secondary rounded-lg p-6 cursor-pointer transition-all duration-300 border border-transparent hover:border-opacity-80 hover:shadow-lg hover:scale-105\" style={{ borderColor: `${category.color}40` }}>\n                        <div className=\"text-center\">\n                          <div \n                            className=\"w-12 h-12 rounded-xl mx-auto mb-4 flex items-center justify-center\"\n                            style={{ backgroundColor: `${category.color}20` }}\n                          >\n                            <i \n                              className={`${app.icon} text-xl`} \n                              style={{ color: category.color }}\n                            ></i>\n                          </div>\n                          <h3 className=\"text-sm font-semibold mb-2\">{app.name}</h3>\n                          <p className=\"text-xs text-gray-400 line-clamp-2 mb-3\">{app.description}</p>\n                          <div className=\"flex flex-wrap gap-1 justify-center\">\n                            {app.shortcuts.slice(0, 2).map((shortcut, idx) => (\n                              <span \n                                key={idx}\n                                className=\"text-xs px-2 py-1 rounded-full\"\n                                style={{ \n                                  backgroundColor: `${category.color}15`,\n                                  color: category.color \n                                }}\n                              >\n                                {shortcut}\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Suites Section */}\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl font-bold mb-4 gradient-text\">Integrated Suites</h2>\n          <p className=\"text-gray-300 max-w-2xl mx-auto\">\n            Pre-configured bundles of apps working seamlessly together for specific business needs\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n          {suites?.map((suite) => (\n            <SuiteCard key={suite.id} suite={suite} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":8567},"FutureHome/client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/zoho-button.tsx":{"content":"import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { \n  Plus, \n  Search, \n  Filter, \n  Download, \n  Upload, \n  Settings, \n  MoreHorizontal,\n  Trash2,\n  Edit,\n  Copy,\n  Share2,\n  RefreshCw,\n  Save,\n  X,\n  Check\n} from \"lucide-react\";\n\ninterface ZohoButtonProps {\n  variant?: \"primary\" | \"secondary\" | \"danger\" | \"success\" | \"outline\" | \"ghost\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  icon?: \"plus\" | \"search\" | \"filter\" | \"download\" | \"upload\" | \"settings\" | \"more\" | \"trash\" | \"edit\" | \"copy\" | \"share\" | \"refresh\" | \"save\" | \"close\" | \"check\";\n  children?: React.ReactNode;\n  onClick?: () => void;\n  disabled?: boolean;\n  loading?: boolean;\n  className?: string;\n  fullWidth?: boolean;\n}\n\nconst iconMap = {\n  plus: Plus,\n  search: Search,\n  filter: Filter,\n  download: Download,\n  upload: Upload,\n  settings: Settings,\n  more: MoreHorizontal,\n  trash: Trash2,\n  edit: Edit,\n  copy: Copy,\n  share: Share2,\n  refresh: RefreshCw,\n  save: Save,\n  close: X,\n  check: Check,\n};\n\nexport function ZohoButton({\n  variant = \"primary\",\n  size = \"md\",\n  icon,\n  children,\n  onClick,\n  disabled = false,\n  loading = false,\n  className,\n  fullWidth = false,\n  ...props\n}: ZohoButtonProps) {\n  const IconComponent = icon ? iconMap[icon] : null;\n\n  const baseClasses = \"relative inline-flex items-center justify-center font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\";\n  \n  const variantClasses = {\n    primary: \"bg-blue-600 hover:bg-blue-700 text-white border border-blue-600 focus:ring-blue-500 shadow-sm\",\n    secondary: \"bg-gray-100 hover:bg-gray-200 text-gray-900 border border-gray-300 focus:ring-gray-500 dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-white dark:border-gray-600\",\n    danger: \"bg-red-600 hover:bg-red-700 text-white border border-red-600 focus:ring-red-500 shadow-sm\",\n    success: \"bg-green-600 hover:bg-green-700 text-white border border-green-600 focus:ring-green-500 shadow-sm\",\n    outline: \"bg-transparent hover:bg-gray-50 text-gray-700 border border-gray-300 focus:ring-blue-500 dark:hover:bg-gray-700 dark:text-gray-300 dark:border-gray-600\",\n    ghost: \"bg-transparent hover:bg-gray-100 text-gray-700 border-0 focus:ring-blue-500 dark:hover:bg-gray-700 dark:text-gray-300\",\n  };\n\n  const sizeClasses = {\n    sm: \"px-3 py-1.5 text-xs rounded-md gap-1.5\",\n    md: \"px-4 py-2 text-sm rounded-md gap-2\",\n    lg: \"px-6 py-3 text-base rounded-lg gap-2.5\",\n  };\n\n  const iconSizes = {\n    sm: \"w-3 h-3\",\n    md: \"w-4 h-4\", \n    lg: \"w-5 h-5\",\n  };\n\n  return (\n    <Button\n      className={cn(\n        baseClasses,\n        variantClasses[variant],\n        sizeClasses[size],\n        fullWidth && \"w-full\",\n        loading && \"cursor-wait\",\n        className\n      )}\n      onClick={onClick}\n      disabled={disabled || loading}\n      data-testid={`button-${variant}-${children?.toString().toLowerCase().replace(/\\s+/g, '-') || 'action'}`}\n      {...props}\n    >\n      {loading && (\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <RefreshCw className={cn(iconSizes[size], \"animate-spin\")} />\n        </div>\n      )}\n      \n      <div className={cn(\"flex items-center gap-2\", loading && \"opacity-0\")}>\n        {IconComponent && (\n          <IconComponent className={iconSizes[size]} />\n        )}\n        {children}\n      </div>\n    </Button>\n  );\n}\n\n// Toolbar component\ninterface ZohoToolbarProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport function ZohoToolbar({ children, className }: ZohoToolbarProps) {\n  return (\n    <div \n      className={cn(\n        \"flex items-center gap-2 p-4 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\",\n        className\n      )}\n      data-testid=\"toolbar-container\"\n    >\n      {children}\n    </div>\n  );\n}\n\n// Action Menu Component\ninterface ZohoActionMenuProps {\n  items: Array<{\n    label: string;\n    icon?: keyof typeof iconMap;\n    onClick: () => void;\n    disabled?: boolean;\n    variant?: \"default\" | \"danger\";\n  }>;\n  trigger?: React.ReactNode;\n  className?: string;\n}\n\nexport function ZohoActionMenu({ items, trigger, className }: ZohoActionMenuProps) {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  return (\n    <div className={cn(\"relative\", className)}>\n      <div\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"cursor-pointer\"\n        data-testid=\"action-menu-trigger\"\n      >\n        {trigger || <ZohoButton variant=\"ghost\" icon=\"more\" size=\"sm\" />}\n      </div>\n      \n      {isOpen && (\n        <>\n          <div \n            className=\"fixed inset-0 z-10\" \n            onClick={() => setIsOpen(false)}\n          />\n          <div className=\"absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-md shadow-lg border border-gray-200 dark:border-gray-700 z-20\">\n            <div className=\"py-1\">\n              {items.map((item, index) => {\n                const IconComponent = item.icon ? iconMap[item.icon] : null;\n                return (\n                  <button\n                    key={index}\n                    onClick={() => {\n                      item.onClick();\n                      setIsOpen(false);\n                    }}\n                    disabled={item.disabled}\n                    className={cn(\n                      \"flex items-center gap-2 w-full px-4 py-2 text-sm text-left hover:bg-gray-100 dark:hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed\",\n                      item.variant === \"danger\" && \"text-red-600 hover:bg-red-50 dark:hover:bg-red-900/20\"\n                    )}\n                    data-testid={`action-menu-item-${item.label.toLowerCase().replace(/\\s+/g, '-')}`}\n                  >\n                    {IconComponent && <IconComponent className=\"w-4 h-4\" />}\n                    {item.label}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}","size_bytes":6020},"client/src/components/ui/zoho-card.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { BarChart3, TrendingUp, TrendingDown, Users, DollarSign, Package, Activity } from \"lucide-react\";\n\ninterface ZohoCardProps {\n  title: string;\n  value?: string | number;\n  subtitle?: string;\n  trend?: {\n    value: number;\n    direction: \"up\" | \"down\";\n    period?: string;\n  };\n  icon?: \"chart\" | \"trending-up\" | \"trending-down\" | \"users\" | \"dollar\" | \"package\" | \"activity\";\n  variant?: \"default\" | \"primary\" | \"success\" | \"warning\" | \"danger\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  children?: React.ReactNode;\n  className?: string;\n  loading?: boolean;\n}\n\nconst iconMap = {\n  chart: BarChart3,\n  \"trending-up\": TrendingUp,\n  \"trending-down\": TrendingDown,\n  users: Users,\n  dollar: DollarSign,\n  package: Package,\n  activity: Activity,\n};\n\nconst variantColors = {\n  default: \"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\",\n  primary: \"bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800\",\n  success: \"bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800\",\n  warning: \"bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800\",\n  danger: \"bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800\",\n};\n\nconst iconColors = {\n  default: \"text-gray-600 dark:text-gray-400\",\n  primary: \"text-blue-600 dark:text-blue-400\",\n  success: \"text-green-600 dark:text-green-400\",\n  warning: \"text-yellow-600 dark:text-yellow-400\",\n  danger: \"text-red-600 dark:text-red-400\",\n};\n\nexport function ZohoCard({\n  title,\n  value,\n  subtitle,\n  trend,\n  icon,\n  variant = \"default\",\n  size = \"md\",\n  children,\n  className,\n  loading = false,\n}: ZohoCardProps) {\n  const IconComponent = icon ? iconMap[icon] : null;\n\n  const sizeClasses = {\n    sm: \"p-4\",\n    md: \"p-6\",\n    lg: \"p-8\",\n  };\n\n  if (loading) {\n    return (\n      <div className={cn(\n        \"rounded-lg border\",\n        variantColors[variant],\n        sizeClasses[size],\n        \"animate-pulse\",\n        className\n      )}>\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded w-1/2\"></div>\n          <div className=\"h-8 w-8 bg-gray-300 dark:bg-gray-600 rounded\"></div>\n        </div>\n        <div className=\"h-8 bg-gray-300 dark:bg-gray-600 rounded w-3/4 mb-2\"></div>\n        <div className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded w-1/3\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div \n      className={cn(\n        \"rounded-lg border shadow-sm hover:shadow-md transition-shadow duration-200\",\n        variantColors[variant],\n        sizeClasses[size],\n        className\n      )}\n      data-testid={`card-${title.toLowerCase().replace(/\\s+/g, '-')}`}\n    >\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n          {title}\n        </h3>\n        {IconComponent && (\n          <IconComponent className={cn(\"w-5 h-5\", iconColors[variant])} />\n        )}\n      </div>\n\n      {value && (\n        <div className=\"mb-2\">\n          <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            {value}\n          </div>\n        </div>\n      )}\n\n      {(subtitle || trend) && (\n        <div className=\"flex items-center justify-between text-sm\">\n          {subtitle && (\n            <span className=\"text-gray-500 dark:text-gray-400\">\n              {subtitle}\n            </span>\n          )}\n          {trend && (\n            <div className={cn(\n              \"flex items-center gap-1\",\n              trend.direction === \"up\" ? \"text-green-600 dark:text-green-400\" : \"text-red-600 dark:text-red-400\"\n            )}>\n              {trend.direction === \"up\" ? (\n                <TrendingUp className=\"w-3 h-3\" />\n              ) : (\n                <TrendingDown className=\"w-3 h-3\" />\n              )}\n              <span className=\"font-medium\">{trend.value}%</span>\n              {trend.period && (\n                <span className=\"text-gray-500 dark:text-gray-400\">\n                  {trend.period}\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n\n      {children && (\n        <div className=\"mt-4\">\n          {children}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Dashboard Grid Layout\ninterface ZohoDashboardGridProps {\n  children: React.ReactNode;\n  columns?: 1 | 2 | 3 | 4;\n  gap?: \"sm\" | \"md\" | \"lg\";\n  className?: string;\n}\n\nexport function ZohoDashboardGrid({ \n  children, \n  columns = 3,\n  gap = \"md\",\n  className \n}: ZohoDashboardGridProps) {\n  const gridCols = {\n    1: \"grid-cols-1\",\n    2: \"grid-cols-1 md:grid-cols-2\",\n    3: \"grid-cols-1 md:grid-cols-2 lg:grid-cols-3\",\n    4: \"grid-cols-1 md:grid-cols-2 lg:grid-cols-4\",\n  };\n\n  const gridGap = {\n    sm: \"gap-4\",\n    md: \"gap-6\",\n    lg: \"gap-8\",\n  };\n\n  return (\n    <div \n      className={cn(\n        \"grid\",\n        gridCols[columns],\n        gridGap[gap],\n        className\n      )}\n      data-testid=\"dashboard-grid\"\n    >\n      {children}\n    </div>\n  );\n}\n\n// Metric Widget Component\ninterface ZohoMetricWidgetProps {\n  title: string;\n  value: string | number;\n  change?: {\n    value: number;\n    period: string;\n  };\n  format?: \"number\" | \"currency\" | \"percentage\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  className?: string;\n}\n\nexport function ZohoMetricWidget({\n  title,\n  value,\n  change,\n  format = \"number\",\n  size = \"md\",\n  className,\n}: ZohoMetricWidgetProps) {\n  const formatValue = (val: string | number) => {\n    if (format === \"currency\") {\n      return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n      }).format(Number(val));\n    }\n    if (format === \"percentage\") {\n      return `${val}%`;\n    }\n    return val.toLocaleString();\n  };\n\n  return (\n    <ZohoCard\n      title={title}\n      value={formatValue(value)}\n      trend={change ? {\n        value: change.value,\n        direction: change.value >= 0 ? \"up\" : \"down\",\n        period: change.period,\n      } : undefined}\n      size={size}\n      className={className}\n    />\n  );\n}","size_bytes":6075},"client/src/components/ui/zoho-date-picker.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Calendar, ChevronLeft, ChevronRight, X } from \"lucide-react\";\n\ninterface ZohoDatePickerProps {\n  value?: Date;\n  onChange?: (date: Date | null) => void;\n  placeholder?: string;\n  label?: string;\n  error?: string;\n  required?: boolean;\n  disabled?: boolean;\n  minDate?: Date;\n  maxDate?: Date;\n  format?: \"MM/dd/yyyy\" | \"dd/MM/yyyy\" | \"yyyy-MM-dd\";\n  showTime?: boolean;\n  className?: string;\n}\n\nexport function ZohoDatePicker({\n  value,\n  onChange,\n  placeholder = \"Select date...\",\n  label,\n  error,\n  required,\n  disabled,\n  minDate,\n  maxDate,\n  format = \"MM/dd/yyyy\",\n  showTime = false,\n  className,\n}: ZohoDatePickerProps) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [currentMonth, setCurrentMonth] = React.useState(\n    value ? new Date(value.getFullYear(), value.getMonth()) : new Date()\n  );\n  const [timeInput, setTimeInput] = React.useState(\n    value ? `${value.getHours().toString().padStart(2, '0')}:${value.getMinutes().toString().padStart(2, '0')}` : \"12:00\"\n  );\n\n  const formatDate = (date: Date) => {\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n\n    switch (format) {\n      case \"dd/MM/yyyy\":\n        return `${day}/${month}/${year}`;\n      case \"yyyy-MM-dd\":\n        return `${year}-${month}-${day}`;\n      default:\n        return `${month}/${day}/${year}`;\n    }\n  };\n\n  const isDateDisabled = (date: Date) => {\n    if (minDate && date < minDate) return true;\n    if (maxDate && date > maxDate) return true;\n    return false;\n  };\n\n  const handleDateSelect = (date: Date) => {\n    if (isDateDisabled(date)) return;\n\n    let selectedDate = new Date(date);\n    \n    if (showTime && timeInput) {\n      const [hours, minutes] = timeInput.split(':').map(Number);\n      selectedDate.setHours(hours, minutes);\n    }\n\n    onChange?.(selectedDate);\n    if (!showTime) {\n      setIsOpen(false);\n    }\n  };\n\n  const handleTimeChange = (time: string) => {\n    setTimeInput(time);\n    if (value) {\n      const [hours, minutes] = time.split(':').map(Number);\n      const newDate = new Date(value);\n      newDate.setHours(hours, minutes);\n      onChange?.(newDate);\n    }\n  };\n\n  const handleClear = () => {\n    onChange?.(null);\n    setIsOpen(false);\n  };\n\n  const getDaysInMonth = (date: Date) => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const daysInMonth = lastDay.getDate();\n    const startingDayOfWeek = firstDay.getDay();\n\n    const days = [];\n\n    // Previous month's days\n    const prevMonth = new Date(year, month - 1, 0);\n    for (let i = startingDayOfWeek - 1; i >= 0; i--) {\n      days.push({\n        date: new Date(year, month - 1, prevMonth.getDate() - i),\n        isCurrentMonth: false,\n      });\n    }\n\n    // Current month's days\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push({\n        date: new Date(year, month, day),\n        isCurrentMonth: true,\n      });\n    }\n\n    // Next month's days\n    const remainingDays = 42 - days.length; // 6 rows × 7 days\n    for (let day = 1; day <= remainingDays; day++) {\n      days.push({\n        date: new Date(year, month + 1, day),\n        isCurrentMonth: false,\n      });\n    }\n\n    return days;\n  };\n\n  const monthNames = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  const weekDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  const displayValue = value ? formatDate(value) + (showTime ? ` ${timeInput}` : \"\") : \"\";\n\n  return (\n    <div className=\"relative w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n\n      <div className=\"relative\">\n        <button\n          type=\"button\"\n          onClick={() => !disabled && setIsOpen(!isOpen)}\n          disabled={disabled}\n          className={cn(\n            \"w-full px-4 py-2 text-left border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\",\n            error && \"border-red-500 focus:ring-red-500 focus:border-red-500\",\n            disabled && \"opacity-50 cursor-not-allowed\",\n            className\n          )}\n          data-testid=\"date-picker-trigger\"\n        >\n          <div className=\"flex items-center justify-between\">\n            <span className={cn(\n              displayValue ? \"text-gray-900 dark:text-white\" : \"text-gray-500 dark:text-gray-400\"\n            )}>\n              {displayValue || placeholder}\n            </span>\n            <div className=\"flex items-center gap-1\">\n              {value && (\n                <button\n                  type=\"button\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleClear();\n                  }}\n                  className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n                  data-testid=\"date-picker-clear\"\n                >\n                  <X className=\"w-4 h-4\" />\n                </button>\n              )}\n              <Calendar className=\"w-4 h-4 text-gray-400\" />\n            </div>\n          </div>\n        </button>\n\n        {isOpen && (\n          <>\n            <div \n              className=\"fixed inset-0 z-10\" \n              onClick={() => setIsOpen(false)}\n            />\n            <div className=\"absolute z-20 mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg p-4 w-80\">\n              {/* Month/Year Header */}\n              <div className=\"flex items-center justify-between mb-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => setCurrentMonth(new Date(currentMonth.getFullYear(), currentMonth.getMonth() - 1))}\n                  className=\"p-1 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\"\n                  data-testid=\"date-picker-prev-month\"\n                >\n                  <ChevronLeft className=\"w-4 h-4\" />\n                </button>\n                \n                <div className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  {monthNames[currentMonth.getMonth()]} {currentMonth.getFullYear()}\n                </div>\n                \n                <button\n                  type=\"button\"\n                  onClick={() => setCurrentMonth(new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1))}\n                  className=\"p-1 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\"\n                  data-testid=\"date-picker-next-month\"\n                >\n                  <ChevronRight className=\"w-4 h-4\" />\n                </button>\n              </div>\n\n              {/* Week Days */}\n              <div className=\"grid grid-cols-7 gap-1 mb-2\">\n                {weekDays.map((day) => (\n                  <div key={day} className=\"text-center text-xs font-medium text-gray-500 dark:text-gray-400 py-2\">\n                    {day}\n                  </div>\n                ))}\n              </div>\n\n              {/* Calendar Days */}\n              <div className=\"grid grid-cols-7 gap-1\">\n                {getDaysInMonth(currentMonth).map((day, index) => {\n                  const isToday = day.date.toDateString() === new Date().toDateString();\n                  const isSelected = value && day.date.toDateString() === value.toDateString();\n                  const isDisabled = isDateDisabled(day.date);\n\n                  return (\n                    <button\n                      key={index}\n                      type=\"button\"\n                      onClick={() => handleDateSelect(day.date)}\n                      disabled={isDisabled}\n                      className={cn(\n                        \"w-8 h-8 text-sm rounded transition-colors duration-200\",\n                        day.isCurrentMonth ? \"text-gray-900 dark:text-white\" : \"text-gray-400 dark:text-gray-500\",\n                        isToday && \"bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400\",\n                        isSelected && \"bg-blue-600 text-white\",\n                        !isDisabled && !isSelected && \"hover:bg-gray-100 dark:hover:bg-gray-700\",\n                        isDisabled && \"opacity-50 cursor-not-allowed\"\n                      )}\n                      data-testid={`date-${day.date.getDate()}`}\n                    >\n                      {day.date.getDate()}\n                    </button>\n                  );\n                })}\n              </div>\n\n              {/* Time Picker */}\n              {showTime && (\n                <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Time\n                  </label>\n                  <input\n                    type=\"time\"\n                    value={timeInput}\n                    onChange={(e) => handleTimeChange(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    data-testid=\"time-picker\"\n                  />\n                </div>\n              )}\n\n              {/* Actions */}\n              <div className=\"flex justify-end gap-2 mt-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => setIsOpen(false)}\n                  className=\"px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200\"\n                  data-testid=\"date-picker-cancel\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (value) {\n                      setIsOpen(false);\n                    }\n                  }}\n                  disabled={!value}\n                  className=\"px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  data-testid=\"date-picker-apply\"\n                >\n                  Apply\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n\n      {error && (\n        <div className=\"mt-1 text-sm text-red-600 dark:text-red-400\">\n          {error}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Date Range Picker\ninterface ZohoDateRangePickerProps {\n  startDate?: Date;\n  endDate?: Date;\n  onChange?: (startDate: Date | null, endDate: Date | null) => void;\n  placeholder?: string;\n  label?: string;\n  error?: string;\n  required?: boolean;\n  disabled?: boolean;\n  className?: string;\n}\n\nexport function ZohoDateRangePicker({\n  startDate,\n  endDate,\n  onChange,\n  placeholder = \"Select date range...\",\n  label,\n  error,\n  required,\n  disabled,\n  className,\n}: ZohoDateRangePickerProps) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [selectedStart, setSelectedStart] = React.useState<Date | null>(startDate || null);\n  const [selectedEnd, setSelectedEnd] = React.useState<Date | null>(endDate || null);\n  const [hoveredDate, setHoveredDate] = React.useState<Date | null>(null);\n\n  const formatDateRange = () => {\n    if (startDate && endDate) {\n      return `${startDate.toLocaleDateString()} - ${endDate.toLocaleDateString()}`;\n    }\n    if (startDate) {\n      return `${startDate.toLocaleDateString()} - ...`;\n    }\n    return \"\";\n  };\n\n  const handleDateClick = (date: Date) => {\n    if (!selectedStart || (selectedStart && selectedEnd)) {\n      setSelectedStart(date);\n      setSelectedEnd(null);\n    } else if (selectedStart && !selectedEnd) {\n      if (date >= selectedStart) {\n        setSelectedEnd(date);\n        onChange?.(selectedStart, date);\n        setIsOpen(false);\n      } else {\n        setSelectedStart(date);\n        setSelectedEnd(null);\n      }\n    }\n  };\n\n  const isInRange = (date: Date) => {\n    if (!selectedStart) return false;\n    \n    const end = selectedEnd || hoveredDate;\n    if (!end) return false;\n    \n    return date >= selectedStart && date <= end;\n  };\n\n  const displayValue = formatDateRange() || placeholder;\n\n  return (\n    <div className=\"relative w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n\n      <button\n        type=\"button\"\n        onClick={() => !disabled && setIsOpen(!isOpen)}\n        disabled={disabled}\n        className={cn(\n          \"w-full px-4 py-2 text-left border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\",\n          error && \"border-red-500 focus:ring-red-500 focus:border-red-500\",\n          disabled && \"opacity-50 cursor-not-allowed\",\n          className\n        )}\n        data-testid=\"date-range-picker-trigger\"\n      >\n        <div className=\"flex items-center justify-between\">\n          <span className={cn(\n            startDate || endDate ? \"text-gray-900 dark:text-white\" : \"text-gray-500 dark:text-gray-400\"\n          )}>\n            {displayValue}\n          </span>\n          <Calendar className=\"w-4 h-4 text-gray-400\" />\n        </div>\n      </button>\n\n      {/* Calendar implementation would be similar to single date picker but with range selection logic */}\n\n      {error && (\n        <div className=\"mt-1 text-sm text-red-600 dark:text-red-400\">\n          {error}\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":14084},"client/src/components/ui/zoho-form.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { \n  Eye, \n  EyeOff, \n  Calendar,\n  ChevronDown,\n  X,\n  Plus,\n  Search,\n  Upload,\n  AlertCircle,\n  Check\n} from \"lucide-react\";\n\ninterface ZohoInputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  error?: string;\n  hint?: string;\n  required?: boolean;\n  icon?: React.ReactNode;\n  suffix?: React.ReactNode;\n  loading?: boolean;\n}\n\nexport function ZohoInput({\n  label,\n  error,\n  hint,\n  required,\n  icon,\n  suffix,\n  loading,\n  className,\n  ...props\n}: ZohoInputProps) {\n  const [showPassword, setShowPassword] = React.useState(false);\n  const isPassword = props.type === \"password\";\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      \n      <div className=\"relative\">\n        {icon && (\n          <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\">\n            {icon}\n          </div>\n        )}\n        \n        <input\n          {...props}\n          type={isPassword ? (showPassword ? \"text\" : \"password\") : props.type}\n          className={cn(\n            \"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\",\n            icon && \"pl-10\",\n            (isPassword || suffix) && \"pr-10\",\n            error && \"border-red-500 focus:ring-red-500 focus:border-red-500\",\n            loading && \"opacity-50 cursor-not-allowed\",\n            className\n          )}\n          disabled={loading || props.disabled}\n          data-testid={`input-${props.name || 'field'}`}\n        />\n        \n        {isPassword && (\n          <button\n            type=\"button\"\n            onClick={() => setShowPassword(!showPassword)}\n            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n            data-testid=\"toggle-password-visibility\"\n          >\n            {showPassword ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\n          </button>\n        )}\n        \n        {suffix && !isPassword && (\n          <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n            {suffix}\n          </div>\n        )}\n      </div>\n      \n      {(error || hint) && (\n        <div className=\"mt-1 text-sm\">\n          {error && (\n            <div className=\"text-red-600 dark:text-red-400 flex items-center gap-1\">\n              <AlertCircle className=\"w-3 h-3\" />\n              {error}\n            </div>\n          )}\n          {hint && !error && (\n            <div className=\"text-gray-500 dark:text-gray-400\">\n              {hint}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface ZohoSelectProps {\n  label?: string;\n  error?: string;\n  hint?: string;\n  required?: boolean;\n  options: Array<{ value: string; label: string; disabled?: boolean }>;\n  value?: string;\n  onChange?: (value: string) => void;\n  placeholder?: string;\n  loading?: boolean;\n  multiple?: boolean;\n  searchable?: boolean;\n  className?: string;\n}\n\nexport function ZohoSelect({\n  label,\n  error,\n  hint,\n  required,\n  options,\n  value,\n  onChange,\n  placeholder = \"Select option...\",\n  loading,\n  multiple,\n  searchable,\n  className,\n}: ZohoSelectProps) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [selectedValues, setSelectedValues] = React.useState<string[]>(\n    multiple ? (value ? value.split(\",\") : []) : []\n  );\n\n  const filteredOptions = React.useMemo(() => {\n    if (!searchable || !searchTerm) return options;\n    return options.filter(option =>\n      option.label.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  }, [options, searchTerm, searchable]);\n\n  const handleSelect = (optionValue: string) => {\n    if (multiple) {\n      const newValues = selectedValues.includes(optionValue)\n        ? selectedValues.filter(v => v !== optionValue)\n        : [...selectedValues, optionValue];\n      \n      setSelectedValues(newValues);\n      onChange?.(newValues.join(\",\"));\n    } else {\n      onChange?.(optionValue);\n      setIsOpen(false);\n    }\n  };\n\n  const displayValue = React.useMemo(() => {\n    if (multiple) {\n      return selectedValues.length > 0\n        ? `${selectedValues.length} selected`\n        : placeholder;\n    }\n    \n    const selected = options.find(opt => opt.value === value);\n    return selected?.label || placeholder;\n  }, [value, selectedValues, options, placeholder, multiple]);\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      \n      <div className=\"relative\">\n        <button\n          type=\"button\"\n          onClick={() => setIsOpen(!isOpen)}\n          disabled={loading}\n          className={cn(\n            \"w-full px-4 py-2 text-left border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\",\n            error && \"border-red-500 focus:ring-red-500 focus:border-red-500\",\n            loading && \"opacity-50 cursor-not-allowed\",\n            className\n          )}\n          data-testid={`select-${label?.toLowerCase().replace(/\\s+/g, '-') || 'field'}`}\n        >\n          <div className=\"flex items-center justify-between\">\n            <span className={cn(\n              value || selectedValues.length > 0 ? \"text-gray-900 dark:text-white\" : \"text-gray-500 dark:text-gray-400\"\n            )}>\n              {displayValue}\n            </span>\n            <ChevronDown className={cn(\"w-4 h-4 transition-transform duration-200\", isOpen && \"rotate-180\")} />\n          </div>\n        </button>\n        \n        {isOpen && (\n          <>\n            <div \n              className=\"fixed inset-0 z-10\" \n              onClick={() => setIsOpen(false)}\n            />\n            <div className=\"absolute z-20 w-full mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-md shadow-lg max-h-60 overflow-y-auto\">\n              {searchable && (\n                <div className=\"p-2 border-b border-gray-200 dark:border-gray-700\">\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search options...\"\n                      value={searchTerm}\n                      onChange={(e) => setSearchTerm(e.target.value)}\n                      className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      data-testid=\"select-search-input\"\n                    />\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"py-1\">\n                {filteredOptions.map((option) => (\n                  <button\n                    key={option.value}\n                    onClick={() => handleSelect(option.value)}\n                    disabled={option.disabled}\n                    className={cn(\n                      \"w-full px-4 py-2 text-left hover:bg-gray-100 dark:hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed\",\n                      (value === option.value || selectedValues.includes(option.value)) && \"bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400\"\n                    )}\n                    data-testid={`option-${option.value}`}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <span>{option.label}</span>\n                      {(value === option.value || selectedValues.includes(option.value)) && (\n                        <Check className=\"w-4 h-4\" />\n                      )}\n                    </div>\n                  </button>\n                ))}\n                \n                {filteredOptions.length === 0 && (\n                  <div className=\"px-4 py-2 text-gray-500 dark:text-gray-400 text-center\">\n                    No options found\n                  </div>\n                )}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n      \n      {(error || hint) && (\n        <div className=\"mt-1 text-sm\">\n          {error && (\n            <div className=\"text-red-600 dark:text-red-400 flex items-center gap-1\">\n              <AlertCircle className=\"w-3 h-3\" />\n              {error}\n            </div>\n          )}\n          {hint && !error && (\n            <div className=\"text-gray-500 dark:text-gray-400\">\n              {hint}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface ZohoTextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  label?: string;\n  error?: string;\n  hint?: string;\n  required?: boolean;\n  loading?: boolean;\n  autoResize?: boolean;\n}\n\nexport function ZohoTextarea({\n  label,\n  error,\n  hint,\n  required,\n  loading,\n  autoResize,\n  className,\n  ...props\n}: ZohoTextareaProps) {\n  const textareaRef = React.useRef<HTMLTextAreaElement>(null);\n\n  React.useEffect(() => {\n    if (autoResize && textareaRef.current) {\n      const textarea = textareaRef.current;\n      textarea.style.height = \"auto\";\n      textarea.style.height = `${textarea.scrollHeight}px`;\n    }\n  }, [props.value, autoResize]);\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      \n      <textarea\n        ref={textareaRef}\n        {...props}\n        className={cn(\n          \"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 resize-none\",\n          error && \"border-red-500 focus:ring-red-500 focus:border-red-500\",\n          loading && \"opacity-50 cursor-not-allowed\",\n          !autoResize && \"resize-y\",\n          className\n        )}\n        disabled={loading || props.disabled}\n        data-testid={`textarea-${props.name || 'field'}`}\n      />\n      \n      {(error || hint) && (\n        <div className=\"mt-1 text-sm\">\n          {error && (\n            <div className=\"text-red-600 dark:text-red-400 flex items-center gap-1\">\n              <AlertCircle className=\"w-3 h-3\" />\n              {error}\n            </div>\n          )}\n          {hint && !error && (\n            <div className=\"text-gray-500 dark:text-gray-400\">\n              {hint}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface ZohoFileUploadProps {\n  label?: string;\n  error?: string;\n  hint?: string;\n  required?: boolean;\n  accept?: string;\n  multiple?: boolean;\n  maxSize?: number; // in MB\n  onFileSelect?: (files: FileList | null) => void;\n  loading?: boolean;\n  className?: string;\n}\n\nexport function ZohoFileUpload({\n  label,\n  error,\n  hint,\n  required,\n  accept,\n  multiple,\n  maxSize,\n  onFileSelect,\n  loading,\n  className,\n}: ZohoFileUploadProps) {\n  const [dragActive, setDragActive] = React.useState(false);\n  const [selectedFiles, setSelectedFiles] = React.useState<File[]>([]);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const handleFiles = (files: FileList | null) => {\n    if (!files) return;\n    \n    const fileArray = Array.from(files);\n    \n    // Validate file size\n    if (maxSize) {\n      const oversizedFiles = fileArray.filter(file => file.size > maxSize * 1024 * 1024);\n      if (oversizedFiles.length > 0) {\n        alert(`Files must be smaller than ${maxSize}MB`);\n        return;\n      }\n    }\n    \n    setSelectedFiles(fileArray);\n    onFileSelect?.(files);\n  };\n\n  const handleDrag = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    \n    handleFiles(e.dataTransfer.files);\n  };\n\n  const removeFile = (index: number) => {\n    const newFiles = selectedFiles.filter((_, i) => i !== index);\n    setSelectedFiles(newFiles);\n    \n    // Create new FileList-like object\n    const dt = new DataTransfer();\n    newFiles.forEach(file => dt.items.add(file));\n    onFileSelect?.(dt.files);\n  };\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      \n      <div\n        onDragEnter={handleDrag}\n        onDragLeave={handleDrag}\n        onDragOver={handleDrag}\n        onDrop={handleDrop}\n        className={cn(\n          \"border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg p-6 text-center hover:border-gray-400 dark:hover:border-gray-500 transition-colors duration-200\",\n          dragActive && \"border-blue-500 bg-blue-50 dark:bg-blue-900/20\",\n          error && \"border-red-500\",\n          loading && \"opacity-50 cursor-not-allowed\",\n          className\n        )}\n        data-testid=\"file-upload-zone\"\n      >\n        <input\n          ref={inputRef}\n          type=\"file\"\n          accept={accept}\n          multiple={multiple}\n          onChange={(e) => handleFiles(e.target.files)}\n          className=\"hidden\"\n          disabled={loading}\n          data-testid=\"file-upload-input\"\n        />\n        \n        <Upload className=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\n        <div className=\"text-gray-600 dark:text-gray-400\">\n          <button\n            type=\"button\"\n            onClick={() => inputRef.current?.click()}\n            disabled={loading}\n            className=\"text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 font-medium\"\n            data-testid=\"file-upload-button\"\n          >\n            Click to upload\n          </button>\n          <span> or drag and drop</span>\n        </div>\n        {accept && (\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n            Accepted formats: {accept}\n          </div>\n        )}\n        {maxSize && (\n          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n            Max size: {maxSize}MB\n          </div>\n        )}\n      </div>\n      \n      {/* Selected Files */}\n      {selectedFiles.length > 0 && (\n        <div className=\"mt-3 space-y-2\">\n          {selectedFiles.map((file, index) => (\n            <div\n              key={index}\n              className=\"flex items-center justify-between p-2 bg-gray-50 dark:bg-gray-700 rounded-md\"\n              data-testid={`selected-file-${index}`}\n            >\n              <div className=\"flex items-center gap-2\">\n                <div className=\"text-sm text-gray-900 dark:text-white font-medium\">\n                  {file.name}\n                </div>\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  ({(file.size / 1024 / 1024).toFixed(2)} MB)\n                </div>\n              </div>\n              <button\n                type=\"button\"\n                onClick={() => removeFile(index)}\n                className=\"text-gray-400 hover:text-red-600 dark:hover:text-red-400\"\n                data-testid={`remove-file-${index}`}\n              >\n                <X className=\"w-4 h-4\" />\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n      \n      {(error || hint) && (\n        <div className=\"mt-1 text-sm\">\n          {error && (\n            <div className=\"text-red-600 dark:text-red-400 flex items-center gap-1\">\n              <AlertCircle className=\"w-3 h-3\" />\n              {error}\n            </div>\n          )}\n          {hint && !error && (\n            <div className=\"text-gray-500 dark:text-gray-400\">\n              {hint}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Form Layout Components\ninterface ZohoFormProps {\n  children: React.ReactNode;\n  onSubmit?: (e: React.FormEvent) => void;\n  className?: string;\n}\n\nexport function ZohoForm({ children, onSubmit, className }: ZohoFormProps) {\n  return (\n    <form \n      onSubmit={onSubmit}\n      className={cn(\"space-y-6\", className)}\n      data-testid=\"zoho-form\"\n    >\n      {children}\n    </form>\n  );\n}\n\ninterface ZohoFormRowProps {\n  children: React.ReactNode;\n  columns?: 1 | 2 | 3 | 4;\n  gap?: \"sm\" | \"md\" | \"lg\";\n  className?: string;\n}\n\nexport function ZohoFormRow({ \n  children, \n  columns = 1,\n  gap = \"md\",\n  className \n}: ZohoFormRowProps) {\n  const gridCols = {\n    1: \"grid-cols-1\",\n    2: \"grid-cols-1 md:grid-cols-2\",\n    3: \"grid-cols-1 md:grid-cols-3\",\n    4: \"grid-cols-1 md:grid-cols-4\",\n  };\n\n  const gridGap = {\n    sm: \"gap-4\",\n    md: \"gap-6\",\n    lg: \"gap-8\",\n  };\n\n  return (\n    <div \n      className={cn(\n        \"grid\",\n        gridCols[columns],\n        gridGap[gap],\n        className\n      )}\n      data-testid=\"form-row\"\n    >\n      {children}\n    </div>\n  );\n}","size_bytes":17927},"client/src/components/ui/zoho-loading.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { RefreshCw, Loader2 } from \"lucide-react\";\n\ninterface ZohoSpinnerProps {\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\";\n  variant?: \"default\" | \"primary\" | \"white\";\n  className?: string;\n}\n\nexport function ZohoSpinner({ \n  size = \"md\", \n  variant = \"default\",\n  className \n}: ZohoSpinnerProps) {\n  const sizeClasses = {\n    sm: \"w-4 h-4\",\n    md: \"w-6 h-6\",\n    lg: \"w-8 h-8\",\n    xl: \"w-12 h-12\",\n  };\n\n  const variantClasses = {\n    default: \"text-gray-600 dark:text-gray-400\",\n    primary: \"text-blue-600 dark:text-blue-400\",\n    white: \"text-white\",\n  };\n\n  return (\n    <Loader2 \n      className={cn(\n        \"animate-spin\",\n        sizeClasses[size],\n        variantClasses[variant],\n        className\n      )}\n      data-testid=\"loading-spinner\"\n    />\n  );\n}\n\ninterface ZohoLoadingOverlayProps {\n  isLoading: boolean;\n  message?: string;\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport function ZohoLoadingOverlay({\n  isLoading,\n  message = \"Loading...\",\n  children,\n  className,\n}: ZohoLoadingOverlayProps) {\n  return (\n    <div className={cn(\"relative\", className)}>\n      {children}\n      \n      {isLoading && (\n        <div className=\"absolute inset-0 bg-white bg-opacity-75 dark:bg-gray-900 dark:bg-opacity-75 flex items-center justify-center z-10\">\n          <div className=\"flex flex-col items-center gap-3\">\n            <ZohoSpinner size=\"lg\" variant=\"primary\" />\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              {message}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Skeleton Components\ninterface ZohoSkeletonProps {\n  className?: string;\n  animate?: boolean;\n}\n\nexport function ZohoSkeleton({ \n  className, \n  animate = true \n}: ZohoSkeletonProps) {\n  return (\n    <div\n      className={cn(\n        \"bg-gray-300 dark:bg-gray-600 rounded\",\n        animate && \"animate-pulse\",\n        className\n      )}\n      data-testid=\"skeleton\"\n    />\n  );\n}\n\nexport function ZohoSkeletonText({ \n  lines = 3,\n  className \n}: { \n  lines?: number;\n  className?: string;\n}) {\n  return (\n    <div className={cn(\"space-y-2\", className)}>\n      {Array.from({ length: lines }).map((_, index) => (\n        <ZohoSkeleton\n          key={index}\n          className={cn(\n            \"h-4\",\n            index === lines - 1 ? \"w-3/4\" : \"w-full\"\n          )}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport function ZohoSkeletonCard({ className }: { className?: string }) {\n  return (\n    <div className={cn(\"p-6 border border-gray-200 dark:border-gray-700 rounded-lg\", className)}>\n      <div className=\"flex items-center gap-4 mb-4\">\n        <ZohoSkeleton className=\"w-10 h-10 rounded-full\" />\n        <div className=\"flex-1\">\n          <ZohoSkeleton className=\"h-4 w-1/2 mb-2\" />\n          <ZohoSkeleton className=\"h-3 w-1/4\" />\n        </div>\n      </div>\n      <ZohoSkeletonText lines={3} />\n    </div>\n  );\n}\n\nexport function ZohoSkeletonTable({ \n  rows = 5,\n  columns = 4,\n  className \n}: { \n  rows?: number;\n  columns?: number;\n  className?: string;\n}) {\n  return (\n    <div className={cn(\"border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden\", className)}>\n      {/* Header */}\n      <div className=\"bg-gray-50 dark:bg-gray-700 p-4 border-b border-gray-200 dark:border-gray-600\">\n        <div className=\"grid gap-4\" style={{ gridTemplateColumns: `repeat(${columns}, 1fr)` }}>\n          {Array.from({ length: columns }).map((_, index) => (\n            <ZohoSkeleton key={index} className=\"h-4 w-full\" />\n          ))}\n        </div>\n      </div>\n      \n      {/* Rows */}\n      {Array.from({ length: rows }).map((_, rowIndex) => (\n        <div key={rowIndex} className=\"p-4 border-b border-gray-200 dark:border-gray-600 last:border-b-0\">\n          <div className=\"grid gap-4\" style={{ gridTemplateColumns: `repeat(${columns}, 1fr)` }}>\n            {Array.from({ length: columns }).map((_, colIndex) => (\n              <ZohoSkeleton key={colIndex} className=\"h-4 w-full\" />\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n// Loading Button\ninterface ZohoLoadingButtonProps {\n  isLoading: boolean;\n  loadingText?: string;\n  children: React.ReactNode;\n  onClick?: () => void;\n  disabled?: boolean;\n  variant?: \"primary\" | \"secondary\" | \"outline\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  className?: string;\n}\n\nexport function ZohoLoadingButton({\n  isLoading,\n  loadingText = \"Loading...\",\n  children,\n  onClick,\n  disabled,\n  variant = \"primary\",\n  size = \"md\",\n  className,\n}: ZohoLoadingButtonProps) {\n  const baseClasses = \"relative inline-flex items-center justify-center font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\";\n  \n  const variantClasses = {\n    primary: \"bg-blue-600 hover:bg-blue-700 text-white border border-blue-600 focus:ring-blue-500 shadow-sm\",\n    secondary: \"bg-gray-100 hover:bg-gray-200 text-gray-900 border border-gray-300 focus:ring-gray-500 dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-white dark:border-gray-600\",\n    outline: \"bg-transparent hover:bg-gray-50 text-gray-700 border border-gray-300 focus:ring-blue-500 dark:hover:bg-gray-700 dark:text-gray-300 dark:border-gray-600\",\n  };\n\n  const sizeClasses = {\n    sm: \"px-3 py-1.5 text-xs rounded-md\",\n    md: \"px-4 py-2 text-sm rounded-md\",\n    lg: \"px-6 py-3 text-base rounded-lg\",\n  };\n\n  return (\n    <button\n      onClick={onClick}\n      disabled={disabled || isLoading}\n      className={cn(\n        baseClasses,\n        variantClasses[variant],\n        sizeClasses[size],\n        isLoading && \"cursor-wait\",\n        className\n      )}\n      data-testid=\"loading-button\"\n    >\n      {isLoading && (\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <ZohoSpinner \n            size={size === \"lg\" ? \"md\" : \"sm\"} \n            variant={variant === \"primary\" ? \"white\" : \"primary\"} \n          />\n        </div>\n      )}\n      \n      <div className={cn(\"flex items-center gap-2\", isLoading && \"opacity-0\")}>\n        {isLoading ? loadingText : children}\n      </div>\n    </button>\n  );\n}\n\n// Page Loading\ninterface ZohoPageLoadingProps {\n  message?: string;\n  showLogo?: boolean;\n  className?: string;\n}\n\nexport function ZohoPageLoading({\n  message = \"Loading application...\",\n  showLogo = true,\n  className,\n}: ZohoPageLoadingProps) {\n  return (\n    <div className={cn(\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\", className)}>\n      <div className=\"flex flex-col items-center gap-6\">\n        {showLogo && (\n          <div className=\"text-3xl font-bold text-blue-600 dark:text-blue-400\">\n            Aura\n          </div>\n        )}\n        \n        <div className=\"flex flex-col items-center gap-3\">\n          <ZohoSpinner size=\"lg\" variant=\"primary\" />\n          <div className=\"text-gray-600 dark:text-gray-400\">\n            {message}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Progressive Loading\ninterface ZohoProgressiveLoadingProps {\n  steps: Array<{\n    id: string;\n    title: string;\n    completed: boolean;\n  }>;\n  currentStep?: string;\n  className?: string;\n}\n\nexport function ZohoProgressiveLoading({\n  steps,\n  currentStep,\n  className,\n}: ZohoProgressiveLoadingProps) {\n  return (\n    <div className={cn(\"space-y-4\", className)}>\n      {steps.map((step) => {\n        const isActive = step.id === currentStep;\n        const isCompleted = step.completed;\n        \n        return (\n          <div\n            key={step.id}\n            className=\"flex items-center gap-3\"\n            data-testid={`loading-step-${step.id}`}\n          >\n            <div className={cn(\n              \"w-6 h-6 rounded-full flex items-center justify-center border-2\",\n              isCompleted && \"bg-green-600 border-green-600 text-white\",\n              isActive && !isCompleted && \"border-blue-600 text-blue-600\",\n              !isActive && !isCompleted && \"border-gray-300 text-gray-300\"\n            )}>\n              {isCompleted ? (\n                <span className=\"text-xs\">✓</span>\n              ) : isActive ? (\n                <ZohoSpinner size=\"sm\" variant=\"primary\" />\n              ) : (\n                <span className=\"w-2 h-2 bg-current rounded-full\" />\n              )}\n            </div>\n            \n            <div className={cn(\n              \"text-sm\",\n              isCompleted && \"text-green-600 dark:text-green-400\",\n              isActive && !isCompleted && \"text-blue-600 dark:text-blue-400 font-medium\",\n              !isActive && !isCompleted && \"text-gray-500 dark:text-gray-400\"\n            )}>\n              {step.title}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}","size_bytes":8762},"client/src/components/ui/zoho-modal.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { X, AlertTriangle, CheckCircle, Info, AlertCircle } from \"lucide-react\";\nimport { ZohoButton } from \"./zoho-button\";\n\ninterface ZohoModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\" | \"full\";\n  children: React.ReactNode;\n  footer?: React.ReactNode;\n  closeOnBackdrop?: boolean;\n  className?: string;\n}\n\nexport function ZohoModal({\n  isOpen,\n  onClose,\n  title,\n  size = \"md\",\n  children,\n  footer,\n  closeOnBackdrop = true,\n  className,\n}: ZohoModalProps) {\n  React.useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n    \n    return () => {\n      document.body.style.overflow = \"unset\";\n    };\n  }, [isOpen]);\n\n  React.useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === \"Escape\" && isOpen) {\n        onClose();\n      }\n    };\n    \n    document.addEventListener(\"keydown\", handleEscape);\n    return () => document.removeEventListener(\"keydown\", handleEscape);\n  }, [isOpen, onClose]);\n\n  if (!isOpen) return null;\n\n  const sizeClasses = {\n    sm: \"max-w-md\",\n    md: \"max-w-lg\",\n    lg: \"max-w-2xl\",\n    xl: \"max-w-4xl\",\n    full: \"max-w-full mx-4\",\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\n      {/* Backdrop */}\n      <div\n        className=\"absolute inset-0 bg-black bg-opacity-50 backdrop-blur-sm\"\n        onClick={closeOnBackdrop ? onClose : undefined}\n        data-testid=\"modal-backdrop\"\n      />\n      \n      {/* Modal */}\n      <div\n        className={cn(\n          \"relative w-full bg-white dark:bg-gray-800 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 max-h-[90vh] overflow-hidden\",\n          sizeClasses[size],\n          className\n        )}\n        data-testid=\"modal-container\"\n      >\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\n          {title && (\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n              {title}\n            </h3>\n          )}\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n            data-testid=\"modal-close-button\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n        </div>\n        \n        {/* Content */}\n        <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-120px)]\">\n          {children}\n        </div>\n        \n        {/* Footer */}\n        {footer && (\n          <div className=\"flex items-center justify-end gap-3 p-6 bg-gray-50 dark:bg-gray-700 border-t border-gray-200 dark:border-gray-600\">\n            {footer}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Confirmation Dialog\ninterface ZohoConfirmDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: () => void;\n  title: string;\n  message: string;\n  type?: \"default\" | \"warning\" | \"danger\";\n  confirmText?: string;\n  cancelText?: string;\n  loading?: boolean;\n}\n\nexport function ZohoConfirmDialog({\n  isOpen,\n  onClose,\n  onConfirm,\n  title,\n  message,\n  type = \"default\",\n  confirmText = \"Confirm\",\n  cancelText = \"Cancel\",\n  loading = false,\n}: ZohoConfirmDialogProps) {\n  const iconMap = {\n    default: <Info className=\"w-6 h-6 text-blue-600\" />,\n    warning: <AlertTriangle className=\"w-6 h-6 text-yellow-600\" />,\n    danger: <AlertCircle className=\"w-6 h-6 text-red-600\" />,\n  };\n\n  const buttonVariant = {\n    default: \"primary\" as const,\n    warning: \"primary\" as const,\n    danger: \"danger\" as const,\n  };\n\n  return (\n    <ZohoModal\n      isOpen={isOpen}\n      onClose={onClose}\n      size=\"sm\"\n      closeOnBackdrop={!loading}\n      footer={\n        <>\n          <ZohoButton\n            variant=\"outline\"\n            onClick={onClose}\n            disabled={loading}\n            data-testid=\"confirm-dialog-cancel\"\n          >\n            {cancelText}\n          </ZohoButton>\n          <ZohoButton\n            variant={buttonVariant[type]}\n            onClick={onConfirm}\n            loading={loading}\n            data-testid=\"confirm-dialog-confirm\"\n          >\n            {confirmText}\n          </ZohoButton>\n        </>\n      }\n    >\n      <div className=\"flex items-start gap-4\" data-testid=\"confirm-dialog-content\">\n        {iconMap[type]}\n        <div>\n          <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n            {title}\n          </h4>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            {message}\n          </p>\n        </div>\n      </div>\n    </ZohoModal>\n  );\n}\n\n// Alert Dialog\ninterface ZohoAlertDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  message: string;\n  type?: \"success\" | \"error\" | \"warning\" | \"info\";\n  buttonText?: string;\n}\n\nexport function ZohoAlertDialog({\n  isOpen,\n  onClose,\n  title,\n  message,\n  type = \"info\",\n  buttonText = \"OK\",\n}: ZohoAlertDialogProps) {\n  const iconMap = {\n    success: <CheckCircle className=\"w-6 h-6 text-green-600\" />,\n    error: <AlertCircle className=\"w-6 h-6 text-red-600\" />,\n    warning: <AlertTriangle className=\"w-6 h-6 text-yellow-600\" />,\n    info: <Info className=\"w-6 h-6 text-blue-600\" />,\n  };\n\n  return (\n    <ZohoModal\n      isOpen={isOpen}\n      onClose={onClose}\n      size=\"sm\"\n      footer={\n        <ZohoButton\n          variant=\"primary\"\n          onClick={onClose}\n          data-testid=\"alert-dialog-ok\"\n        >\n          {buttonText}\n        </ZohoButton>\n      }\n    >\n      <div className=\"flex items-start gap-4\" data-testid=\"alert-dialog-content\">\n        {iconMap[type]}\n        <div>\n          <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n            {title}\n          </h4>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            {message}\n          </p>\n        </div>\n      </div>\n    </ZohoModal>\n  );\n}\n\n// Drawer Component\ninterface ZohoDrawerProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  position?: \"left\" | \"right\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  children: React.ReactNode;\n  footer?: React.ReactNode;\n  className?: string;\n}\n\nexport function ZohoDrawer({\n  isOpen,\n  onClose,\n  title,\n  position = \"right\",\n  size = \"md\",\n  children,\n  footer,\n  className,\n}: ZohoDrawerProps) {\n  React.useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n    \n    return () => {\n      document.body.style.overflow = \"unset\";\n    };\n  }, [isOpen]);\n\n  React.useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === \"Escape\" && isOpen) {\n        onClose();\n      }\n    };\n    \n    document.addEventListener(\"keydown\", handleEscape);\n    return () => document.removeEventListener(\"keydown\", handleEscape);\n  }, [isOpen, onClose]);\n\n  const sizeClasses = {\n    sm: \"w-80\",\n    md: \"w-96\",\n    lg: \"w-[500px]\",\n  };\n\n  const positionClasses = {\n    left: {\n      container: \"justify-start\",\n      panel: \"animate-slide-in-left\",\n      closed: \"-translate-x-full\",\n    },\n    right: {\n      container: \"justify-end\",\n      panel: \"animate-slide-in-right\",\n      closed: \"translate-x-full\",\n    },\n  };\n\n  return (\n    <div\n      className={cn(\n        \"fixed inset-0 z-50 flex\",\n        positionClasses[position].container,\n        isOpen ? \"visible\" : \"invisible\"\n      )}\n    >\n      {/* Backdrop */}\n      <div\n        className={cn(\n          \"absolute inset-0 bg-black transition-opacity duration-300\",\n          isOpen ? \"bg-opacity-50\" : \"bg-opacity-0\"\n        )}\n        onClick={onClose}\n        data-testid=\"drawer-backdrop\"\n      />\n      \n      {/* Drawer */}\n      <div\n        className={cn(\n          \"relative h-full bg-white dark:bg-gray-800 shadow-xl border-l border-gray-200 dark:border-gray-700 flex flex-col transition-transform duration-300\",\n          sizeClasses[size],\n          isOpen ? \"translate-x-0\" : positionClasses[position].closed,\n          className\n        )}\n        data-testid=\"drawer-container\"\n      >\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\n          {title && (\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n              {title}\n            </h3>\n          )}\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n            data-testid=\"drawer-close-button\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n        </div>\n        \n        {/* Content */}\n        <div className=\"flex-1 p-6 overflow-y-auto\">\n          {children}\n        </div>\n        \n        {/* Footer */}\n        {footer && (\n          <div className=\"flex items-center justify-end gap-3 p-6 bg-gray-50 dark:bg-gray-700 border-t border-gray-200 dark:border-gray-600\">\n            {footer}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":9216},"client/src/components/ui/zoho-notification.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { X, CheckCircle, AlertCircle, AlertTriangle, Info, Bell } from \"lucide-react\";\n\ninterface ZohoToastProps {\n  id: string;\n  type: \"success\" | \"error\" | \"warning\" | \"info\";\n  title: string;\n  message?: string;\n  duration?: number;\n  onClose: (id: string) => void;\n  action?: {\n    label: string;\n    onClick: () => void;\n  };\n}\n\nexport function ZohoToast({\n  id,\n  type,\n  title,\n  message,\n  duration = 5000,\n  onClose,\n  action,\n}: ZohoToastProps) {\n  const [isVisible, setIsVisible] = React.useState(true);\n  const [isExiting, setIsExiting] = React.useState(false);\n\n  React.useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        setIsExiting(true);\n        setTimeout(() => onClose(id), 300);\n      }, duration);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [duration, id, onClose]);\n\n  const iconMap = {\n    success: <CheckCircle className=\"w-5 h-5 text-green-600\" />,\n    error: <AlertCircle className=\"w-5 h-5 text-red-600\" />,\n    warning: <AlertTriangle className=\"w-5 h-5 text-yellow-600\" />,\n    info: <Info className=\"w-5 h-5 text-blue-600\" />,\n  };\n\n  const colorClasses = {\n    success: \"border-green-200 bg-green-50 dark:border-green-800 dark:bg-green-900/20\",\n    error: \"border-red-200 bg-red-50 dark:border-red-800 dark:bg-red-900/20\",\n    warning: \"border-yellow-200 bg-yellow-50 dark:border-yellow-800 dark:bg-yellow-900/20\",\n    info: \"border-blue-200 bg-blue-50 dark:border-blue-800 dark:bg-blue-900/20\",\n  };\n\n  const handleClose = () => {\n    setIsExiting(true);\n    setTimeout(() => onClose(id), 300);\n  };\n\n  return (\n    <div\n      className={cn(\n        \"w-full max-w-sm border rounded-lg shadow-lg p-4 transition-all duration-300 transform\",\n        colorClasses[type],\n        isExiting ? \"translate-x-full opacity-0\" : \"translate-x-0 opacity-100\"\n      )}\n      data-testid={`toast-${type}-${id}`}\n    >\n      <div className=\"flex items-start gap-3\">\n        {iconMap[type]}\n        \n        <div className=\"flex-1 min-w-0\">\n          <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n            {title}\n          </div>\n          {message && (\n            <div className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n              {message}\n            </div>\n          )}\n          {action && (\n            <div className=\"mt-2\">\n              <button\n                onClick={action.onClick}\n                className=\"text-sm font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300\"\n                data-testid={`toast-action-${id}`}\n              >\n                {action.label}\n              </button>\n            </div>\n          )}\n        </div>\n        \n        <button\n          onClick={handleClose}\n          className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n          data-testid={`toast-close-${id}`}\n        >\n          <X className=\"w-4 h-4\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n\n// Toast Container\ninterface ZohoToastContainerProps {\n  toasts: ZohoToastProps[];\n  position?: \"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\" | \"top-center\" | \"bottom-center\";\n}\n\nexport function ZohoToastContainer({ \n  toasts, \n  position = \"top-right\" \n}: ZohoToastContainerProps) {\n  const positionClasses = {\n    \"top-right\": \"top-4 right-4\",\n    \"top-left\": \"top-4 left-4\",\n    \"bottom-right\": \"bottom-4 right-4\",\n    \"bottom-left\": \"bottom-4 left-4\",\n    \"top-center\": \"top-4 left-1/2 transform -translate-x-1/2\",\n    \"bottom-center\": \"bottom-4 left-1/2 transform -translate-x-1/2\",\n  };\n\n  return (\n    <div\n      className={cn(\n        \"fixed z-50 space-y-2\",\n        positionClasses[position]\n      )}\n      data-testid=\"toast-container\"\n    >\n      {toasts.map((toast) => (\n        <ZohoToast key={toast.id} {...toast} />\n      ))}\n    </div>\n  );\n}\n\n// Banner Notification\ninterface ZohoBannerProps {\n  type: \"info\" | \"warning\" | \"error\" | \"success\";\n  title?: string;\n  message: string;\n  action?: {\n    label: string;\n    onClick: () => void;\n  };\n  dismissible?: boolean;\n  onDismiss?: () => void;\n  className?: string;\n}\n\nexport function ZohoBanner({\n  type,\n  title,\n  message,\n  action,\n  dismissible = true,\n  onDismiss,\n  className,\n}: ZohoBannerProps) {\n  const [isVisible, setIsVisible] = React.useState(true);\n\n  const iconMap = {\n    success: <CheckCircle className=\"w-5 h-5 text-green-600\" />,\n    error: <AlertCircle className=\"w-5 h-5 text-red-600\" />,\n    warning: <AlertTriangle className=\"w-5 h-5 text-yellow-600\" />,\n    info: <Info className=\"w-5 h-5 text-blue-600\" />,\n  };\n\n  const colorClasses = {\n    success: \"border-green-200 bg-green-50 dark:border-green-800 dark:bg-green-900/20\",\n    error: \"border-red-200 bg-red-50 dark:border-red-800 dark:bg-red-900/20\",\n    warning: \"border-yellow-200 bg-yellow-50 dark:border-yellow-800 dark:bg-yellow-900/20\",\n    info: \"border-blue-200 bg-blue-50 dark:border-blue-800 dark:bg-blue-900/20\",\n  };\n\n  const handleDismiss = () => {\n    setIsVisible(false);\n    onDismiss?.();\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <div\n      className={cn(\n        \"border rounded-lg p-4\",\n        colorClasses[type],\n        className\n      )}\n      data-testid={`banner-${type}`}\n    >\n      <div className=\"flex items-start gap-3\">\n        {iconMap[type]}\n        \n        <div className=\"flex-1 min-w-0\">\n          {title && (\n            <div className=\"text-sm font-medium text-gray-900 dark:text-white mb-1\">\n              {title}\n            </div>\n          )}\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n            {message}\n          </div>\n          {action && (\n            <div className=\"mt-2\">\n              <button\n                onClick={action.onClick}\n                className=\"text-sm font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300\"\n                data-testid=\"banner-action\"\n              >\n                {action.label}\n              </button>\n            </div>\n          )}\n        </div>\n        \n        {dismissible && (\n          <button\n            onClick={handleDismiss}\n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n            data-testid=\"banner-dismiss\"\n          >\n            <X className=\"w-4 h-4\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Notification Bell with Count\ninterface ZohoNotificationBellProps {\n  count?: number;\n  onClick?: () => void;\n  className?: string;\n}\n\nexport function ZohoNotificationBell({ \n  count = 0, \n  onClick,\n  className \n}: ZohoNotificationBellProps) {\n  return (\n    <button\n      onClick={onClick}\n      className={cn(\n        \"relative p-2 text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white transition-colors duration-200\",\n        className\n      )}\n      data-testid=\"notification-bell\"\n    >\n      <Bell className=\"w-5 h-5\" />\n      {count > 0 && (\n        <span className=\"absolute -top-1 -right-1 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white bg-red-600 rounded-full\">\n          {count > 99 ? \"99+\" : count}\n        </span>\n      )}\n    </button>\n  );\n}\n\n// Progress Banner\ninterface ZohoProgressBannerProps {\n  title: string;\n  message?: string;\n  progress: number; // 0-100\n  showPercentage?: boolean;\n  onCancel?: () => void;\n  className?: string;\n}\n\nexport function ZohoProgressBanner({\n  title,\n  message,\n  progress,\n  showPercentage = true,\n  onCancel,\n  className,\n}: ZohoProgressBannerProps) {\n  return (\n    <div\n      className={cn(\n        \"border border-blue-200 bg-blue-50 dark:border-blue-800 dark:bg-blue-900/20 rounded-lg p-4\",\n        className\n      )}\n      data-testid=\"progress-banner\"\n    >\n      <div className=\"flex items-start justify-between gap-3\">\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n              {title}\n            </div>\n            {showPercentage && (\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                {Math.round(progress)}%\n              </div>\n            )}\n          </div>\n          \n          {message && (\n            <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-3\">\n              {message}\n            </div>\n          )}\n          \n          <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n            <div\n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${Math.min(100, Math.max(0, progress))}%` }}\n            />\n          </div>\n        </div>\n        \n        {onCancel && (\n          <button\n            onClick={onCancel}\n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n            data-testid=\"progress-banner-cancel\"\n          >\n            <X className=\"w-4 h-4\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":9210},"client/src/components/ui/zoho-onboarding.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { X, ChevronLeft, ChevronRight, Play, Check, Star, Lightbulb } from \"lucide-react\";\nimport { ZohoButton } from \"./zoho-button\";\n\ninterface ZohoWelcomeModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onStartTour: () => void;\n  appName: string;\n  features: Array<{\n    title: string;\n    description: string;\n    icon: React.ReactNode;\n  }>;\n  className?: string;\n}\n\nexport function ZohoWelcomeModal({\n  isOpen,\n  onClose,\n  onStartTour,\n  appName,\n  features,\n  className,\n}: ZohoWelcomeModalProps) {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\n      <div\n        className=\"absolute inset-0 bg-black bg-opacity-50 backdrop-blur-sm\"\n        onClick={onClose}\n      />\n      \n      <div\n        className={cn(\n          \"relative w-full max-w-2xl bg-white dark:bg-gray-800 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 max-h-[90vh] overflow-hidden\",\n          className\n        )}\n        data-testid=\"welcome-modal\"\n      >\n        {/* Header */}\n        <div className=\"relative p-8 bg-gradient-to-r from-blue-600 to-purple-600 text-white\">\n          <button\n            onClick={onClose}\n            className=\"absolute top-4 right-4 text-white hover:text-gray-200 transition-colors duration-200\"\n            data-testid=\"welcome-modal-close\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n          \n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold mb-2\">\n              Welcome to {appName}!\n            </div>\n            <div className=\"text-lg opacity-90\">\n              Let's get you started with the powerful features\n            </div>\n          </div>\n        </div>\n        \n        {/* Content */}\n        <div className=\"p-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n            {features.map((feature, index) => (\n              <div\n                key={index}\n                className=\"flex items-start gap-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\"\n                data-testid={`welcome-feature-${index}`}\n              >\n                <div className=\"text-blue-600 dark:text-blue-400\">\n                  {feature.icon}\n                </div>\n                <div>\n                  <div className=\"font-medium text-gray-900 dark:text-white mb-1\">\n                    {feature.title}\n                  </div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    {feature.description}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          <div className=\"flex items-center justify-between\">\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Take a quick tour to learn the basics\n            </div>\n            <div className=\"flex gap-3\">\n              <ZohoButton\n                variant=\"outline\"\n                onClick={onClose}\n                data-testid=\"welcome-skip-button\"\n              >\n                Skip for now\n              </ZohoButton>\n              <ZohoButton\n                variant=\"primary\"\n                onClick={onStartTour}\n                data-testid=\"welcome-start-tour-button\"\n              >\n                Start Tour\n              </ZohoButton>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface TourStep {\n  id: string;\n  title: string;\n  content: string;\n  target: string; // CSS selector\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\";\n  highlight?: boolean;\n}\n\ninterface ZohoProductTourProps {\n  isActive: boolean;\n  steps: TourStep[];\n  currentStep: number;\n  onNext: () => void;\n  onPrevious: () => void;\n  onComplete: () => void;\n  onSkip: () => void;\n  className?: string;\n}\n\nexport function ZohoProductTour({\n  isActive,\n  steps,\n  currentStep,\n  onNext,\n  onPrevious,\n  onComplete,\n  onSkip,\n  className,\n}: ZohoProductTourProps) {\n  const [targetElement, setTargetElement] = React.useState<HTMLElement | null>(null);\n  const [tooltipPosition, setTooltipPosition] = React.useState({ top: 0, left: 0 });\n\n  const currentStepData = steps[currentStep];\n  const isLastStep = currentStep === steps.length - 1;\n  const isFirstStep = currentStep === 0;\n\n  React.useEffect(() => {\n    if (!isActive || !currentStepData) return;\n\n    const element = document.querySelector(currentStepData.target) as HTMLElement;\n    if (element) {\n      setTargetElement(element);\n      \n      // Scroll element into view\n      element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      \n      // Calculate tooltip position\n      const rect = element.getBoundingClientRect();\n      const position = currentStepData.position || 'bottom';\n      \n      let top = 0;\n      let left = 0;\n      \n      switch (position) {\n        case 'top':\n          top = rect.top - 10;\n          left = rect.left + rect.width / 2;\n          break;\n        case 'bottom':\n          top = rect.bottom + 10;\n          left = rect.left + rect.width / 2;\n          break;\n        case 'left':\n          top = rect.top + rect.height / 2;\n          left = rect.left - 10;\n          break;\n        case 'right':\n          top = rect.top + rect.height / 2;\n          left = rect.right + 10;\n          break;\n      }\n      \n      setTooltipPosition({ top, left });\n      \n      // Add highlight if needed\n      if (currentStepData.highlight) {\n        element.classList.add('tour-highlight');\n      }\n    }\n\n    return () => {\n      // Remove highlight\n      if (element && currentStepData.highlight) {\n        element.classList.remove('tour-highlight');\n      }\n    };\n  }, [isActive, currentStep, currentStepData]);\n\n  if (!isActive || !currentStepData || !targetElement) return null;\n\n  return (\n    <>\n      {/* Overlay */}\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 z-40\" />\n      \n      {/* Tooltip */}\n      <div\n        className={cn(\n          \"fixed z-50 w-80 bg-white dark:bg-gray-800 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 p-6 transform -translate-x-1/2 -translate-y-1/2\",\n          className\n        )}\n        style={{\n          top: tooltipPosition.top,\n          left: tooltipPosition.left,\n        }}\n        data-testid=\"product-tour-tooltip\"\n      >\n        {/* Header */}\n        <div className=\"flex items-start justify-between mb-4\">\n          <div className=\"flex items-center gap-2\">\n            <Lightbulb className=\"w-5 h-5 text-yellow-500\" />\n            <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n              Step {currentStep + 1} of {steps.length}\n            </span>\n          </div>\n          <button\n            onClick={onSkip}\n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n            data-testid=\"tour-skip-button\"\n          >\n            <X className=\"w-4 h-4\" />\n          </button>\n        </div>\n        \n        {/* Content */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n            {currentStepData.title}\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            {currentStepData.content}\n          </p>\n        </div>\n        \n        {/* Progress */}\n        <div className=\"mb-4\">\n          <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400 mb-2\">\n            <span>Progress</span>\n            <span>{Math.round(((currentStep + 1) / steps.length) * 100)}%</span>\n          </div>\n          <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n            <div\n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${((currentStep + 1) / steps.length) * 100}%` }}\n            />\n          </div>\n        </div>\n        \n        {/* Actions */}\n        <div className=\"flex items-center justify-between\">\n          <ZohoButton\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={onPrevious}\n            disabled={isFirstStep}\n            data-testid=\"tour-previous-button\"\n          >\n            Previous\n          </ZohoButton>\n          \n          <div className=\"flex gap-2\">\n            <ZohoButton\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={onSkip}\n              data-testid=\"tour-skip-all-button\"\n            >\n              Skip Tour\n            </ZohoButton>\n            \n            {isLastStep ? (\n              <ZohoButton\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={onComplete}\n                data-testid=\"tour-complete-button\"\n              >\n                Complete\n              </ZohoButton>\n            ) : (\n              <ZohoButton\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={onNext}\n                data-testid=\"tour-next-button\"\n              >\n                Next\n              </ZohoButton>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n// Empty State Component\ninterface ZohoEmptyStateProps {\n  icon?: React.ReactNode;\n  title: string;\n  description: string;\n  action?: {\n    label: string;\n    onClick: () => void;\n    variant?: \"primary\" | \"outline\";\n  };\n  illustration?: string;\n  className?: string;\n}\n\nexport function ZohoEmptyState({\n  icon,\n  title,\n  description,\n  action,\n  illustration,\n  className,\n}: ZohoEmptyStateProps) {\n  return (\n    <div\n      className={cn(\n        \"flex flex-col items-center justify-center text-center py-12 px-6\",\n        className\n      )}\n      data-testid=\"empty-state\"\n    >\n      {illustration ? (\n        <img\n          src={illustration}\n          alt=\"Empty state\"\n          className=\"w-48 h-48 mb-6 opacity-75\"\n        />\n      ) : icon ? (\n        <div className=\"text-gray-400 dark:text-gray-500 mb-6\">\n          {icon}\n        </div>\n      ) : (\n        <div className=\"w-16 h-16 bg-gray-200 dark:bg-gray-700 rounded-full flex items-center justify-center mb-6\">\n          <Star className=\"w-8 h-8 text-gray-400 dark:text-gray-500\" />\n        </div>\n      )}\n      \n      <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\n        {title}\n      </h3>\n      \n      <p className=\"text-gray-600 dark:text-gray-400 mb-6 max-w-md\">\n        {description}\n      </p>\n      \n      {action && (\n        <ZohoButton\n          variant={action.variant || \"primary\"}\n          onClick={action.onClick}\n          data-testid=\"empty-state-action\"\n        >\n          {action.label}\n        </ZohoButton>\n      )}\n    </div>\n  );\n}\n\n// First Use Prompt\ninterface ZohoFirstUsePromptProps {\n  isVisible: boolean;\n  onDismiss: () => void;\n  title: string;\n  message: string;\n  actions: Array<{\n    label: string;\n    onClick: () => void;\n    variant?: \"primary\" | \"outline\";\n    icon?: string;\n  }>;\n  className?: string;\n}\n\nexport function ZohoFirstUsePrompt({\n  isVisible,\n  onDismiss,\n  title,\n  message,\n  actions,\n  className,\n}: ZohoFirstUsePromptProps) {\n  if (!isVisible) return null;\n\n  return (\n    <div\n      className={cn(\n        \"fixed bottom-4 right-4 w-80 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 p-6 z-40\",\n        className\n      )}\n      data-testid=\"first-use-prompt\"\n    >\n      <div className=\"flex justify-between items-start mb-4\">\n        <div className=\"flex items-center gap-2\">\n          <Lightbulb className=\"w-5 h-5 text-yellow-500\" />\n          <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n            Getting Started\n          </span>\n        </div>\n        <button\n          onClick={onDismiss}\n          className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n          data-testid=\"first-use-dismiss\"\n        >\n          <X className=\"w-4 h-4\" />\n        </button>\n      </div>\n      \n      <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n        {title}\n      </h4>\n      \n      <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n        {message}\n      </p>\n      \n      <div className=\"flex flex-col gap-2\">\n        {actions.map((action, index) => (\n          <ZohoButton\n            key={index}\n            variant={action.variant || \"outline\"}\n            size=\"sm\"\n            onClick={action.onClick}\n            fullWidth\n            data-testid={`first-use-action-${index}`}\n          >\n            {action.label}\n          </ZohoButton>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// Progress Indicator for Onboarding\ninterface ZohoOnboardingProgressProps {\n  steps: Array<{\n    id: string;\n    title: string;\n    completed: boolean;\n  }>;\n  currentStep?: string;\n  className?: string;\n}\n\nexport function ZohoOnboardingProgress({\n  steps,\n  currentStep,\n  className,\n}: ZohoOnboardingProgressProps) {\n  return (\n    <div className={cn(\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6\", className)}>\n      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n        Setup Progress\n      </h3>\n      \n      <div className=\"space-y-4\">\n        {steps.map((step, index) => {\n          const isActive = step.id === currentStep;\n          const isCompleted = step.completed;\n          \n          return (\n            <div\n              key={step.id}\n              className=\"flex items-center gap-3\"\n              data-testid={`onboarding-step-${step.id}`}\n            >\n              <div className={cn(\n                \"w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium\",\n                isCompleted && \"bg-green-600 text-white\",\n                isActive && !isCompleted && \"bg-blue-600 text-white\",\n                !isActive && !isCompleted && \"bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-400\"\n              )}>\n                {isCompleted ? <Check className=\"w-4 h-4\" /> : index + 1}\n              </div>\n              \n              <div className={cn(\n                \"flex-1 text-sm\",\n                isCompleted && \"text-green-600 dark:text-green-400\",\n                isActive && !isCompleted && \"text-blue-600 dark:text-blue-400 font-medium\",\n                !isActive && !isCompleted && \"text-gray-600 dark:text-gray-400\"\n              )}>\n                {step.title}\n              </div>\n              \n              {isCompleted && (\n                <Check className=\"w-4 h-4 text-green-600 dark:text-green-400\" />\n              )}\n            </div>\n          );\n        })}\n      </div>\n      \n      <div className=\"mt-6 pt-4 border-t border-gray-200 dark:border-gray-700\">\n        <div className=\"flex justify-between items-center text-sm\">\n          <span className=\"text-gray-600 dark:text-gray-400\">\n            {steps.filter(s => s.completed).length} of {steps.length} completed\n          </span>\n          <span className=\"text-blue-600 dark:text-blue-400 font-medium\">\n            {Math.round((steps.filter(s => s.completed).length / steps.length) * 100)}%\n          </span>\n        </div>\n        <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mt-2\">\n          <div\n            className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n            style={{ width: `${(steps.filter(s => s.completed).length / steps.length) * 100}%` }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":15494},"client/src/components/ui/zoho-search.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Search, X, Filter, SlidersHorizontal, ArrowUpDown, Calendar, Users, Tag as TagIcon } from \"lucide-react\";\nimport { ZohoButton } from \"./zoho-button\";\nimport { ZohoSelect } from \"./zoho-form\";\n\ninterface ZohoSearchBarProps {\n  value: string;\n  onChange: (value: string) => void;\n  placeholder?: string;\n  suggestions?: string[];\n  recentSearches?: string[];\n  onSearch?: (query: string) => void;\n  loading?: boolean;\n  size?: \"sm\" | \"md\" | \"lg\";\n  showFilters?: boolean;\n  onFilterClick?: () => void;\n  className?: string;\n}\n\nexport function ZohoSearchBar({\n  value,\n  onChange,\n  placeholder = \"Search...\",\n  suggestions = [],\n  recentSearches = [],\n  onSearch,\n  loading = false,\n  size = \"md\",\n  showFilters = false,\n  onFilterClick,\n  className,\n}: ZohoSearchBarProps) {\n  const [isFocused, setIsFocused] = React.useState(false);\n  const [showSuggestions, setShowSuggestions] = React.useState(false);\n  const [focusedIndex, setFocusedIndex] = React.useState(-1);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const allSuggestions = React.useMemo(() => {\n    const filtered = suggestions.filter(suggestion =>\n      suggestion.toLowerCase().includes(value.toLowerCase())\n    );\n    \n    if (!value && recentSearches.length > 0) {\n      return recentSearches.slice(0, 5);\n    }\n    \n    return filtered.slice(0, 8);\n  }, [value, suggestions, recentSearches]);\n\n  const sizeClasses = {\n    sm: \"h-8 text-sm\",\n    md: \"h-10 text-sm\",\n    lg: \"h-12 text-base\",\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      if (focusedIndex >= 0 && allSuggestions[focusedIndex]) {\n        const selectedSuggestion = allSuggestions[focusedIndex];\n        onChange(selectedSuggestion);\n        onSearch?.(selectedSuggestion);\n      } else {\n        onSearch?.(value);\n      }\n      setShowSuggestions(false);\n      inputRef.current?.blur();\n    } else if (e.key === \"ArrowDown\") {\n      e.preventDefault();\n      setFocusedIndex(prev => \n        prev < allSuggestions.length - 1 ? prev + 1 : 0\n      );\n    } else if (e.key === \"ArrowUp\") {\n      e.preventDefault();\n      setFocusedIndex(prev => \n        prev > 0 ? prev - 1 : allSuggestions.length - 1\n      );\n    } else if (e.key === \"Escape\") {\n      setShowSuggestions(false);\n      setFocusedIndex(-1);\n      inputRef.current?.blur();\n    }\n  };\n\n  const handleSuggestionClick = (suggestion: string) => {\n    onChange(suggestion);\n    onSearch?.(suggestion);\n    setShowSuggestions(false);\n    setFocusedIndex(-1);\n  };\n\n  const handleClear = () => {\n    onChange(\"\");\n    setShowSuggestions(false);\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div className={cn(\"relative w-full\", className)}>\n      <div className={cn(\n        \"relative flex items-center border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 transition-all duration-200\",\n        isFocused && \"ring-2 ring-blue-500 border-blue-500\",\n        sizeClasses[size]\n      )}>\n        <Search className=\"absolute left-3 w-4 h-4 text-gray-400\" />\n        \n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n          onKeyDown={handleKeyDown}\n          onFocus={() => {\n            setIsFocused(true);\n            if (allSuggestions.length > 0) {\n              setShowSuggestions(true);\n            }\n          }}\n          onBlur={() => {\n            setIsFocused(false);\n            // Delay hiding suggestions to allow click events\n            setTimeout(() => setShowSuggestions(false), 150);\n          }}\n          placeholder={placeholder}\n          className=\"w-full pl-10 pr-20 py-2 bg-transparent border-0 outline-none text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n          data-testid=\"search-input\"\n        />\n        \n        <div className=\"absolute right-2 flex items-center gap-1\">\n          {value && (\n            <button\n              onClick={handleClear}\n              className=\"p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n              data-testid=\"search-clear\"\n            >\n              <X className=\"w-4 h-4\" />\n            </button>\n          )}\n          \n          {showFilters && (\n            <button\n              onClick={onFilterClick}\n              className=\"p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n              data-testid=\"search-filters\"\n            >\n              <Filter className=\"w-4 h-4\" />\n            </button>\n          )}\n          \n          {loading && (\n            <div className=\"p-1\">\n              <div className=\"w-4 h-4 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\" />\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Suggestions Dropdown */}\n      {showSuggestions && allSuggestions.length > 0 && (\n        <div className=\"absolute z-20 w-full mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg max-h-64 overflow-y-auto\">\n          {!value && recentSearches.length > 0 && (\n            <div className=\"px-3 py-2 text-xs font-medium text-gray-500 dark:text-gray-400 border-b border-gray-200 dark:border-gray-700\">\n              Recent Searches\n            </div>\n          )}\n          \n          {allSuggestions.map((suggestion, index) => (\n            <button\n              key={index}\n              onClick={() => handleSuggestionClick(suggestion)}\n              className={cn(\n                \"w-full px-3 py-2 text-left hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200 flex items-center gap-2\",\n                index === focusedIndex && \"bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400\"\n              )}\n              data-testid={`search-suggestion-${index}`}\n            >\n              <Search className=\"w-4 h-4 text-gray-400\" />\n              <span className=\"truncate\">{suggestion}</span>\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Advanced Search Component\ninterface SearchFilter {\n  id: string;\n  label: string;\n  type: \"text\" | \"select\" | \"date\" | \"dateRange\" | \"number\" | \"multiSelect\";\n  options?: Array<{ label: string; value: string }>;\n  value?: any;\n  placeholder?: string;\n}\n\ninterface ZohoAdvancedSearchProps {\n  filters: SearchFilter[];\n  onFiltersChange: (filters: SearchFilter[]) => void;\n  onSearch: () => void;\n  onReset: () => void;\n  loading?: boolean;\n  className?: string;\n}\n\nexport function ZohoAdvancedSearch({\n  filters,\n  onFiltersChange,\n  onSearch,\n  onReset,\n  loading = false,\n  className,\n}: ZohoAdvancedSearchProps) {\n  const updateFilter = (id: string, value: any) => {\n    const updatedFilters = filters.map(filter =>\n      filter.id === id ? { ...filter, value } : filter\n    );\n    onFiltersChange(updatedFilters);\n  };\n\n  const hasActiveFilters = filters.some(filter => \n    filter.value !== undefined && filter.value !== \"\" && filter.value !== null\n  );\n\n  return (\n    <div className={cn(\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6\", className)}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white flex items-center gap-2\">\n          <SlidersHorizontal className=\"w-5 h-5\" />\n          Advanced Search\n        </h3>\n        \n        {hasActiveFilters && (\n          <button\n            onClick={onReset}\n            className=\"text-sm text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300\"\n            data-testid=\"advanced-search-reset\"\n          >\n            Clear all\n          </button>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\">\n        {filters.map((filter) => (\n          <div key={filter.id} className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              {filter.label}\n            </label>\n            \n            {filter.type === \"text\" && (\n              <input\n                type=\"text\"\n                value={filter.value || \"\"}\n                onChange={(e) => updateFilter(filter.id, e.target.value)}\n                placeholder={filter.placeholder}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                data-testid={`filter-${filter.id}`}\n              />\n            )}\n            \n            {filter.type === \"select\" && (\n              <ZohoSelect\n                options={filter.options || []}\n                value={filter.value || \"\"}\n                onChange={(value) => updateFilter(filter.id, value)}\n                placeholder={filter.placeholder}\n              />\n            )}\n            \n            {filter.type === \"number\" && (\n              <input\n                type=\"number\"\n                value={filter.value || \"\"}\n                onChange={(e) => updateFilter(filter.id, e.target.value)}\n                placeholder={filter.placeholder}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                data-testid={`filter-${filter.id}`}\n              />\n            )}\n            \n            {filter.type === \"date\" && (\n              <input\n                type=\"date\"\n                value={filter.value || \"\"}\n                onChange={(e) => updateFilter(filter.id, e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                data-testid={`filter-${filter.id}`}\n              />\n            )}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"flex items-center justify-between\">\n        <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n          {hasActiveFilters && `${filters.filter(f => f.value).length} filter(s) applied`}\n        </div>\n        \n        <div className=\"flex gap-3\">\n          <ZohoButton\n            variant=\"outline\"\n            onClick={onReset}\n            disabled={!hasActiveFilters}\n            data-testid=\"advanced-search-clear\"\n          >\n            Clear\n          </ZohoButton>\n          <ZohoButton\n            variant=\"primary\"\n            onClick={onSearch}\n            loading={loading}\n            data-testid=\"advanced-search-submit\"\n          >\n            Search\n          </ZohoButton>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Quick Filter Bar\ninterface QuickFilter {\n  id: string;\n  label: string;\n  active: boolean;\n  count?: number;\n}\n\ninterface ZohoQuickFiltersProps {\n  filters: QuickFilter[];\n  onFilterToggle: (id: string) => void;\n  showCounts?: boolean;\n  className?: string;\n}\n\nexport function ZohoQuickFilters({\n  filters,\n  onFilterToggle,\n  showCounts = false,\n  className,\n}: ZohoQuickFiltersProps) {\n  return (\n    <div className={cn(\"flex flex-wrap gap-2\", className)}>\n      {filters.map((filter) => (\n        <button\n          key={filter.id}\n          onClick={() => onFilterToggle(filter.id)}\n          className={cn(\n            \"inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-full border transition-colors duration-200\",\n            filter.active\n              ? \"bg-blue-600 text-white border-blue-600\"\n              : \"bg-white text-gray-700 border-gray-300 hover:bg-gray-50 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-600 dark:hover:bg-gray-600\"\n          )}\n          data-testid={`quick-filter-${filter.id}`}\n        >\n          <span>{filter.label}</span>\n          {showCounts && filter.count !== undefined && (\n            <span className={cn(\n              \"ml-2 px-1.5 py-0.5 text-xs rounded-full\",\n              filter.active\n                ? \"bg-white bg-opacity-20\"\n                : \"bg-gray-200 dark:bg-gray-600\"\n            )}>\n              {filter.count}\n            </span>\n          )}\n        </button>\n      ))}\n    </div>\n  );\n}\n\n// Search Result Item\ninterface ZohoSearchResultProps {\n  title: string;\n  description?: string;\n  metadata?: Array<{ label: string; value: string; icon?: React.ReactNode }>;\n  tags?: string[];\n  actions?: Array<{ label: string; onClick: () => void; icon?: React.ReactNode }>;\n  onClick?: () => void;\n  className?: string;\n}\n\nexport function ZohoSearchResult({\n  title,\n  description,\n  metadata = [],\n  tags = [],\n  actions = [],\n  onClick,\n  className,\n}: ZohoSearchResultProps) {\n  return (\n    <div\n      className={cn(\n        \"p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:shadow-md transition-shadow duration-200 cursor-pointer\",\n        className\n      )}\n      onClick={onClick}\n      data-testid=\"search-result\"\n    >\n      <div className=\"flex items-start justify-between gap-4\">\n        <div className=\"flex-1 min-w-0\">\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2 truncate\">\n            {title}\n          </h3>\n          \n          {description && (\n            <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-3 line-clamp-2\">\n              {description}\n            </p>\n          )}\n          \n          {metadata.length > 0 && (\n            <div className=\"flex flex-wrap gap-4 mb-3\">\n              {metadata.map((item, index) => (\n                <div key={index} className=\"flex items-center gap-1 text-sm text-gray-500 dark:text-gray-400\">\n                  {item.icon}\n                  <span className=\"font-medium\">{item.label}:</span>\n                  <span>{item.value}</span>\n                </div>\n              ))}\n            </div>\n          )}\n          \n          {tags.length > 0 && (\n            <div className=\"flex flex-wrap gap-2\">\n              {tags.map((tag, index) => (\n                <span\n                  key={index}\n                  className=\"inline-flex items-center px-2 py-1 text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300 rounded-full\"\n                >\n                  {tag}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n        \n        {actions.length > 0 && (\n          <div className=\"flex items-center gap-2\">\n            {actions.map((action, index) => (\n              <button\n                key={index}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  action.onClick();\n                }}\n                className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n                data-testid={`search-result-action-${index}`}\n              >\n                {action.icon}\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":15197},"client/src/components/ui/zoho-table.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { \n  ChevronUp, \n  ChevronDown, \n  MoreHorizontal, \n  Search,\n  Filter,\n  Download,\n  ArrowUpDown,\n  CheckSquare,\n  Square\n} from \"lucide-react\";\nimport { ZohoButton } from \"./zoho-button\";\n\ninterface Column {\n  key: string;\n  title: string;\n  sortable?: boolean;\n  filterable?: boolean;\n  width?: string;\n  render?: (value: any, record: any) => React.ReactNode;\n}\n\ninterface ZohoTableProps {\n  data: Array<Record<string, any>>;\n  columns: Column[];\n  loading?: boolean;\n  selectable?: boolean;\n  selectedRows?: string[];\n  onRowSelect?: (selectedRowKeys: string[]) => void;\n  onSort?: (key: string, direction: \"asc\" | \"desc\") => void;\n  sortConfig?: { key: string; direction: \"asc\" | \"desc\" };\n  pagination?: {\n    current: number;\n    pageSize: number;\n    total: number;\n    onChange: (page: number, pageSize: number) => void;\n  };\n  actions?: Array<{\n    label: string;\n    onClick: (record: any) => void;\n    icon?: React.ReactNode;\n  }>;\n  className?: string;\n}\n\nexport function ZohoTable({\n  data,\n  columns,\n  loading = false,\n  selectable = false,\n  selectedRows = [],\n  onRowSelect,\n  onSort,\n  sortConfig,\n  pagination,\n  actions,\n  className,\n}: ZohoTableProps) {\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [filters, setFilters] = React.useState<Record<string, string>>({});\n\n  const handleSelectAll = () => {\n    if (!onRowSelect) return;\n    \n    const allSelected = selectedRows.length === data.length;\n    if (allSelected) {\n      onRowSelect([]);\n    } else {\n      onRowSelect(data.map((_, index) => index.toString()));\n    }\n  };\n\n  const handleRowSelect = (rowKey: string) => {\n    if (!onRowSelect) return;\n    \n    const newSelection = selectedRows.includes(rowKey)\n      ? selectedRows.filter(key => key !== rowKey)\n      : [...selectedRows, rowKey];\n    \n    onRowSelect(newSelection);\n  };\n\n  const handleSort = (columnKey: string) => {\n    if (!onSort) return;\n    \n    let direction: \"asc\" | \"desc\" = \"asc\";\n    if (sortConfig?.key === columnKey && sortConfig.direction === \"asc\") {\n      direction = \"desc\";\n    }\n    \n    onSort(columnKey, direction);\n  };\n\n  const filteredData = React.useMemo(() => {\n    return data.filter(item => {\n      // Search filter\n      if (searchTerm) {\n        const searchValue = Object.values(item)\n          .join(\" \")\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n        if (!searchValue) return false;\n      }\n      \n      // Column filters\n      for (const [key, value] of Object.entries(filters)) {\n        if (value && !String(item[key]).toLowerCase().includes(value.toLowerCase())) {\n          return false;\n        }\n      }\n      \n      return true;\n    });\n  }, [data, searchTerm, filters]);\n\n  if (loading) {\n    return (\n      <div className=\"w-full\">\n        <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg\">\n          <div className=\"animate-pulse\">\n            {/* Table header skeleton */}\n            <div className=\"border-b border-gray-200 dark:border-gray-700 p-4\">\n              <div className=\"flex space-x-4\">\n                {columns.map((_, index) => (\n                  <div key={index} className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded flex-1\"></div>\n                ))}\n              </div>\n            </div>\n            {/* Table rows skeleton */}\n            {[...Array(5)].map((_, index) => (\n              <div key={index} className=\"border-b border-gray-200 dark:border-gray-700 p-4\">\n                <div className=\"flex space-x-4\">\n                  {columns.map((_, colIndex) => (\n                    <div key={colIndex} className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded flex-1\"></div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn(\"w-full\", className)}>\n      {/* Table Toolbar */}\n      <div className=\"flex items-center justify-between mb-4 p-4 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-t-lg\">\n        <div className=\"flex items-center gap-4\">\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              data-testid=\"table-search-input\"\n            />\n          </div>\n          <ZohoButton variant=\"outline\" icon=\"filter\" size=\"sm\">\n            Filter\n          </ZohoButton>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          <ZohoButton variant=\"outline\" icon=\"download\" size=\"sm\">\n            Export\n          </ZohoButton>\n          {selectedRows.length > 0 && (\n            <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n              {selectedRows.length} selected\n            </span>\n          )}\n        </div>\n      </div>\n\n      {/* Table */}\n      <div className=\"border border-gray-200 dark:border-gray-700 rounded-b-lg overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full divide-y divide-gray-200 dark:divide-gray-700\">\n            <thead className=\"bg-gray-50 dark:bg-gray-700\">\n              <tr>\n                {selectable && (\n                  <th className=\"px-6 py-3 text-left\">\n                    <button\n                      onClick={handleSelectAll}\n                      className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n                      data-testid=\"select-all-checkbox\"\n                    >\n                      {selectedRows.length === data.length && data.length > 0 ? (\n                        <CheckSquare className=\"w-4 h-4\" />\n                      ) : (\n                        <Square className=\"w-4 h-4\" />\n                      )}\n                    </button>\n                  </th>\n                )}\n                {columns.map((column) => (\n                  <th\n                    key={column.key}\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"\n                    style={{ width: column.width }}\n                  >\n                    <div className=\"flex items-center gap-2\">\n                      <span>{column.title}</span>\n                      {column.sortable && (\n                        <button\n                          onClick={() => handleSort(column.key)}\n                          className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n                          data-testid={`sort-${column.key}`}\n                        >\n                          {sortConfig?.key === column.key ? (\n                            sortConfig.direction === \"asc\" ? (\n                              <ChevronUp className=\"w-4 h-4\" />\n                            ) : (\n                              <ChevronDown className=\"w-4 h-4\" />\n                            )\n                          ) : (\n                            <ArrowUpDown className=\"w-4 h-4\" />\n                          )}\n                        </button>\n                      )}\n                    </div>\n                  </th>\n                ))}\n                {actions && actions.length > 0 && (\n                  <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                )}\n              </tr>\n            </thead>\n            <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n              {filteredData.map((record, index) => (\n                <tr \n                  key={index}\n                  className=\"hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-150\"\n                  data-testid={`table-row-${index}`}\n                >\n                  {selectable && (\n                    <td className=\"px-6 py-4\">\n                      <button\n                        onClick={() => handleRowSelect(index.toString())}\n                        className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n                        data-testid={`select-row-${index}`}\n                      >\n                        {selectedRows.includes(index.toString()) ? (\n                          <CheckSquare className=\"w-4 h-4\" />\n                        ) : (\n                          <Square className=\"w-4 h-4\" />\n                        )}\n                      </button>\n                    </td>\n                  )}\n                  {columns.map((column) => (\n                    <td key={column.key} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                      {column.render \n                        ? column.render(record[column.key], record)\n                        : record[column.key]\n                      }\n                    </td>\n                  ))}\n                  {actions && actions.length > 0 && (\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <div className=\"flex items-center justify-end gap-2\">\n                        {actions.map((action, actionIndex) => (\n                          <button\n                            key={actionIndex}\n                            onClick={() => action.onClick(record)}\n                            className=\"text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300\"\n                            data-testid={`action-${action.label.toLowerCase().replace(/\\s+/g, '-')}-${index}`}\n                          >\n                            {action.icon || action.label}\n                          </button>\n                        ))}\n                      </div>\n                    </td>\n                  )}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Pagination */}\n        {pagination && (\n          <div className=\"px-6 py-3 bg-gray-50 dark:bg-gray-700 border-t border-gray-200 dark:border-gray-600\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                Showing {((pagination.current - 1) * pagination.pageSize) + 1} to {Math.min(pagination.current * pagination.pageSize, pagination.total)} of {pagination.total} results\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <ZohoButton\n                  variant=\"outline\"\n                  size=\"sm\"\n                  disabled={pagination.current === 1}\n                  onClick={() => pagination.onChange(pagination.current - 1, pagination.pageSize)}\n                >\n                  Previous\n                </ZohoButton>\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  Page {pagination.current} of {Math.ceil(pagination.total / pagination.pageSize)}\n                </span>\n                <ZohoButton\n                  variant=\"outline\"\n                  size=\"sm\"\n                  disabled={pagination.current >= Math.ceil(pagination.total / pagination.pageSize)}\n                  onClick={() => pagination.onChange(pagination.current + 1, pagination.pageSize)}\n                >\n                  Next\n                </ZohoButton>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Empty State */}\n      {filteredData.length === 0 && !loading && (\n        <div className=\"text-center py-12 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg\">\n          <div className=\"text-gray-500 dark:text-gray-400\">\n            <div className=\"text-lg font-medium mb-2\">No data found</div>\n            <div className=\"text-sm\">Try adjusting your search or filter criteria</div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":12318},"client/src/components/ui/zoho-tags.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { X, Plus, Tag as TagIcon, Hash } from \"lucide-react\";\n\ninterface ZohoTagProps {\n  label: string;\n  variant?: \"default\" | \"primary\" | \"success\" | \"warning\" | \"danger\" | \"outline\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  removable?: boolean;\n  onRemove?: () => void;\n  icon?: React.ReactNode;\n  className?: string;\n  onClick?: () => void;\n}\n\nexport function ZohoTag({\n  label,\n  variant = \"default\",\n  size = \"md\",\n  removable = false,\n  onRemove,\n  icon,\n  className,\n  onClick,\n}: ZohoTagProps) {\n  const baseClasses = \"inline-flex items-center font-medium rounded-full transition-colors duration-200\";\n  \n  const variantClasses = {\n    default: \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300\",\n    primary: \"bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-300\",\n    success: \"bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-300\",\n    warning: \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-300\",\n    danger: \"bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-300\",\n    outline: \"bg-transparent border border-gray-300 text-gray-700 dark:border-gray-600 dark:text-gray-300\",\n  };\n\n  const sizeClasses = {\n    sm: \"px-2 py-1 text-xs gap-1\",\n    md: \"px-3 py-1.5 text-sm gap-1.5\",\n    lg: \"px-4 py-2 text-base gap-2\",\n  };\n\n  const handleClick = () => {\n    if (onClick) {\n      onClick();\n    }\n  };\n\n  return (\n    <span\n      className={cn(\n        baseClasses,\n        variantClasses[variant],\n        sizeClasses[size],\n        onClick && \"cursor-pointer hover:opacity-80\",\n        className\n      )}\n      onClick={handleClick}\n      data-testid={`tag-${label.toLowerCase().replace(/\\s+/g, '-')}`}\n    >\n      {icon && (\n        <span className=\"flex-shrink-0\">\n          {icon}\n        </span>\n      )}\n      \n      <span className=\"truncate\">\n        {label}\n      </span>\n      \n      {removable && (\n        <button\n          type=\"button\"\n          onClick={(e) => {\n            e.stopPropagation();\n            onRemove?.();\n          }}\n          className=\"flex-shrink-0 ml-1 hover:bg-black hover:bg-opacity-10 rounded-full p-0.5 transition-colors duration-200\"\n          data-testid={`tag-remove-${label.toLowerCase().replace(/\\s+/g, '-')}`}\n        >\n          <X className=\"w-3 h-3\" />\n        </button>\n      )}\n    </span>\n  );\n}\n\n// Tag Input Component\ninterface ZohoTagInputProps {\n  tags: string[];\n  onTagsChange: (tags: string[]) => void;\n  placeholder?: string;\n  label?: string;\n  error?: string;\n  required?: boolean;\n  disabled?: boolean;\n  maxTags?: number;\n  allowDuplicates?: boolean;\n  tagVariant?: \"default\" | \"primary\" | \"success\" | \"warning\" | \"danger\";\n  className?: string;\n  suggestions?: string[];\n}\n\nexport function ZohoTagInput({\n  tags,\n  onTagsChange,\n  placeholder = \"Add tags...\",\n  label,\n  error,\n  required,\n  disabled,\n  maxTags,\n  allowDuplicates = false,\n  tagVariant = \"default\",\n  className,\n  suggestions = [],\n}: ZohoTagInputProps) {\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [showSuggestions, setShowSuggestions] = React.useState(false);\n  const [focusedSuggestionIndex, setFocusedSuggestionIndex] = React.useState(-1);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const filteredSuggestions = React.useMemo(() => {\n    if (!inputValue || !suggestions.length) return [];\n    return suggestions.filter(\n      suggestion =>\n        suggestion.toLowerCase().includes(inputValue.toLowerCase()) &&\n        (allowDuplicates || !tags.includes(suggestion))\n    );\n  }, [inputValue, suggestions, tags, allowDuplicates]);\n\n  const addTag = (tag: string) => {\n    const trimmedTag = tag.trim();\n    if (!trimmedTag) return;\n    \n    if (!allowDuplicates && tags.includes(trimmedTag)) return;\n    if (maxTags && tags.length >= maxTags) return;\n    \n    onTagsChange([...tags, trimmedTag]);\n    setInputValue(\"\");\n    setShowSuggestions(false);\n    setFocusedSuggestionIndex(-1);\n  };\n\n  const removeTag = (indexToRemove: number) => {\n    onTagsChange(tags.filter((_, index) => index !== indexToRemove));\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" || e.key === \"Tab\") {\n      e.preventDefault();\n      if (focusedSuggestionIndex >= 0 && filteredSuggestions[focusedSuggestionIndex]) {\n        addTag(filteredSuggestions[focusedSuggestionIndex]);\n      } else if (inputValue.trim()) {\n        addTag(inputValue);\n      }\n    } else if (e.key === \"Backspace\" && !inputValue && tags.length > 0) {\n      removeTag(tags.length - 1);\n    } else if (e.key === \"ArrowDown\") {\n      e.preventDefault();\n      setFocusedSuggestionIndex(prev => \n        prev < filteredSuggestions.length - 1 ? prev + 1 : 0\n      );\n    } else if (e.key === \"ArrowUp\") {\n      e.preventDefault();\n      setFocusedSuggestionIndex(prev => \n        prev > 0 ? prev - 1 : filteredSuggestions.length - 1\n      );\n    } else if (e.key === \"Escape\") {\n      setShowSuggestions(false);\n      setFocusedSuggestionIndex(-1);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setInputValue(value);\n    setShowSuggestions(value.length > 0 && filteredSuggestions.length > 0);\n    setFocusedSuggestionIndex(-1);\n  };\n\n  const handleSuggestionClick = (suggestion: string) => {\n    addTag(suggestion);\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      \n      <div className=\"relative\">\n        <div\n          className={cn(\n            \"min-h-[2.5rem] px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500 transition-colors duration-200 cursor-text\",\n            error && \"border-red-500 focus-within:ring-red-500 focus-within:border-red-500\",\n            disabled && \"opacity-50 cursor-not-allowed bg-gray-100 dark:bg-gray-800\",\n            className\n          )}\n          onClick={() => inputRef.current?.focus()}\n          data-testid=\"tag-input-container\"\n        >\n          <div className=\"flex flex-wrap items-center gap-2\">\n            {/* Existing Tags */}\n            {tags.map((tag, index) => (\n              <ZohoTag\n                key={index}\n                label={tag}\n                variant={tagVariant}\n                size=\"sm\"\n                removable={!disabled}\n                onRemove={() => removeTag(index)}\n              />\n            ))}\n            \n            {/* Input */}\n            <input\n              ref={inputRef}\n              type=\"text\"\n              value={inputValue}\n              onChange={handleInputChange}\n              onKeyDown={handleKeyDown}\n              onFocus={() => {\n                if (inputValue && filteredSuggestions.length > 0) {\n                  setShowSuggestions(true);\n                }\n              }}\n              onBlur={() => {\n                // Delay hiding suggestions to allow click events\n                setTimeout(() => setShowSuggestions(false), 150);\n              }}\n              placeholder={tags.length === 0 ? placeholder : \"\"}\n              disabled={disabled || (maxTags && tags.length >= maxTags)}\n              className=\"flex-1 min-w-[100px] bg-transparent border-0 outline-none text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n              data-testid=\"tag-input-field\"\n            />\n          </div>\n        </div>\n\n        {/* Suggestions Dropdown */}\n        {showSuggestions && filteredSuggestions.length > 0 && (\n          <div className=\"absolute z-20 w-full mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-md shadow-lg max-h-40 overflow-y-auto\">\n            {filteredSuggestions.map((suggestion, index) => (\n              <button\n                key={index}\n                type=\"button\"\n                onClick={() => handleSuggestionClick(suggestion)}\n                className={cn(\n                  \"w-full px-3 py-2 text-left hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200\",\n                  index === focusedSuggestionIndex && \"bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400\"\n                )}\n                data-testid={`tag-suggestion-${index}`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <TagIcon className=\"w-4 h-4 text-gray-400\" />\n                  <span>{suggestion}</span>\n                </div>\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Helper Text */}\n      <div className=\"mt-1 text-sm\">\n        {error && (\n          <div className=\"text-red-600 dark:text-red-400\">\n            {error}\n          </div>\n        )}\n        {!error && maxTags && (\n          <div className=\"text-gray-500 dark:text-gray-400\">\n            {tags.length}/{maxTags} tags\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Tag Group Component\ninterface ZohoTagGroupProps {\n  title?: string;\n  tags: Array<{\n    label: string;\n    value: string;\n    count?: number;\n    variant?: \"default\" | \"primary\" | \"success\" | \"warning\" | \"danger\";\n  }>;\n  selectedTags: string[];\n  onTagToggle: (value: string) => void;\n  maxVisible?: number;\n  showCount?: boolean;\n  className?: string;\n}\n\nexport function ZohoTagGroup({\n  title,\n  tags,\n  selectedTags,\n  onTagToggle,\n  maxVisible,\n  showCount = false,\n  className,\n}: ZohoTagGroupProps) {\n  const [showAll, setShowAll] = React.useState(false);\n  \n  const visibleTags = maxVisible && !showAll ? tags.slice(0, maxVisible) : tags;\n  const hiddenCount = maxVisible ? Math.max(0, tags.length - maxVisible) : 0;\n\n  return (\n    <div className={cn(\"space-y-3\", className)}>\n      {title && (\n        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">\n          {title}\n        </h4>\n      )}\n      \n      <div className=\"flex flex-wrap gap-2\">\n        {visibleTags.map((tag) => {\n          const isSelected = selectedTags.includes(tag.value);\n          \n          return (\n            <ZohoTag\n              key={tag.value}\n              label={`${tag.label}${showCount && tag.count ? ` (${tag.count})` : \"\"}`}\n              variant={isSelected ? (tag.variant || \"primary\") : \"outline\"}\n              onClick={() => onTagToggle(tag.value)}\n              className={cn(\n                \"cursor-pointer transition-all duration-200\",\n                isSelected && \"ring-2 ring-blue-200 dark:ring-blue-800\"\n              )}\n            />\n          );\n        })}\n        \n        {maxVisible && hiddenCount > 0 && (\n          <button\n            onClick={() => setShowAll(!showAll)}\n            className=\"inline-flex items-center px-3 py-1.5 text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors duration-200\"\n            data-testid=\"tag-group-show-more\"\n          >\n            {showAll ? \"Show less\" : `+${hiddenCount} more`}\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Pill Component (similar to tag but more rounded)\ninterface ZohoPillProps {\n  label: string;\n  variant?: \"default\" | \"primary\" | \"success\" | \"warning\" | \"danger\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  icon?: React.ReactNode;\n  badge?: string | number;\n  className?: string;\n  onClick?: () => void;\n}\n\nexport function ZohoPill({\n  label,\n  variant = \"default\",\n  size = \"md\",\n  icon,\n  badge,\n  className,\n  onClick,\n}: ZohoPillProps) {\n  const baseClasses = \"inline-flex items-center font-medium rounded-full transition-colors duration-200\";\n  \n  const variantClasses = {\n    default: \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300\",\n    primary: \"bg-blue-600 text-white\",\n    success: \"bg-green-600 text-white\",\n    warning: \"bg-yellow-600 text-white\",\n    danger: \"bg-red-600 text-white\",\n  };\n\n  const sizeClasses = {\n    sm: \"px-3 py-1 text-xs gap-1.5\",\n    md: \"px-4 py-2 text-sm gap-2\",\n    lg: \"px-6 py-3 text-base gap-2.5\",\n  };\n\n  return (\n    <span\n      className={cn(\n        baseClasses,\n        variantClasses[variant],\n        sizeClasses[size],\n        onClick && \"cursor-pointer hover:opacity-80\",\n        className\n      )}\n      onClick={onClick}\n      data-testid={`pill-${label.toLowerCase().replace(/\\s+/g, '-')}`}\n    >\n      {icon && (\n        <span className=\"flex-shrink-0\">\n          {icon}\n        </span>\n      )}\n      \n      <span className=\"truncate\">\n        {label}\n      </span>\n      \n      {badge && (\n        <span className=\"flex-shrink-0 ml-1 px-2 py-0.5 text-xs bg-black bg-opacity-20 rounded-full\">\n          {badge}\n        </span>\n      )}\n    </span>\n  );\n}","size_bytes":12894},"client/src/components/ui/zoho-tooltip.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface ZohoTooltipProps {\n  content: string | React.ReactNode;\n  children: React.ReactNode;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\";\n  variant?: \"default\" | \"dark\" | \"light\";\n  delay?: number;\n  disabled?: boolean;\n  className?: string;\n  maxWidth?: string;\n}\n\nexport function ZohoTooltip({\n  content,\n  children,\n  position = \"top\",\n  variant = \"default\",\n  delay = 200,\n  disabled = false,\n  className,\n  maxWidth = \"max-w-xs\",\n}: ZohoTooltipProps) {\n  const [isVisible, setIsVisible] = React.useState(false);\n  const [showTooltip, setShowTooltip] = React.useState(false);\n  const timeoutRef = React.useRef<NodeJS.Timeout>();\n  const tooltipRef = React.useRef<HTMLDivElement>(null);\n  const triggerRef = React.useRef<HTMLDivElement>(null);\n\n  const handleMouseEnter = () => {\n    if (disabled) return;\n    \n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = setTimeout(() => {\n      setIsVisible(true);\n      setTimeout(() => setShowTooltip(true), 10);\n    }, delay);\n  };\n\n  const handleMouseLeave = () => {\n    clearTimeout(timeoutRef.current);\n    setShowTooltip(false);\n    setTimeout(() => setIsVisible(false), 150);\n  };\n\n  const positionClasses = {\n    top: \"bottom-full left-1/2 transform -translate-x-1/2 mb-2\",\n    bottom: \"top-full left-1/2 transform -translate-x-1/2 mt-2\",\n    left: \"right-full top-1/2 transform -translate-y-1/2 mr-2\",\n    right: \"left-full top-1/2 transform -translate-y-1/2 ml-2\",\n  };\n\n  const arrowClasses = {\n    top: \"top-full left-1/2 transform -translate-x-1/2 border-l-4 border-r-4 border-t-4 border-transparent\",\n    bottom: \"bottom-full left-1/2 transform -translate-x-1/2 border-l-4 border-r-4 border-b-4 border-transparent\",\n    left: \"left-full top-1/2 transform -translate-y-1/2 border-t-4 border-b-4 border-l-4 border-transparent\",\n    right: \"right-full top-1/2 transform -translate-y-1/2 border-t-4 border-b-4 border-r-4 border-transparent\",\n  };\n\n  const variantClasses = {\n    default: \"bg-gray-900 text-white border-gray-900\",\n    dark: \"bg-black text-white border-black\",\n    light: \"bg-white text-gray-900 border-gray-200 shadow-lg\",\n  };\n\n  const arrowColors = {\n    default: \"border-t-gray-900\",\n    dark: \"border-t-black\",\n    light: \"border-t-white\",\n  };\n\n  React.useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div \n      className=\"relative inline-block\"\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      ref={triggerRef}\n    >\n      {children}\n      \n      {isVisible && (\n        <div\n          ref={tooltipRef}\n          className={cn(\n            \"absolute z-50 px-3 py-2 text-sm rounded-md border transition-all duration-150\",\n            positionClasses[position],\n            variantClasses[variant],\n            maxWidth,\n            showTooltip ? \"opacity-100 scale-100\" : \"opacity-0 scale-95\",\n            className\n          )}\n          data-testid=\"tooltip\"\n        >\n          <div className=\"relative\">\n            {content}\n            \n            {/* Arrow */}\n            <div\n              className={cn(\n                \"absolute w-0 h-0\",\n                arrowClasses[position],\n                position === \"top\" && arrowColors[variant],\n                position === \"bottom\" && `border-b-gray-900 ${variant === \"light\" ? \"border-b-white\" : variant === \"dark\" ? \"border-b-black\" : \"border-b-gray-900\"}`,\n                position === \"left\" && `border-l-gray-900 ${variant === \"light\" ? \"border-l-white\" : variant === \"dark\" ? \"border-l-black\" : \"border-l-gray-900\"}`,\n                position === \"right\" && `border-r-gray-900 ${variant === \"light\" ? \"border-r-white\" : variant === \"dark\" ? \"border-r-black\" : \"border-r-gray-900\"}`\n              )}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Tooltip with Rich Content\ninterface ZohoRichTooltipProps {\n  title?: string;\n  content: React.ReactNode;\n  children: React.ReactNode;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\";\n  width?: string;\n  trigger?: \"hover\" | \"click\";\n  className?: string;\n}\n\nexport function ZohoRichTooltip({\n  title,\n  content,\n  children,\n  position = \"top\",\n  width = \"w-80\",\n  trigger = \"hover\",\n  className,\n}: ZohoRichTooltipProps) {\n  const [isVisible, setIsVisible] = React.useState(false);\n  const [showTooltip, setShowTooltip] = React.useState(false);\n\n  const handleToggle = () => {\n    if (trigger === \"click\") {\n      if (isVisible) {\n        setShowTooltip(false);\n        setTimeout(() => setIsVisible(false), 150);\n      } else {\n        setIsVisible(true);\n        setTimeout(() => setShowTooltip(true), 10);\n      }\n    }\n  };\n\n  const handleMouseEnter = () => {\n    if (trigger === \"hover\") {\n      setIsVisible(true);\n      setTimeout(() => setShowTooltip(true), 10);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (trigger === \"hover\") {\n      setShowTooltip(false);\n      setTimeout(() => setIsVisible(false), 150);\n    }\n  };\n\n  const positionClasses = {\n    top: \"bottom-full left-1/2 transform -translate-x-1/2 mb-2\",\n    bottom: \"top-full left-1/2 transform -translate-x-1/2 mt-2\",\n    left: \"right-full top-1/2 transform -translate-y-1/2 mr-2\",\n    right: \"left-full top-1/2 transform -translate-y-1/2 ml-2\",\n  };\n\n  React.useEffect(() => {\n    if (trigger === \"click\" && isVisible) {\n      const handleClickOutside = (event: MouseEvent) => {\n        const target = event.target as Element;\n        if (!target.closest('[data-testid=\"rich-tooltip\"]') && !target.closest('[data-testid=\"rich-tooltip-trigger\"]')) {\n          setShowTooltip(false);\n          setTimeout(() => setIsVisible(false), 150);\n        }\n      };\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n  }, [isVisible, trigger]);\n\n  return (\n    <div className=\"relative inline-block\">\n      <div\n        onClick={handleToggle}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        data-testid=\"rich-tooltip-trigger\"\n      >\n        {children}\n      </div>\n      \n      {isVisible && (\n        <div\n          className={cn(\n            \"absolute z-50 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg transition-all duration-150\",\n            positionClasses[position],\n            width,\n            showTooltip ? \"opacity-100 scale-100\" : \"opacity-0 scale-95\",\n            className\n          )}\n          data-testid=\"rich-tooltip\"\n        >\n          {title && (\n            <div className=\"px-4 py-3 border-b border-gray-200 dark:border-gray-700\">\n              <h4 className=\"font-medium text-gray-900 dark:text-white\">\n                {title}\n              </h4>\n            </div>\n          )}\n          \n          <div className=\"p-4\">\n            {content}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Help Tooltip with Icon\ninterface ZohoHelpTooltipProps {\n  content: string | React.ReactNode;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\";\n  className?: string;\n}\n\nexport function ZohoHelpTooltip({\n  content,\n  position = \"top\",\n  className,\n}: ZohoHelpTooltipProps) {\n  return (\n    <ZohoTooltip content={content} position={position} className={className}>\n      <button\n        className=\"inline-flex items-center justify-center w-4 h-4 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n        data-testid=\"help-tooltip-trigger\"\n      >\n        <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n        </svg>\n      </button>\n    </ZohoTooltip>\n  );\n}","size_bytes":7935},"FutureHome/client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"FutureHome/client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"FutureHome/client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"FutureHome/client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"FutureHome/client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"FutureHome/client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"FutureHome/client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"FutureHome/client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"FutureHome/client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"FutureHome/client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"FutureHome/client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"FutureHome/client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"FutureHome/client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"FutureHome/client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"FutureHome/client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"FutureHome/client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"FutureHome/client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"FutureHome/client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"FutureHome/client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"FutureHome/client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"FutureHome/client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"FutureHome/client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"FutureHome/client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"FutureHome/client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"FutureHome/client/src/components/ui/layout.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Search } from \"lucide-react\";\nimport { ReactNode } from \"react\";\n\ninterface LayoutProps {\n  children: ReactNode;\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  return (\n    <div className=\"min-h-screen bg-aura-dark\">\n      {/* Top Navigation */}\n      <nav className=\"fixed top-0 w-full z-50 glass-effect\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <Link href=\"/\">\n                  <span className=\"text-2xl font-bold gradient-text font-mono cursor-pointer\">AURA</span>\n                </Link>\n              </div>\n              <div className=\"hidden md:block ml-10\">\n                <div className=\"flex items-baseline space-x-4\">\n                  <Link href=\"/\" className=\"text-aura-neon-blue hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors\">\n                    Home\n                  </Link>\n                  <Link href=\"/apps\" className=\"text-gray-300 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors\">\n                    All Apps\n                  </Link>\n                  <a href=\"#\" className=\"text-gray-300 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors\">\n                    Suites\n                  </a>\n                  <a href=\"#\" className=\"text-gray-300 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors\">\n                    Pricing\n                  </a>\n                  <a href=\"#\" className=\"text-gray-300 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors\">\n                    Support\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"relative hidden sm:block\">\n                <input \n                  type=\"text\" \n                  placeholder=\"Search apps...\" \n                  className=\"bg-aura-dark-secondary border border-aura-gray rounded-lg px-4 py-2 pl-10 text-sm focus:outline-none focus:border-aura-neon-blue focus:shadow-neon-blue transition-all\"\n                />\n                <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n              </div>\n              <Button className=\"bg-aura-neon-blue hover:bg-blue-600 text-black px-4 py-2 rounded-lg font-medium transition-colors\">\n                Sign In\n              </Button>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Main Content */}\n      <main className=\"pt-16\">\n        {children}\n      </main>\n\n      {/* Footer */}\n      <footer className=\"bg-aura-dark-secondary border-t border-aura-gray\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            <div>\n              <span className=\"text-2xl font-bold gradient-text font-mono\">AURA</span>\n              <p className=\"text-gray-300 mt-4\">\n                The next generation business suite with 80+ integrated applications.\n              </p>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-4\">Products</h4>\n              <ul className=\"space-y-2 text-gray-300\">\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Sales Suite</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Marketing Suite</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Finance Suite</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">All Apps</a></li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-4\">Resources</h4>\n              <ul className=\"space-y-2 text-gray-300\">\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Documentation</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">API Reference</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Support</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Training</a></li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-4\">Company</h4>\n              <ul className=\"space-y-2 text-gray-300\">\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">About</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Careers</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Blog</a></li>\n                <li><a href=\"#\" className=\"hover:text-white transition-colors\">Contact</a></li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"border-t border-aura-gray mt-8 pt-8 text-center text-gray-400\">\n            <p>&copy; 2024 Aura Corporation. All rights reserved.</p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","size_bytes":5277},"FutureHome/client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"FutureHome/client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"FutureHome/client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"FutureHome/client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"FutureHome/client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"FutureHome/client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"FutureHome/client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"FutureHome/client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\n\nconst ScrollArea = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, children, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={`relative overflow-hidden ${className}`}\n    {...props}\n  >\n    <div className=\"h-full w-full rounded-[inherit] overflow-y-auto scrollbar-thin scrollbar-thumb-aura-gray scrollbar-track-transparent\">\n      {children}\n    </div>\n  </div>\n))\nScrollArea.displayName = \"ScrollArea\"\n\nexport { ScrollArea }","size_bytes":509},"FutureHome/client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"FutureHome/client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"FutureHome/client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"FutureHome/client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"FutureHome/client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"FutureHome/client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"FutureHome/client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"FutureHome/client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"FutureHome/client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"FutureHome/client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"FutureHome/client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"FutureHome/client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"FutureHome/client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"FutureHome/client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"FutureHome/client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"FutureHome/client/src/components/ui/zoho-button.tsx":{"content":"import React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport { \n  Plus, \n  Search, \n  Filter, \n  Download, \n  Upload, \n  Settings, \n  MoreHorizontal,\n  Trash2,\n  Edit,\n  Copy,\n  Share2,\n  RefreshCw,\n  Save,\n  X,\n  Check\n} from \"lucide-react\";\n\ninterface ZohoButtonProps {\n  variant?: \"primary\" | \"secondary\" | \"danger\" | \"success\" | \"outline\" | \"ghost\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  icon?: \"plus\" | \"search\" | \"filter\" | \"download\" | \"upload\" | \"settings\" | \"more\" | \"trash\" | \"edit\" | \"copy\" | \"share\" | \"refresh\" | \"save\" | \"close\" | \"check\";\n  children?: React.ReactNode;\n  onClick?: () => void;\n  disabled?: boolean;\n  loading?: boolean;\n  className?: string;\n  fullWidth?: boolean;\n}\n\nconst iconMap = {\n  plus: Plus,\n  search: Search,\n  filter: Filter,\n  download: Download,\n  upload: Upload,\n  settings: Settings,\n  more: MoreHorizontal,\n  trash: Trash2,\n  edit: Edit,\n  copy: Copy,\n  share: Share2,\n  refresh: RefreshCw,\n  save: Save,\n  close: X,\n  check: Check,\n};\n\nexport function ZohoButton({\n  variant = \"primary\",\n  size = \"md\",\n  icon,\n  children,\n  onClick,\n  disabled = false,\n  loading = false,\n  className,\n  fullWidth = false,\n  ...props\n}: ZohoButtonProps) {\n  const IconComponent = icon ? iconMap[icon] : null;\n\n  const baseClasses = \"relative inline-flex items-center justify-center font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\";\n  \n  const variantClasses = {\n    primary: \"bg-blue-600 hover:bg-blue-700 text-white border border-blue-600 focus:ring-blue-500 shadow-sm\",\n    secondary: \"bg-gray-100 hover:bg-gray-200 text-gray-900 border border-gray-300 focus:ring-gray-500 dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-white dark:border-gray-600\",\n    danger: \"bg-red-600 hover:bg-red-700 text-white border border-red-600 focus:ring-red-500 shadow-sm\",\n    success: \"bg-green-600 hover:bg-green-700 text-white border border-green-600 focus:ring-green-500 shadow-sm\",\n    outline: \"bg-transparent hover:bg-gray-50 text-gray-700 border border-gray-300 focus:ring-blue-500 dark:hover:bg-gray-700 dark:text-gray-300 dark:border-gray-600\",\n    ghost: \"bg-transparent hover:bg-gray-100 text-gray-700 border-0 focus:ring-blue-500 dark:hover:bg-gray-700 dark:text-gray-300\",\n  };\n\n  const sizeClasses = {\n    sm: \"px-3 py-1.5 text-xs rounded-md gap-1.5\",\n    md: \"px-4 py-2 text-sm rounded-md gap-2\",\n    lg: \"px-6 py-3 text-base rounded-lg gap-2.5\",\n  };\n\n  const iconSizes = {\n    sm: \"w-3 h-3\",\n    md: \"w-4 h-4\", \n    lg: \"w-5 h-5\",\n  };\n\n  return (\n    <Button\n      className={cn(\n        baseClasses,\n        variantClasses[variant],\n        sizeClasses[size],\n        fullWidth && \"w-full\",\n        loading && \"cursor-wait\",\n        className\n      )}\n      onClick={onClick}\n      disabled={disabled || loading}\n      data-testid={`button-${variant}-${children?.toString().toLowerCase().replace(/\\s+/g, '-') || 'action'}`}\n      {...props}\n    >\n      {loading && (\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <RefreshCw className={cn(iconSizes[size], \"animate-spin\")} />\n        </div>\n      )}\n      \n      <div className={cn(\"flex items-center gap-2\", loading && \"opacity-0\")}>\n        {IconComponent && (\n          <IconComponent className={iconSizes[size]} />\n        )}\n        {children}\n      </div>\n    </Button>\n  );\n}\n\n// Toolbar component\ninterface ZohoToolbarProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport function ZohoToolbar({ children, className }: ZohoToolbarProps) {\n  return (\n    <div \n      className={cn(\n        \"flex items-center gap-2 p-4 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\",\n        className\n      )}\n      data-testid=\"toolbar-container\"\n    >\n      {children}\n    </div>\n  );\n}\n\n// Action Menu Component\ninterface ZohoActionMenuProps {\n  items: Array<{\n    label: string;\n    icon?: keyof typeof iconMap;\n    onClick: () => void;\n    disabled?: boolean;\n    variant?: \"default\" | \"danger\";\n  }>;\n  trigger?: React.ReactNode;\n  className?: string;\n}\n\nexport function ZohoActionMenu({ items, trigger, className }: ZohoActionMenuProps) {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  return (\n    <div className={cn(\"relative\", className)}>\n      <div\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"cursor-pointer\"\n        data-testid=\"action-menu-trigger\"\n      >\n        {trigger || <ZohoButton variant=\"ghost\" icon=\"more\" size=\"sm\" />}\n      </div>\n      \n      {isOpen && (\n        <>\n          <div \n            className=\"fixed inset-0 z-10\" \n            onClick={() => setIsOpen(false)}\n          />\n          <div className=\"absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-md shadow-lg border border-gray-200 dark:border-gray-700 z-20\">\n            <div className=\"py-1\">\n              {items.map((item, index) => {\n                const IconComponent = item.icon ? iconMap[item.icon] : null;\n                return (\n                  <button\n                    key={index}\n                    onClick={() => {\n                      item.onClick();\n                      setIsOpen(false);\n                    }}\n                    disabled={item.disabled}\n                    className={cn(\n                      \"flex items-center gap-2 w-full px-4 py-2 text-sm text-left hover:bg-gray-100 dark:hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed\",\n                      item.variant === \"danger\" && \"text-red-600 hover:bg-red-50 dark:hover:bg-red-900/20\"\n                    )}\n                    data-testid={`action-menu-item-${item.label.toLowerCase().replace(/\\s+/g, '-')}`}\n                  >\n                    {IconComponent && <IconComponent className=\"w-4 h-4\" />}\n                    {item.label}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}","size_bytes":6020},"FutureHome/client/src/components/ui/zoho-card.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { BarChart3, TrendingUp, TrendingDown, Users, DollarSign, Package, Activity } from \"lucide-react\";\n\ninterface ZohoCardProps {\n  title: string;\n  value?: string | number;\n  subtitle?: string;\n  trend?: {\n    value: number;\n    direction: \"up\" | \"down\";\n    period?: string;\n  };\n  icon?: \"chart\" | \"trending-up\" | \"trending-down\" | \"users\" | \"dollar\" | \"package\" | \"activity\";\n  variant?: \"default\" | \"primary\" | \"success\" | \"warning\" | \"danger\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  children?: React.ReactNode;\n  className?: string;\n  loading?: boolean;\n}\n\nconst iconMap = {\n  chart: BarChart3,\n  \"trending-up\": TrendingUp,\n  \"trending-down\": TrendingDown,\n  users: Users,\n  dollar: DollarSign,\n  package: Package,\n  activity: Activity,\n};\n\nconst variantColors = {\n  default: \"bg-white dark:bg-gray-800 border-gray-200 dark:border-gray-700\",\n  primary: \"bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800\",\n  success: \"bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800\",\n  warning: \"bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800\",\n  danger: \"bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800\",\n};\n\nconst iconColors = {\n  default: \"text-gray-600 dark:text-gray-400\",\n  primary: \"text-blue-600 dark:text-blue-400\",\n  success: \"text-green-600 dark:text-green-400\",\n  warning: \"text-yellow-600 dark:text-yellow-400\",\n  danger: \"text-red-600 dark:text-red-400\",\n};\n\nexport function ZohoCard({\n  title,\n  value,\n  subtitle,\n  trend,\n  icon,\n  variant = \"default\",\n  size = \"md\",\n  children,\n  className,\n  loading = false,\n}: ZohoCardProps) {\n  const IconComponent = icon ? iconMap[icon] : null;\n\n  const sizeClasses = {\n    sm: \"p-4\",\n    md: \"p-6\",\n    lg: \"p-8\",\n  };\n\n  if (loading) {\n    return (\n      <div className={cn(\n        \"rounded-lg border\",\n        variantColors[variant],\n        sizeClasses[size],\n        \"animate-pulse\",\n        className\n      )}>\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded w-1/2\"></div>\n          <div className=\"h-8 w-8 bg-gray-300 dark:bg-gray-600 rounded\"></div>\n        </div>\n        <div className=\"h-8 bg-gray-300 dark:bg-gray-600 rounded w-3/4 mb-2\"></div>\n        <div className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded w-1/3\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div \n      className={cn(\n        \"rounded-lg border shadow-sm hover:shadow-md transition-shadow duration-200\",\n        variantColors[variant],\n        sizeClasses[size],\n        className\n      )}\n      data-testid={`card-${title.toLowerCase().replace(/\\s+/g, '-')}`}\n    >\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n          {title}\n        </h3>\n        {IconComponent && (\n          <IconComponent className={cn(\"w-5 h-5\", iconColors[variant])} />\n        )}\n      </div>\n\n      {value && (\n        <div className=\"mb-2\">\n          <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            {value}\n          </div>\n        </div>\n      )}\n\n      {(subtitle || trend) && (\n        <div className=\"flex items-center justify-between text-sm\">\n          {subtitle && (\n            <span className=\"text-gray-500 dark:text-gray-400\">\n              {subtitle}\n            </span>\n          )}\n          {trend && (\n            <div className={cn(\n              \"flex items-center gap-1\",\n              trend.direction === \"up\" ? \"text-green-600 dark:text-green-400\" : \"text-red-600 dark:text-red-400\"\n            )}>\n              {trend.direction === \"up\" ? (\n                <TrendingUp className=\"w-3 h-3\" />\n              ) : (\n                <TrendingDown className=\"w-3 h-3\" />\n              )}\n              <span className=\"font-medium\">{trend.value}%</span>\n              {trend.period && (\n                <span className=\"text-gray-500 dark:text-gray-400\">\n                  {trend.period}\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n\n      {children && (\n        <div className=\"mt-4\">\n          {children}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Dashboard Grid Layout\ninterface ZohoDashboardGridProps {\n  children: React.ReactNode;\n  columns?: 1 | 2 | 3 | 4;\n  gap?: \"sm\" | \"md\" | \"lg\";\n  className?: string;\n}\n\nexport function ZohoDashboardGrid({ \n  children, \n  columns = 3,\n  gap = \"md\",\n  className \n}: ZohoDashboardGridProps) {\n  const gridCols = {\n    1: \"grid-cols-1\",\n    2: \"grid-cols-1 md:grid-cols-2\",\n    3: \"grid-cols-1 md:grid-cols-2 lg:grid-cols-3\",\n    4: \"grid-cols-1 md:grid-cols-2 lg:grid-cols-4\",\n  };\n\n  const gridGap = {\n    sm: \"gap-4\",\n    md: \"gap-6\",\n    lg: \"gap-8\",\n  };\n\n  return (\n    <div \n      className={cn(\n        \"grid\",\n        gridCols[columns],\n        gridGap[gap],\n        className\n      )}\n      data-testid=\"dashboard-grid\"\n    >\n      {children}\n    </div>\n  );\n}\n\n// Metric Widget Component\ninterface ZohoMetricWidgetProps {\n  title: string;\n  value: string | number;\n  change?: {\n    value: number;\n    period: string;\n  };\n  format?: \"number\" | \"currency\" | \"percentage\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  className?: string;\n}\n\nexport function ZohoMetricWidget({\n  title,\n  value,\n  change,\n  format = \"number\",\n  size = \"md\",\n  className,\n}: ZohoMetricWidgetProps) {\n  const formatValue = (val: string | number) => {\n    if (format === \"currency\") {\n      return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n      }).format(Number(val));\n    }\n    if (format === \"percentage\") {\n      return `${val}%`;\n    }\n    return val.toLocaleString();\n  };\n\n  return (\n    <ZohoCard\n      title={title}\n      value={formatValue(value)}\n      trend={change ? {\n        value: change.value,\n        direction: change.value >= 0 ? \"up\" : \"down\",\n        period: change.period,\n      } : undefined}\n      size={size}\n      className={className}\n    />\n  );\n}","size_bytes":6075},"FutureHome/client/src/components/ui/zoho-date-picker.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Calendar, ChevronLeft, ChevronRight, X } from \"lucide-react\";\n\ninterface ZohoDatePickerProps {\n  value?: Date;\n  onChange?: (date: Date | null) => void;\n  placeholder?: string;\n  label?: string;\n  error?: string;\n  required?: boolean;\n  disabled?: boolean;\n  minDate?: Date;\n  maxDate?: Date;\n  format?: \"MM/dd/yyyy\" | \"dd/MM/yyyy\" | \"yyyy-MM-dd\";\n  showTime?: boolean;\n  className?: string;\n}\n\nexport function ZohoDatePicker({\n  value,\n  onChange,\n  placeholder = \"Select date...\",\n  label,\n  error,\n  required,\n  disabled,\n  minDate,\n  maxDate,\n  format = \"MM/dd/yyyy\",\n  showTime = false,\n  className,\n}: ZohoDatePickerProps) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [currentMonth, setCurrentMonth] = React.useState(\n    value ? new Date(value.getFullYear(), value.getMonth()) : new Date()\n  );\n  const [timeInput, setTimeInput] = React.useState(\n    value ? `${value.getHours().toString().padStart(2, '0')}:${value.getMinutes().toString().padStart(2, '0')}` : \"12:00\"\n  );\n\n  const formatDate = (date: Date) => {\n    const day = date.getDate().toString().padStart(2, '0');\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const year = date.getFullYear();\n\n    switch (format) {\n      case \"dd/MM/yyyy\":\n        return `${day}/${month}/${year}`;\n      case \"yyyy-MM-dd\":\n        return `${year}-${month}-${day}`;\n      default:\n        return `${month}/${day}/${year}`;\n    }\n  };\n\n  const isDateDisabled = (date: Date) => {\n    if (minDate && date < minDate) return true;\n    if (maxDate && date > maxDate) return true;\n    return false;\n  };\n\n  const handleDateSelect = (date: Date) => {\n    if (isDateDisabled(date)) return;\n\n    let selectedDate = new Date(date);\n    \n    if (showTime && timeInput) {\n      const [hours, minutes] = timeInput.split(':').map(Number);\n      selectedDate.setHours(hours, minutes);\n    }\n\n    onChange?.(selectedDate);\n    if (!showTime) {\n      setIsOpen(false);\n    }\n  };\n\n  const handleTimeChange = (time: string) => {\n    setTimeInput(time);\n    if (value) {\n      const [hours, minutes] = time.split(':').map(Number);\n      const newDate = new Date(value);\n      newDate.setHours(hours, minutes);\n      onChange?.(newDate);\n    }\n  };\n\n  const handleClear = () => {\n    onChange?.(null);\n    setIsOpen(false);\n  };\n\n  const getDaysInMonth = (date: Date) => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const daysInMonth = lastDay.getDate();\n    const startingDayOfWeek = firstDay.getDay();\n\n    const days = [];\n\n    // Previous month's days\n    const prevMonth = new Date(year, month - 1, 0);\n    for (let i = startingDayOfWeek - 1; i >= 0; i--) {\n      days.push({\n        date: new Date(year, month - 1, prevMonth.getDate() - i),\n        isCurrentMonth: false,\n      });\n    }\n\n    // Current month's days\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push({\n        date: new Date(year, month, day),\n        isCurrentMonth: true,\n      });\n    }\n\n    // Next month's days\n    const remainingDays = 42 - days.length; // 6 rows × 7 days\n    for (let day = 1; day <= remainingDays; day++) {\n      days.push({\n        date: new Date(year, month + 1, day),\n        isCurrentMonth: false,\n      });\n    }\n\n    return days;\n  };\n\n  const monthNames = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  const weekDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  const displayValue = value ? formatDate(value) + (showTime ? ` ${timeInput}` : \"\") : \"\";\n\n  return (\n    <div className=\"relative w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n\n      <div className=\"relative\">\n        <button\n          type=\"button\"\n          onClick={() => !disabled && setIsOpen(!isOpen)}\n          disabled={disabled}\n          className={cn(\n            \"w-full px-4 py-2 text-left border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\",\n            error && \"border-red-500 focus:ring-red-500 focus:border-red-500\",\n            disabled && \"opacity-50 cursor-not-allowed\",\n            className\n          )}\n          data-testid=\"date-picker-trigger\"\n        >\n          <div className=\"flex items-center justify-between\">\n            <span className={cn(\n              displayValue ? \"text-gray-900 dark:text-white\" : \"text-gray-500 dark:text-gray-400\"\n            )}>\n              {displayValue || placeholder}\n            </span>\n            <div className=\"flex items-center gap-1\">\n              {value && (\n                <button\n                  type=\"button\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleClear();\n                  }}\n                  className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n                  data-testid=\"date-picker-clear\"\n                >\n                  <X className=\"w-4 h-4\" />\n                </button>\n              )}\n              <Calendar className=\"w-4 h-4 text-gray-400\" />\n            </div>\n          </div>\n        </button>\n\n        {isOpen && (\n          <>\n            <div \n              className=\"fixed inset-0 z-10\" \n              onClick={() => setIsOpen(false)}\n            />\n            <div className=\"absolute z-20 mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg p-4 w-80\">\n              {/* Month/Year Header */}\n              <div className=\"flex items-center justify-between mb-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => setCurrentMonth(new Date(currentMonth.getFullYear(), currentMonth.getMonth() - 1))}\n                  className=\"p-1 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\"\n                  data-testid=\"date-picker-prev-month\"\n                >\n                  <ChevronLeft className=\"w-4 h-4\" />\n                </button>\n                \n                <div className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  {monthNames[currentMonth.getMonth()]} {currentMonth.getFullYear()}\n                </div>\n                \n                <button\n                  type=\"button\"\n                  onClick={() => setCurrentMonth(new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1))}\n                  className=\"p-1 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\"\n                  data-testid=\"date-picker-next-month\"\n                >\n                  <ChevronRight className=\"w-4 h-4\" />\n                </button>\n              </div>\n\n              {/* Week Days */}\n              <div className=\"grid grid-cols-7 gap-1 mb-2\">\n                {weekDays.map((day) => (\n                  <div key={day} className=\"text-center text-xs font-medium text-gray-500 dark:text-gray-400 py-2\">\n                    {day}\n                  </div>\n                ))}\n              </div>\n\n              {/* Calendar Days */}\n              <div className=\"grid grid-cols-7 gap-1\">\n                {getDaysInMonth(currentMonth).map((day, index) => {\n                  const isToday = day.date.toDateString() === new Date().toDateString();\n                  const isSelected = value && day.date.toDateString() === value.toDateString();\n                  const isDisabled = isDateDisabled(day.date);\n\n                  return (\n                    <button\n                      key={index}\n                      type=\"button\"\n                      onClick={() => handleDateSelect(day.date)}\n                      disabled={isDisabled}\n                      className={cn(\n                        \"w-8 h-8 text-sm rounded transition-colors duration-200\",\n                        day.isCurrentMonth ? \"text-gray-900 dark:text-white\" : \"text-gray-400 dark:text-gray-500\",\n                        isToday && \"bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400\",\n                        isSelected && \"bg-blue-600 text-white\",\n                        !isDisabled && !isSelected && \"hover:bg-gray-100 dark:hover:bg-gray-700\",\n                        isDisabled && \"opacity-50 cursor-not-allowed\"\n                      )}\n                      data-testid={`date-${day.date.getDate()}`}\n                    >\n                      {day.date.getDate()}\n                    </button>\n                  );\n                })}\n              </div>\n\n              {/* Time Picker */}\n              {showTime && (\n                <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Time\n                  </label>\n                  <input\n                    type=\"time\"\n                    value={timeInput}\n                    onChange={(e) => handleTimeChange(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    data-testid=\"time-picker\"\n                  />\n                </div>\n              )}\n\n              {/* Actions */}\n              <div className=\"flex justify-end gap-2 mt-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => setIsOpen(false)}\n                  className=\"px-3 py-1 text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200\"\n                  data-testid=\"date-picker-cancel\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (value) {\n                      setIsOpen(false);\n                    }\n                  }}\n                  disabled={!value}\n                  className=\"px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  data-testid=\"date-picker-apply\"\n                >\n                  Apply\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n\n      {error && (\n        <div className=\"mt-1 text-sm text-red-600 dark:text-red-400\">\n          {error}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Date Range Picker\ninterface ZohoDateRangePickerProps {\n  startDate?: Date;\n  endDate?: Date;\n  onChange?: (startDate: Date | null, endDate: Date | null) => void;\n  placeholder?: string;\n  label?: string;\n  error?: string;\n  required?: boolean;\n  disabled?: boolean;\n  className?: string;\n}\n\nexport function ZohoDateRangePicker({\n  startDate,\n  endDate,\n  onChange,\n  placeholder = \"Select date range...\",\n  label,\n  error,\n  required,\n  disabled,\n  className,\n}: ZohoDateRangePickerProps) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [selectedStart, setSelectedStart] = React.useState<Date | null>(startDate || null);\n  const [selectedEnd, setSelectedEnd] = React.useState<Date | null>(endDate || null);\n  const [hoveredDate, setHoveredDate] = React.useState<Date | null>(null);\n\n  const formatDateRange = () => {\n    if (startDate && endDate) {\n      return `${startDate.toLocaleDateString()} - ${endDate.toLocaleDateString()}`;\n    }\n    if (startDate) {\n      return `${startDate.toLocaleDateString()} - ...`;\n    }\n    return \"\";\n  };\n\n  const handleDateClick = (date: Date) => {\n    if (!selectedStart || (selectedStart && selectedEnd)) {\n      setSelectedStart(date);\n      setSelectedEnd(null);\n    } else if (selectedStart && !selectedEnd) {\n      if (date >= selectedStart) {\n        setSelectedEnd(date);\n        onChange?.(selectedStart, date);\n        setIsOpen(false);\n      } else {\n        setSelectedStart(date);\n        setSelectedEnd(null);\n      }\n    }\n  };\n\n  const isInRange = (date: Date) => {\n    if (!selectedStart) return false;\n    \n    const end = selectedEnd || hoveredDate;\n    if (!end) return false;\n    \n    return date >= selectedStart && date <= end;\n  };\n\n  const displayValue = formatDateRange() || placeholder;\n\n  return (\n    <div className=\"relative w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n\n      <button\n        type=\"button\"\n        onClick={() => !disabled && setIsOpen(!isOpen)}\n        disabled={disabled}\n        className={cn(\n          \"w-full px-4 py-2 text-left border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\",\n          error && \"border-red-500 focus:ring-red-500 focus:border-red-500\",\n          disabled && \"opacity-50 cursor-not-allowed\",\n          className\n        )}\n        data-testid=\"date-range-picker-trigger\"\n      >\n        <div className=\"flex items-center justify-between\">\n          <span className={cn(\n            startDate || endDate ? \"text-gray-900 dark:text-white\" : \"text-gray-500 dark:text-gray-400\"\n          )}>\n            {displayValue}\n          </span>\n          <Calendar className=\"w-4 h-4 text-gray-400\" />\n        </div>\n      </button>\n\n      {/* Calendar implementation would be similar to single date picker but with range selection logic */}\n\n      {error && (\n        <div className=\"mt-1 text-sm text-red-600 dark:text-red-400\">\n          {error}\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":14084},"FutureHome/client/src/components/ui/zoho-form.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { \n  Eye, \n  EyeOff, \n  Calendar,\n  ChevronDown,\n  X,\n  Plus,\n  Search,\n  Upload,\n  AlertCircle,\n  Check\n} from \"lucide-react\";\n\ninterface ZohoInputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  error?: string;\n  hint?: string;\n  required?: boolean;\n  icon?: React.ReactNode;\n  suffix?: React.ReactNode;\n  loading?: boolean;\n}\n\nexport function ZohoInput({\n  label,\n  error,\n  hint,\n  required,\n  icon,\n  suffix,\n  loading,\n  className,\n  ...props\n}: ZohoInputProps) {\n  const [showPassword, setShowPassword] = React.useState(false);\n  const isPassword = props.type === \"password\";\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      \n      <div className=\"relative\">\n        {icon && (\n          <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\">\n            {icon}\n          </div>\n        )}\n        \n        <input\n          {...props}\n          type={isPassword ? (showPassword ? \"text\" : \"password\") : props.type}\n          className={cn(\n            \"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\",\n            icon && \"pl-10\",\n            (isPassword || suffix) && \"pr-10\",\n            error && \"border-red-500 focus:ring-red-500 focus:border-red-500\",\n            loading && \"opacity-50 cursor-not-allowed\",\n            className\n          )}\n          disabled={loading || props.disabled}\n          data-testid={`input-${props.name || 'field'}`}\n        />\n        \n        {isPassword && (\n          <button\n            type=\"button\"\n            onClick={() => setShowPassword(!showPassword)}\n            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n            data-testid=\"toggle-password-visibility\"\n          >\n            {showPassword ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\n          </button>\n        )}\n        \n        {suffix && !isPassword && (\n          <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n            {suffix}\n          </div>\n        )}\n      </div>\n      \n      {(error || hint) && (\n        <div className=\"mt-1 text-sm\">\n          {error && (\n            <div className=\"text-red-600 dark:text-red-400 flex items-center gap-1\">\n              <AlertCircle className=\"w-3 h-3\" />\n              {error}\n            </div>\n          )}\n          {hint && !error && (\n            <div className=\"text-gray-500 dark:text-gray-400\">\n              {hint}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface ZohoSelectProps {\n  label?: string;\n  error?: string;\n  hint?: string;\n  required?: boolean;\n  options: Array<{ value: string; label: string; disabled?: boolean }>;\n  value?: string;\n  onChange?: (value: string) => void;\n  placeholder?: string;\n  loading?: boolean;\n  multiple?: boolean;\n  searchable?: boolean;\n  className?: string;\n}\n\nexport function ZohoSelect({\n  label,\n  error,\n  hint,\n  required,\n  options,\n  value,\n  onChange,\n  placeholder = \"Select option...\",\n  loading,\n  multiple,\n  searchable,\n  className,\n}: ZohoSelectProps) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [selectedValues, setSelectedValues] = React.useState<string[]>(\n    multiple ? (value ? value.split(\",\") : []) : []\n  );\n\n  const filteredOptions = React.useMemo(() => {\n    if (!searchable || !searchTerm) return options;\n    return options.filter(option =>\n      option.label.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  }, [options, searchTerm, searchable]);\n\n  const handleSelect = (optionValue: string) => {\n    if (multiple) {\n      const newValues = selectedValues.includes(optionValue)\n        ? selectedValues.filter(v => v !== optionValue)\n        : [...selectedValues, optionValue];\n      \n      setSelectedValues(newValues);\n      onChange?.(newValues.join(\",\"));\n    } else {\n      onChange?.(optionValue);\n      setIsOpen(false);\n    }\n  };\n\n  const displayValue = React.useMemo(() => {\n    if (multiple) {\n      return selectedValues.length > 0\n        ? `${selectedValues.length} selected`\n        : placeholder;\n    }\n    \n    const selected = options.find(opt => opt.value === value);\n    return selected?.label || placeholder;\n  }, [value, selectedValues, options, placeholder, multiple]);\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      \n      <div className=\"relative\">\n        <button\n          type=\"button\"\n          onClick={() => setIsOpen(!isOpen)}\n          disabled={loading}\n          className={cn(\n            \"w-full px-4 py-2 text-left border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\",\n            error && \"border-red-500 focus:ring-red-500 focus:border-red-500\",\n            loading && \"opacity-50 cursor-not-allowed\",\n            className\n          )}\n          data-testid={`select-${label?.toLowerCase().replace(/\\s+/g, '-') || 'field'}`}\n        >\n          <div className=\"flex items-center justify-between\">\n            <span className={cn(\n              value || selectedValues.length > 0 ? \"text-gray-900 dark:text-white\" : \"text-gray-500 dark:text-gray-400\"\n            )}>\n              {displayValue}\n            </span>\n            <ChevronDown className={cn(\"w-4 h-4 transition-transform duration-200\", isOpen && \"rotate-180\")} />\n          </div>\n        </button>\n        \n        {isOpen && (\n          <>\n            <div \n              className=\"fixed inset-0 z-10\" \n              onClick={() => setIsOpen(false)}\n            />\n            <div className=\"absolute z-20 w-full mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-md shadow-lg max-h-60 overflow-y-auto\">\n              {searchable && (\n                <div className=\"p-2 border-b border-gray-200 dark:border-gray-700\">\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search options...\"\n                      value={searchTerm}\n                      onChange={(e) => setSearchTerm(e.target.value)}\n                      className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      data-testid=\"select-search-input\"\n                    />\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"py-1\">\n                {filteredOptions.map((option) => (\n                  <button\n                    key={option.value}\n                    onClick={() => handleSelect(option.value)}\n                    disabled={option.disabled}\n                    className={cn(\n                      \"w-full px-4 py-2 text-left hover:bg-gray-100 dark:hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed\",\n                      (value === option.value || selectedValues.includes(option.value)) && \"bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400\"\n                    )}\n                    data-testid={`option-${option.value}`}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <span>{option.label}</span>\n                      {(value === option.value || selectedValues.includes(option.value)) && (\n                        <Check className=\"w-4 h-4\" />\n                      )}\n                    </div>\n                  </button>\n                ))}\n                \n                {filteredOptions.length === 0 && (\n                  <div className=\"px-4 py-2 text-gray-500 dark:text-gray-400 text-center\">\n                    No options found\n                  </div>\n                )}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n      \n      {(error || hint) && (\n        <div className=\"mt-1 text-sm\">\n          {error && (\n            <div className=\"text-red-600 dark:text-red-400 flex items-center gap-1\">\n              <AlertCircle className=\"w-3 h-3\" />\n              {error}\n            </div>\n          )}\n          {hint && !error && (\n            <div className=\"text-gray-500 dark:text-gray-400\">\n              {hint}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface ZohoTextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  label?: string;\n  error?: string;\n  hint?: string;\n  required?: boolean;\n  loading?: boolean;\n  autoResize?: boolean;\n}\n\nexport function ZohoTextarea({\n  label,\n  error,\n  hint,\n  required,\n  loading,\n  autoResize,\n  className,\n  ...props\n}: ZohoTextareaProps) {\n  const textareaRef = React.useRef<HTMLTextAreaElement>(null);\n\n  React.useEffect(() => {\n    if (autoResize && textareaRef.current) {\n      const textarea = textareaRef.current;\n      textarea.style.height = \"auto\";\n      textarea.style.height = `${textarea.scrollHeight}px`;\n    }\n  }, [props.value, autoResize]);\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      \n      <textarea\n        ref={textareaRef}\n        {...props}\n        className={cn(\n          \"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200 resize-none\",\n          error && \"border-red-500 focus:ring-red-500 focus:border-red-500\",\n          loading && \"opacity-50 cursor-not-allowed\",\n          !autoResize && \"resize-y\",\n          className\n        )}\n        disabled={loading || props.disabled}\n        data-testid={`textarea-${props.name || 'field'}`}\n      />\n      \n      {(error || hint) && (\n        <div className=\"mt-1 text-sm\">\n          {error && (\n            <div className=\"text-red-600 dark:text-red-400 flex items-center gap-1\">\n              <AlertCircle className=\"w-3 h-3\" />\n              {error}\n            </div>\n          )}\n          {hint && !error && (\n            <div className=\"text-gray-500 dark:text-gray-400\">\n              {hint}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface ZohoFileUploadProps {\n  label?: string;\n  error?: string;\n  hint?: string;\n  required?: boolean;\n  accept?: string;\n  multiple?: boolean;\n  maxSize?: number; // in MB\n  onFileSelect?: (files: FileList | null) => void;\n  loading?: boolean;\n  className?: string;\n}\n\nexport function ZohoFileUpload({\n  label,\n  error,\n  hint,\n  required,\n  accept,\n  multiple,\n  maxSize,\n  onFileSelect,\n  loading,\n  className,\n}: ZohoFileUploadProps) {\n  const [dragActive, setDragActive] = React.useState(false);\n  const [selectedFiles, setSelectedFiles] = React.useState<File[]>([]);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const handleFiles = (files: FileList | null) => {\n    if (!files) return;\n    \n    const fileArray = Array.from(files);\n    \n    // Validate file size\n    if (maxSize) {\n      const oversizedFiles = fileArray.filter(file => file.size > maxSize * 1024 * 1024);\n      if (oversizedFiles.length > 0) {\n        alert(`Files must be smaller than ${maxSize}MB`);\n        return;\n      }\n    }\n    \n    setSelectedFiles(fileArray);\n    onFileSelect?.(files);\n  };\n\n  const handleDrag = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\n      setDragActive(true);\n    } else if (e.type === \"dragleave\") {\n      setDragActive(false);\n    }\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    \n    handleFiles(e.dataTransfer.files);\n  };\n\n  const removeFile = (index: number) => {\n    const newFiles = selectedFiles.filter((_, i) => i !== index);\n    setSelectedFiles(newFiles);\n    \n    // Create new FileList-like object\n    const dt = new DataTransfer();\n    newFiles.forEach(file => dt.items.add(file));\n    onFileSelect?.(dt.files);\n  };\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      \n      <div\n        onDragEnter={handleDrag}\n        onDragLeave={handleDrag}\n        onDragOver={handleDrag}\n        onDrop={handleDrop}\n        className={cn(\n          \"border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg p-6 text-center hover:border-gray-400 dark:hover:border-gray-500 transition-colors duration-200\",\n          dragActive && \"border-blue-500 bg-blue-50 dark:bg-blue-900/20\",\n          error && \"border-red-500\",\n          loading && \"opacity-50 cursor-not-allowed\",\n          className\n        )}\n        data-testid=\"file-upload-zone\"\n      >\n        <input\n          ref={inputRef}\n          type=\"file\"\n          accept={accept}\n          multiple={multiple}\n          onChange={(e) => handleFiles(e.target.files)}\n          className=\"hidden\"\n          disabled={loading}\n          data-testid=\"file-upload-input\"\n        />\n        \n        <Upload className=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\n        <div className=\"text-gray-600 dark:text-gray-400\">\n          <button\n            type=\"button\"\n            onClick={() => inputRef.current?.click()}\n            disabled={loading}\n            className=\"text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 font-medium\"\n            data-testid=\"file-upload-button\"\n          >\n            Click to upload\n          </button>\n          <span> or drag and drop</span>\n        </div>\n        {accept && (\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n            Accepted formats: {accept}\n          </div>\n        )}\n        {maxSize && (\n          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n            Max size: {maxSize}MB\n          </div>\n        )}\n      </div>\n      \n      {/* Selected Files */}\n      {selectedFiles.length > 0 && (\n        <div className=\"mt-3 space-y-2\">\n          {selectedFiles.map((file, index) => (\n            <div\n              key={index}\n              className=\"flex items-center justify-between p-2 bg-gray-50 dark:bg-gray-700 rounded-md\"\n              data-testid={`selected-file-${index}`}\n            >\n              <div className=\"flex items-center gap-2\">\n                <div className=\"text-sm text-gray-900 dark:text-white font-medium\">\n                  {file.name}\n                </div>\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  ({(file.size / 1024 / 1024).toFixed(2)} MB)\n                </div>\n              </div>\n              <button\n                type=\"button\"\n                onClick={() => removeFile(index)}\n                className=\"text-gray-400 hover:text-red-600 dark:hover:text-red-400\"\n                data-testid={`remove-file-${index}`}\n              >\n                <X className=\"w-4 h-4\" />\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n      \n      {(error || hint) && (\n        <div className=\"mt-1 text-sm\">\n          {error && (\n            <div className=\"text-red-600 dark:text-red-400 flex items-center gap-1\">\n              <AlertCircle className=\"w-3 h-3\" />\n              {error}\n            </div>\n          )}\n          {hint && !error && (\n            <div className=\"text-gray-500 dark:text-gray-400\">\n              {hint}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Form Layout Components\ninterface ZohoFormProps {\n  children: React.ReactNode;\n  onSubmit?: (e: React.FormEvent) => void;\n  className?: string;\n}\n\nexport function ZohoForm({ children, onSubmit, className }: ZohoFormProps) {\n  return (\n    <form \n      onSubmit={onSubmit}\n      className={cn(\"space-y-6\", className)}\n      data-testid=\"zoho-form\"\n    >\n      {children}\n    </form>\n  );\n}\n\ninterface ZohoFormRowProps {\n  children: React.ReactNode;\n  columns?: 1 | 2 | 3 | 4;\n  gap?: \"sm\" | \"md\" | \"lg\";\n  className?: string;\n}\n\nexport function ZohoFormRow({ \n  children, \n  columns = 1,\n  gap = \"md\",\n  className \n}: ZohoFormRowProps) {\n  const gridCols = {\n    1: \"grid-cols-1\",\n    2: \"grid-cols-1 md:grid-cols-2\",\n    3: \"grid-cols-1 md:grid-cols-3\",\n    4: \"grid-cols-1 md:grid-cols-4\",\n  };\n\n  const gridGap = {\n    sm: \"gap-4\",\n    md: \"gap-6\",\n    lg: \"gap-8\",\n  };\n\n  return (\n    <div \n      className={cn(\n        \"grid\",\n        gridCols[columns],\n        gridGap[gap],\n        className\n      )}\n      data-testid=\"form-row\"\n    >\n      {children}\n    </div>\n  );\n}","size_bytes":17927},"FutureHome/client/src/components/ui/zoho-loading.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { RefreshCw, Loader2 } from \"lucide-react\";\n\ninterface ZohoSpinnerProps {\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\";\n  variant?: \"default\" | \"primary\" | \"white\";\n  className?: string;\n}\n\nexport function ZohoSpinner({ \n  size = \"md\", \n  variant = \"default\",\n  className \n}: ZohoSpinnerProps) {\n  const sizeClasses = {\n    sm: \"w-4 h-4\",\n    md: \"w-6 h-6\",\n    lg: \"w-8 h-8\",\n    xl: \"w-12 h-12\",\n  };\n\n  const variantClasses = {\n    default: \"text-gray-600 dark:text-gray-400\",\n    primary: \"text-blue-600 dark:text-blue-400\",\n    white: \"text-white\",\n  };\n\n  return (\n    <Loader2 \n      className={cn(\n        \"animate-spin\",\n        sizeClasses[size],\n        variantClasses[variant],\n        className\n      )}\n      data-testid=\"loading-spinner\"\n    />\n  );\n}\n\ninterface ZohoLoadingOverlayProps {\n  isLoading: boolean;\n  message?: string;\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport function ZohoLoadingOverlay({\n  isLoading,\n  message = \"Loading...\",\n  children,\n  className,\n}: ZohoLoadingOverlayProps) {\n  return (\n    <div className={cn(\"relative\", className)}>\n      {children}\n      \n      {isLoading && (\n        <div className=\"absolute inset-0 bg-white bg-opacity-75 dark:bg-gray-900 dark:bg-opacity-75 flex items-center justify-center z-10\">\n          <div className=\"flex flex-col items-center gap-3\">\n            <ZohoSpinner size=\"lg\" variant=\"primary\" />\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              {message}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Skeleton Components\ninterface ZohoSkeletonProps {\n  className?: string;\n  animate?: boolean;\n}\n\nexport function ZohoSkeleton({ \n  className, \n  animate = true \n}: ZohoSkeletonProps) {\n  return (\n    <div\n      className={cn(\n        \"bg-gray-300 dark:bg-gray-600 rounded\",\n        animate && \"animate-pulse\",\n        className\n      )}\n      data-testid=\"skeleton\"\n    />\n  );\n}\n\nexport function ZohoSkeletonText({ \n  lines = 3,\n  className \n}: { \n  lines?: number;\n  className?: string;\n}) {\n  return (\n    <div className={cn(\"space-y-2\", className)}>\n      {Array.from({ length: lines }).map((_, index) => (\n        <ZohoSkeleton\n          key={index}\n          className={cn(\n            \"h-4\",\n            index === lines - 1 ? \"w-3/4\" : \"w-full\"\n          )}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport function ZohoSkeletonCard({ className }: { className?: string }) {\n  return (\n    <div className={cn(\"p-6 border border-gray-200 dark:border-gray-700 rounded-lg\", className)}>\n      <div className=\"flex items-center gap-4 mb-4\">\n        <ZohoSkeleton className=\"w-10 h-10 rounded-full\" />\n        <div className=\"flex-1\">\n          <ZohoSkeleton className=\"h-4 w-1/2 mb-2\" />\n          <ZohoSkeleton className=\"h-3 w-1/4\" />\n        </div>\n      </div>\n      <ZohoSkeletonText lines={3} />\n    </div>\n  );\n}\n\nexport function ZohoSkeletonTable({ \n  rows = 5,\n  columns = 4,\n  className \n}: { \n  rows?: number;\n  columns?: number;\n  className?: string;\n}) {\n  return (\n    <div className={cn(\"border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden\", className)}>\n      {/* Header */}\n      <div className=\"bg-gray-50 dark:bg-gray-700 p-4 border-b border-gray-200 dark:border-gray-600\">\n        <div className=\"grid gap-4\" style={{ gridTemplateColumns: `repeat(${columns}, 1fr)` }}>\n          {Array.from({ length: columns }).map((_, index) => (\n            <ZohoSkeleton key={index} className=\"h-4 w-full\" />\n          ))}\n        </div>\n      </div>\n      \n      {/* Rows */}\n      {Array.from({ length: rows }).map((_, rowIndex) => (\n        <div key={rowIndex} className=\"p-4 border-b border-gray-200 dark:border-gray-600 last:border-b-0\">\n          <div className=\"grid gap-4\" style={{ gridTemplateColumns: `repeat(${columns}, 1fr)` }}>\n            {Array.from({ length: columns }).map((_, colIndex) => (\n              <ZohoSkeleton key={colIndex} className=\"h-4 w-full\" />\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n// Loading Button\ninterface ZohoLoadingButtonProps {\n  isLoading: boolean;\n  loadingText?: string;\n  children: React.ReactNode;\n  onClick?: () => void;\n  disabled?: boolean;\n  variant?: \"primary\" | \"secondary\" | \"outline\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  className?: string;\n}\n\nexport function ZohoLoadingButton({\n  isLoading,\n  loadingText = \"Loading...\",\n  children,\n  onClick,\n  disabled,\n  variant = \"primary\",\n  size = \"md\",\n  className,\n}: ZohoLoadingButtonProps) {\n  const baseClasses = \"relative inline-flex items-center justify-center font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\";\n  \n  const variantClasses = {\n    primary: \"bg-blue-600 hover:bg-blue-700 text-white border border-blue-600 focus:ring-blue-500 shadow-sm\",\n    secondary: \"bg-gray-100 hover:bg-gray-200 text-gray-900 border border-gray-300 focus:ring-gray-500 dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-white dark:border-gray-600\",\n    outline: \"bg-transparent hover:bg-gray-50 text-gray-700 border border-gray-300 focus:ring-blue-500 dark:hover:bg-gray-700 dark:text-gray-300 dark:border-gray-600\",\n  };\n\n  const sizeClasses = {\n    sm: \"px-3 py-1.5 text-xs rounded-md\",\n    md: \"px-4 py-2 text-sm rounded-md\",\n    lg: \"px-6 py-3 text-base rounded-lg\",\n  };\n\n  return (\n    <button\n      onClick={onClick}\n      disabled={disabled || isLoading}\n      className={cn(\n        baseClasses,\n        variantClasses[variant],\n        sizeClasses[size],\n        isLoading && \"cursor-wait\",\n        className\n      )}\n      data-testid=\"loading-button\"\n    >\n      {isLoading && (\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <ZohoSpinner \n            size={size === \"lg\" ? \"md\" : \"sm\"} \n            variant={variant === \"primary\" ? \"white\" : \"primary\"} \n          />\n        </div>\n      )}\n      \n      <div className={cn(\"flex items-center gap-2\", isLoading && \"opacity-0\")}>\n        {isLoading ? loadingText : children}\n      </div>\n    </button>\n  );\n}\n\n// Page Loading\ninterface ZohoPageLoadingProps {\n  message?: string;\n  showLogo?: boolean;\n  className?: string;\n}\n\nexport function ZohoPageLoading({\n  message = \"Loading application...\",\n  showLogo = true,\n  className,\n}: ZohoPageLoadingProps) {\n  return (\n    <div className={cn(\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\", className)}>\n      <div className=\"flex flex-col items-center gap-6\">\n        {showLogo && (\n          <div className=\"text-3xl font-bold text-blue-600 dark:text-blue-400\">\n            Aura\n          </div>\n        )}\n        \n        <div className=\"flex flex-col items-center gap-3\">\n          <ZohoSpinner size=\"lg\" variant=\"primary\" />\n          <div className=\"text-gray-600 dark:text-gray-400\">\n            {message}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Progressive Loading\ninterface ZohoProgressiveLoadingProps {\n  steps: Array<{\n    id: string;\n    title: string;\n    completed: boolean;\n  }>;\n  currentStep?: string;\n  className?: string;\n}\n\nexport function ZohoProgressiveLoading({\n  steps,\n  currentStep,\n  className,\n}: ZohoProgressiveLoadingProps) {\n  return (\n    <div className={cn(\"space-y-4\", className)}>\n      {steps.map((step) => {\n        const isActive = step.id === currentStep;\n        const isCompleted = step.completed;\n        \n        return (\n          <div\n            key={step.id}\n            className=\"flex items-center gap-3\"\n            data-testid={`loading-step-${step.id}`}\n          >\n            <div className={cn(\n              \"w-6 h-6 rounded-full flex items-center justify-center border-2\",\n              isCompleted && \"bg-green-600 border-green-600 text-white\",\n              isActive && !isCompleted && \"border-blue-600 text-blue-600\",\n              !isActive && !isCompleted && \"border-gray-300 text-gray-300\"\n            )}>\n              {isCompleted ? (\n                <span className=\"text-xs\">✓</span>\n              ) : isActive ? (\n                <ZohoSpinner size=\"sm\" variant=\"primary\" />\n              ) : (\n                <span className=\"w-2 h-2 bg-current rounded-full\" />\n              )}\n            </div>\n            \n            <div className={cn(\n              \"text-sm\",\n              isCompleted && \"text-green-600 dark:text-green-400\",\n              isActive && !isCompleted && \"text-blue-600 dark:text-blue-400 font-medium\",\n              !isActive && !isCompleted && \"text-gray-500 dark:text-gray-400\"\n            )}>\n              {step.title}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}","size_bytes":8762},"FutureHome/client/src/components/ui/zoho-modal.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { X, AlertTriangle, CheckCircle, Info, AlertCircle } from \"lucide-react\";\nimport { ZohoButton } from \"./zoho-button\";\n\ninterface ZohoModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\" | \"full\";\n  children: React.ReactNode;\n  footer?: React.ReactNode;\n  closeOnBackdrop?: boolean;\n  className?: string;\n}\n\nexport function ZohoModal({\n  isOpen,\n  onClose,\n  title,\n  size = \"md\",\n  children,\n  footer,\n  closeOnBackdrop = true,\n  className,\n}: ZohoModalProps) {\n  React.useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n    \n    return () => {\n      document.body.style.overflow = \"unset\";\n    };\n  }, [isOpen]);\n\n  React.useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === \"Escape\" && isOpen) {\n        onClose();\n      }\n    };\n    \n    document.addEventListener(\"keydown\", handleEscape);\n    return () => document.removeEventListener(\"keydown\", handleEscape);\n  }, [isOpen, onClose]);\n\n  if (!isOpen) return null;\n\n  const sizeClasses = {\n    sm: \"max-w-md\",\n    md: \"max-w-lg\",\n    lg: \"max-w-2xl\",\n    xl: \"max-w-4xl\",\n    full: \"max-w-full mx-4\",\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\n      {/* Backdrop */}\n      <div\n        className=\"absolute inset-0 bg-black bg-opacity-50 backdrop-blur-sm\"\n        onClick={closeOnBackdrop ? onClose : undefined}\n        data-testid=\"modal-backdrop\"\n      />\n      \n      {/* Modal */}\n      <div\n        className={cn(\n          \"relative w-full bg-white dark:bg-gray-800 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 max-h-[90vh] overflow-hidden\",\n          sizeClasses[size],\n          className\n        )}\n        data-testid=\"modal-container\"\n      >\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\n          {title && (\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n              {title}\n            </h3>\n          )}\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n            data-testid=\"modal-close-button\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n        </div>\n        \n        {/* Content */}\n        <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-120px)]\">\n          {children}\n        </div>\n        \n        {/* Footer */}\n        {footer && (\n          <div className=\"flex items-center justify-end gap-3 p-6 bg-gray-50 dark:bg-gray-700 border-t border-gray-200 dark:border-gray-600\">\n            {footer}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Confirmation Dialog\ninterface ZohoConfirmDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: () => void;\n  title: string;\n  message: string;\n  type?: \"default\" | \"warning\" | \"danger\";\n  confirmText?: string;\n  cancelText?: string;\n  loading?: boolean;\n}\n\nexport function ZohoConfirmDialog({\n  isOpen,\n  onClose,\n  onConfirm,\n  title,\n  message,\n  type = \"default\",\n  confirmText = \"Confirm\",\n  cancelText = \"Cancel\",\n  loading = false,\n}: ZohoConfirmDialogProps) {\n  const iconMap = {\n    default: <Info className=\"w-6 h-6 text-blue-600\" />,\n    warning: <AlertTriangle className=\"w-6 h-6 text-yellow-600\" />,\n    danger: <AlertCircle className=\"w-6 h-6 text-red-600\" />,\n  };\n\n  const buttonVariant = {\n    default: \"primary\" as const,\n    warning: \"primary\" as const,\n    danger: \"danger\" as const,\n  };\n\n  return (\n    <ZohoModal\n      isOpen={isOpen}\n      onClose={onClose}\n      size=\"sm\"\n      closeOnBackdrop={!loading}\n      footer={\n        <>\n          <ZohoButton\n            variant=\"outline\"\n            onClick={onClose}\n            disabled={loading}\n            data-testid=\"confirm-dialog-cancel\"\n          >\n            {cancelText}\n          </ZohoButton>\n          <ZohoButton\n            variant={buttonVariant[type]}\n            onClick={onConfirm}\n            loading={loading}\n            data-testid=\"confirm-dialog-confirm\"\n          >\n            {confirmText}\n          </ZohoButton>\n        </>\n      }\n    >\n      <div className=\"flex items-start gap-4\" data-testid=\"confirm-dialog-content\">\n        {iconMap[type]}\n        <div>\n          <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n            {title}\n          </h4>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            {message}\n          </p>\n        </div>\n      </div>\n    </ZohoModal>\n  );\n}\n\n// Alert Dialog\ninterface ZohoAlertDialogProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title: string;\n  message: string;\n  type?: \"success\" | \"error\" | \"warning\" | \"info\";\n  buttonText?: string;\n}\n\nexport function ZohoAlertDialog({\n  isOpen,\n  onClose,\n  title,\n  message,\n  type = \"info\",\n  buttonText = \"OK\",\n}: ZohoAlertDialogProps) {\n  const iconMap = {\n    success: <CheckCircle className=\"w-6 h-6 text-green-600\" />,\n    error: <AlertCircle className=\"w-6 h-6 text-red-600\" />,\n    warning: <AlertTriangle className=\"w-6 h-6 text-yellow-600\" />,\n    info: <Info className=\"w-6 h-6 text-blue-600\" />,\n  };\n\n  return (\n    <ZohoModal\n      isOpen={isOpen}\n      onClose={onClose}\n      size=\"sm\"\n      footer={\n        <ZohoButton\n          variant=\"primary\"\n          onClick={onClose}\n          data-testid=\"alert-dialog-ok\"\n        >\n          {buttonText}\n        </ZohoButton>\n      }\n    >\n      <div className=\"flex items-start gap-4\" data-testid=\"alert-dialog-content\">\n        {iconMap[type]}\n        <div>\n          <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n            {title}\n          </h4>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            {message}\n          </p>\n        </div>\n      </div>\n    </ZohoModal>\n  );\n}\n\n// Drawer Component\ninterface ZohoDrawerProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  position?: \"left\" | \"right\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  children: React.ReactNode;\n  footer?: React.ReactNode;\n  className?: string;\n}\n\nexport function ZohoDrawer({\n  isOpen,\n  onClose,\n  title,\n  position = \"right\",\n  size = \"md\",\n  children,\n  footer,\n  className,\n}: ZohoDrawerProps) {\n  React.useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n    \n    return () => {\n      document.body.style.overflow = \"unset\";\n    };\n  }, [isOpen]);\n\n  React.useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === \"Escape\" && isOpen) {\n        onClose();\n      }\n    };\n    \n    document.addEventListener(\"keydown\", handleEscape);\n    return () => document.removeEventListener(\"keydown\", handleEscape);\n  }, [isOpen, onClose]);\n\n  const sizeClasses = {\n    sm: \"w-80\",\n    md: \"w-96\",\n    lg: \"w-[500px]\",\n  };\n\n  const positionClasses = {\n    left: {\n      container: \"justify-start\",\n      panel: \"animate-slide-in-left\",\n      closed: \"-translate-x-full\",\n    },\n    right: {\n      container: \"justify-end\",\n      panel: \"animate-slide-in-right\",\n      closed: \"translate-x-full\",\n    },\n  };\n\n  return (\n    <div\n      className={cn(\n        \"fixed inset-0 z-50 flex\",\n        positionClasses[position].container,\n        isOpen ? \"visible\" : \"invisible\"\n      )}\n    >\n      {/* Backdrop */}\n      <div\n        className={cn(\n          \"absolute inset-0 bg-black transition-opacity duration-300\",\n          isOpen ? \"bg-opacity-50\" : \"bg-opacity-0\"\n        )}\n        onClick={onClose}\n        data-testid=\"drawer-backdrop\"\n      />\n      \n      {/* Drawer */}\n      <div\n        className={cn(\n          \"relative h-full bg-white dark:bg-gray-800 shadow-xl border-l border-gray-200 dark:border-gray-700 flex flex-col transition-transform duration-300\",\n          sizeClasses[size],\n          isOpen ? \"translate-x-0\" : positionClasses[position].closed,\n          className\n        )}\n        data-testid=\"drawer-container\"\n      >\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\n          {title && (\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n              {title}\n            </h3>\n          )}\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n            data-testid=\"drawer-close-button\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n        </div>\n        \n        {/* Content */}\n        <div className=\"flex-1 p-6 overflow-y-auto\">\n          {children}\n        </div>\n        \n        {/* Footer */}\n        {footer && (\n          <div className=\"flex items-center justify-end gap-3 p-6 bg-gray-50 dark:bg-gray-700 border-t border-gray-200 dark:border-gray-600\">\n            {footer}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":9216},"FutureHome/client/src/components/ui/zoho-notification.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { X, CheckCircle, AlertCircle, AlertTriangle, Info, Bell } from \"lucide-react\";\n\ninterface ZohoToastProps {\n  id: string;\n  type: \"success\" | \"error\" | \"warning\" | \"info\";\n  title: string;\n  message?: string;\n  duration?: number;\n  onClose: (id: string) => void;\n  action?: {\n    label: string;\n    onClick: () => void;\n  };\n}\n\nexport function ZohoToast({\n  id,\n  type,\n  title,\n  message,\n  duration = 5000,\n  onClose,\n  action,\n}: ZohoToastProps) {\n  const [isVisible, setIsVisible] = React.useState(true);\n  const [isExiting, setIsExiting] = React.useState(false);\n\n  React.useEffect(() => {\n    if (duration > 0) {\n      const timer = setTimeout(() => {\n        setIsExiting(true);\n        setTimeout(() => onClose(id), 300);\n      }, duration);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [duration, id, onClose]);\n\n  const iconMap = {\n    success: <CheckCircle className=\"w-5 h-5 text-green-600\" />,\n    error: <AlertCircle className=\"w-5 h-5 text-red-600\" />,\n    warning: <AlertTriangle className=\"w-5 h-5 text-yellow-600\" />,\n    info: <Info className=\"w-5 h-5 text-blue-600\" />,\n  };\n\n  const colorClasses = {\n    success: \"border-green-200 bg-green-50 dark:border-green-800 dark:bg-green-900/20\",\n    error: \"border-red-200 bg-red-50 dark:border-red-800 dark:bg-red-900/20\",\n    warning: \"border-yellow-200 bg-yellow-50 dark:border-yellow-800 dark:bg-yellow-900/20\",\n    info: \"border-blue-200 bg-blue-50 dark:border-blue-800 dark:bg-blue-900/20\",\n  };\n\n  const handleClose = () => {\n    setIsExiting(true);\n    setTimeout(() => onClose(id), 300);\n  };\n\n  return (\n    <div\n      className={cn(\n        \"w-full max-w-sm border rounded-lg shadow-lg p-4 transition-all duration-300 transform\",\n        colorClasses[type],\n        isExiting ? \"translate-x-full opacity-0\" : \"translate-x-0 opacity-100\"\n      )}\n      data-testid={`toast-${type}-${id}`}\n    >\n      <div className=\"flex items-start gap-3\">\n        {iconMap[type]}\n        \n        <div className=\"flex-1 min-w-0\">\n          <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n            {title}\n          </div>\n          {message && (\n            <div className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n              {message}\n            </div>\n          )}\n          {action && (\n            <div className=\"mt-2\">\n              <button\n                onClick={action.onClick}\n                className=\"text-sm font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300\"\n                data-testid={`toast-action-${id}`}\n              >\n                {action.label}\n              </button>\n            </div>\n          )}\n        </div>\n        \n        <button\n          onClick={handleClose}\n          className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n          data-testid={`toast-close-${id}`}\n        >\n          <X className=\"w-4 h-4\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n\n// Toast Container\ninterface ZohoToastContainerProps {\n  toasts: ZohoToastProps[];\n  position?: \"top-right\" | \"top-left\" | \"bottom-right\" | \"bottom-left\" | \"top-center\" | \"bottom-center\";\n}\n\nexport function ZohoToastContainer({ \n  toasts, \n  position = \"top-right\" \n}: ZohoToastContainerProps) {\n  const positionClasses = {\n    \"top-right\": \"top-4 right-4\",\n    \"top-left\": \"top-4 left-4\",\n    \"bottom-right\": \"bottom-4 right-4\",\n    \"bottom-left\": \"bottom-4 left-4\",\n    \"top-center\": \"top-4 left-1/2 transform -translate-x-1/2\",\n    \"bottom-center\": \"bottom-4 left-1/2 transform -translate-x-1/2\",\n  };\n\n  return (\n    <div\n      className={cn(\n        \"fixed z-50 space-y-2\",\n        positionClasses[position]\n      )}\n      data-testid=\"toast-container\"\n    >\n      {toasts.map((toast) => (\n        <ZohoToast key={toast.id} {...toast} />\n      ))}\n    </div>\n  );\n}\n\n// Banner Notification\ninterface ZohoBannerProps {\n  type: \"info\" | \"warning\" | \"error\" | \"success\";\n  title?: string;\n  message: string;\n  action?: {\n    label: string;\n    onClick: () => void;\n  };\n  dismissible?: boolean;\n  onDismiss?: () => void;\n  className?: string;\n}\n\nexport function ZohoBanner({\n  type,\n  title,\n  message,\n  action,\n  dismissible = true,\n  onDismiss,\n  className,\n}: ZohoBannerProps) {\n  const [isVisible, setIsVisible] = React.useState(true);\n\n  const iconMap = {\n    success: <CheckCircle className=\"w-5 h-5 text-green-600\" />,\n    error: <AlertCircle className=\"w-5 h-5 text-red-600\" />,\n    warning: <AlertTriangle className=\"w-5 h-5 text-yellow-600\" />,\n    info: <Info className=\"w-5 h-5 text-blue-600\" />,\n  };\n\n  const colorClasses = {\n    success: \"border-green-200 bg-green-50 dark:border-green-800 dark:bg-green-900/20\",\n    error: \"border-red-200 bg-red-50 dark:border-red-800 dark:bg-red-900/20\",\n    warning: \"border-yellow-200 bg-yellow-50 dark:border-yellow-800 dark:bg-yellow-900/20\",\n    info: \"border-blue-200 bg-blue-50 dark:border-blue-800 dark:bg-blue-900/20\",\n  };\n\n  const handleDismiss = () => {\n    setIsVisible(false);\n    onDismiss?.();\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <div\n      className={cn(\n        \"border rounded-lg p-4\",\n        colorClasses[type],\n        className\n      )}\n      data-testid={`banner-${type}`}\n    >\n      <div className=\"flex items-start gap-3\">\n        {iconMap[type]}\n        \n        <div className=\"flex-1 min-w-0\">\n          {title && (\n            <div className=\"text-sm font-medium text-gray-900 dark:text-white mb-1\">\n              {title}\n            </div>\n          )}\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n            {message}\n          </div>\n          {action && (\n            <div className=\"mt-2\">\n              <button\n                onClick={action.onClick}\n                className=\"text-sm font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300\"\n                data-testid=\"banner-action\"\n              >\n                {action.label}\n              </button>\n            </div>\n          )}\n        </div>\n        \n        {dismissible && (\n          <button\n            onClick={handleDismiss}\n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n            data-testid=\"banner-dismiss\"\n          >\n            <X className=\"w-4 h-4\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Notification Bell with Count\ninterface ZohoNotificationBellProps {\n  count?: number;\n  onClick?: () => void;\n  className?: string;\n}\n\nexport function ZohoNotificationBell({ \n  count = 0, \n  onClick,\n  className \n}: ZohoNotificationBellProps) {\n  return (\n    <button\n      onClick={onClick}\n      className={cn(\n        \"relative p-2 text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white transition-colors duration-200\",\n        className\n      )}\n      data-testid=\"notification-bell\"\n    >\n      <Bell className=\"w-5 h-5\" />\n      {count > 0 && (\n        <span className=\"absolute -top-1 -right-1 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white bg-red-600 rounded-full\">\n          {count > 99 ? \"99+\" : count}\n        </span>\n      )}\n    </button>\n  );\n}\n\n// Progress Banner\ninterface ZohoProgressBannerProps {\n  title: string;\n  message?: string;\n  progress: number; // 0-100\n  showPercentage?: boolean;\n  onCancel?: () => void;\n  className?: string;\n}\n\nexport function ZohoProgressBanner({\n  title,\n  message,\n  progress,\n  showPercentage = true,\n  onCancel,\n  className,\n}: ZohoProgressBannerProps) {\n  return (\n    <div\n      className={cn(\n        \"border border-blue-200 bg-blue-50 dark:border-blue-800 dark:bg-blue-900/20 rounded-lg p-4\",\n        className\n      )}\n      data-testid=\"progress-banner\"\n    >\n      <div className=\"flex items-start justify-between gap-3\">\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n              {title}\n            </div>\n            {showPercentage && (\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                {Math.round(progress)}%\n              </div>\n            )}\n          </div>\n          \n          {message && (\n            <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-3\">\n              {message}\n            </div>\n          )}\n          \n          <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n            <div\n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${Math.min(100, Math.max(0, progress))}%` }}\n            />\n          </div>\n        </div>\n        \n        {onCancel && (\n          <button\n            onClick={onCancel}\n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n            data-testid=\"progress-banner-cancel\"\n          >\n            <X className=\"w-4 h-4\" />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":9210},"FutureHome/client/src/components/ui/zoho-onboarding.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { X, ChevronLeft, ChevronRight, Play, Check, Star, Lightbulb } from \"lucide-react\";\nimport { ZohoButton } from \"./zoho-button\";\n\ninterface ZohoWelcomeModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onStartTour: () => void;\n  appName: string;\n  features: Array<{\n    title: string;\n    description: string;\n    icon: React.ReactNode;\n  }>;\n  className?: string;\n}\n\nexport function ZohoWelcomeModal({\n  isOpen,\n  onClose,\n  onStartTour,\n  appName,\n  features,\n  className,\n}: ZohoWelcomeModalProps) {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\n      <div\n        className=\"absolute inset-0 bg-black bg-opacity-50 backdrop-blur-sm\"\n        onClick={onClose}\n      />\n      \n      <div\n        className={cn(\n          \"relative w-full max-w-2xl bg-white dark:bg-gray-800 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 max-h-[90vh] overflow-hidden\",\n          className\n        )}\n        data-testid=\"welcome-modal\"\n      >\n        {/* Header */}\n        <div className=\"relative p-8 bg-gradient-to-r from-blue-600 to-purple-600 text-white\">\n          <button\n            onClick={onClose}\n            className=\"absolute top-4 right-4 text-white hover:text-gray-200 transition-colors duration-200\"\n            data-testid=\"welcome-modal-close\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n          \n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold mb-2\">\n              Welcome to {appName}!\n            </div>\n            <div className=\"text-lg opacity-90\">\n              Let's get you started with the powerful features\n            </div>\n          </div>\n        </div>\n        \n        {/* Content */}\n        <div className=\"p-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n            {features.map((feature, index) => (\n              <div\n                key={index}\n                className=\"flex items-start gap-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\"\n                data-testid={`welcome-feature-${index}`}\n              >\n                <div className=\"text-blue-600 dark:text-blue-400\">\n                  {feature.icon}\n                </div>\n                <div>\n                  <div className=\"font-medium text-gray-900 dark:text-white mb-1\">\n                    {feature.title}\n                  </div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    {feature.description}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          <div className=\"flex items-center justify-between\">\n            <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Take a quick tour to learn the basics\n            </div>\n            <div className=\"flex gap-3\">\n              <ZohoButton\n                variant=\"outline\"\n                onClick={onClose}\n                data-testid=\"welcome-skip-button\"\n              >\n                Skip for now\n              </ZohoButton>\n              <ZohoButton\n                variant=\"primary\"\n                onClick={onStartTour}\n                data-testid=\"welcome-start-tour-button\"\n              >\n                Start Tour\n              </ZohoButton>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface TourStep {\n  id: string;\n  title: string;\n  content: string;\n  target: string; // CSS selector\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\";\n  highlight?: boolean;\n}\n\ninterface ZohoProductTourProps {\n  isActive: boolean;\n  steps: TourStep[];\n  currentStep: number;\n  onNext: () => void;\n  onPrevious: () => void;\n  onComplete: () => void;\n  onSkip: () => void;\n  className?: string;\n}\n\nexport function ZohoProductTour({\n  isActive,\n  steps,\n  currentStep,\n  onNext,\n  onPrevious,\n  onComplete,\n  onSkip,\n  className,\n}: ZohoProductTourProps) {\n  const [targetElement, setTargetElement] = React.useState<HTMLElement | null>(null);\n  const [tooltipPosition, setTooltipPosition] = React.useState({ top: 0, left: 0 });\n\n  const currentStepData = steps[currentStep];\n  const isLastStep = currentStep === steps.length - 1;\n  const isFirstStep = currentStep === 0;\n\n  React.useEffect(() => {\n    if (!isActive || !currentStepData) return;\n\n    const element = document.querySelector(currentStepData.target) as HTMLElement;\n    if (element) {\n      setTargetElement(element);\n      \n      // Scroll element into view\n      element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      \n      // Calculate tooltip position\n      const rect = element.getBoundingClientRect();\n      const position = currentStepData.position || 'bottom';\n      \n      let top = 0;\n      let left = 0;\n      \n      switch (position) {\n        case 'top':\n          top = rect.top - 10;\n          left = rect.left + rect.width / 2;\n          break;\n        case 'bottom':\n          top = rect.bottom + 10;\n          left = rect.left + rect.width / 2;\n          break;\n        case 'left':\n          top = rect.top + rect.height / 2;\n          left = rect.left - 10;\n          break;\n        case 'right':\n          top = rect.top + rect.height / 2;\n          left = rect.right + 10;\n          break;\n      }\n      \n      setTooltipPosition({ top, left });\n      \n      // Add highlight if needed\n      if (currentStepData.highlight) {\n        element.classList.add('tour-highlight');\n      }\n    }\n\n    return () => {\n      // Remove highlight\n      if (element && currentStepData.highlight) {\n        element.classList.remove('tour-highlight');\n      }\n    };\n  }, [isActive, currentStep, currentStepData]);\n\n  if (!isActive || !currentStepData || !targetElement) return null;\n\n  return (\n    <>\n      {/* Overlay */}\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 z-40\" />\n      \n      {/* Tooltip */}\n      <div\n        className={cn(\n          \"fixed z-50 w-80 bg-white dark:bg-gray-800 rounded-lg shadow-xl border border-gray-200 dark:border-gray-700 p-6 transform -translate-x-1/2 -translate-y-1/2\",\n          className\n        )}\n        style={{\n          top: tooltipPosition.top,\n          left: tooltipPosition.left,\n        }}\n        data-testid=\"product-tour-tooltip\"\n      >\n        {/* Header */}\n        <div className=\"flex items-start justify-between mb-4\">\n          <div className=\"flex items-center gap-2\">\n            <Lightbulb className=\"w-5 h-5 text-yellow-500\" />\n            <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n              Step {currentStep + 1} of {steps.length}\n            </span>\n          </div>\n          <button\n            onClick={onSkip}\n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n            data-testid=\"tour-skip-button\"\n          >\n            <X className=\"w-4 h-4\" />\n          </button>\n        </div>\n        \n        {/* Content */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n            {currentStepData.title}\n          </h3>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            {currentStepData.content}\n          </p>\n        </div>\n        \n        {/* Progress */}\n        <div className=\"mb-4\">\n          <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400 mb-2\">\n            <span>Progress</span>\n            <span>{Math.round(((currentStep + 1) / steps.length) * 100)}%</span>\n          </div>\n          <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n            <div\n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${((currentStep + 1) / steps.length) * 100}%` }}\n            />\n          </div>\n        </div>\n        \n        {/* Actions */}\n        <div className=\"flex items-center justify-between\">\n          <ZohoButton\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={onPrevious}\n            disabled={isFirstStep}\n            data-testid=\"tour-previous-button\"\n          >\n            Previous\n          </ZohoButton>\n          \n          <div className=\"flex gap-2\">\n            <ZohoButton\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={onSkip}\n              data-testid=\"tour-skip-all-button\"\n            >\n              Skip Tour\n            </ZohoButton>\n            \n            {isLastStep ? (\n              <ZohoButton\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={onComplete}\n                data-testid=\"tour-complete-button\"\n              >\n                Complete\n              </ZohoButton>\n            ) : (\n              <ZohoButton\n                variant=\"primary\"\n                size=\"sm\"\n                onClick={onNext}\n                data-testid=\"tour-next-button\"\n              >\n                Next\n              </ZohoButton>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n// Empty State Component\ninterface ZohoEmptyStateProps {\n  icon?: React.ReactNode;\n  title: string;\n  description: string;\n  action?: {\n    label: string;\n    onClick: () => void;\n    variant?: \"primary\" | \"outline\";\n  };\n  illustration?: string;\n  className?: string;\n}\n\nexport function ZohoEmptyState({\n  icon,\n  title,\n  description,\n  action,\n  illustration,\n  className,\n}: ZohoEmptyStateProps) {\n  return (\n    <div\n      className={cn(\n        \"flex flex-col items-center justify-center text-center py-12 px-6\",\n        className\n      )}\n      data-testid=\"empty-state\"\n    >\n      {illustration ? (\n        <img\n          src={illustration}\n          alt=\"Empty state\"\n          className=\"w-48 h-48 mb-6 opacity-75\"\n        />\n      ) : icon ? (\n        <div className=\"text-gray-400 dark:text-gray-500 mb-6\">\n          {icon}\n        </div>\n      ) : (\n        <div className=\"w-16 h-16 bg-gray-200 dark:bg-gray-700 rounded-full flex items-center justify-center mb-6\">\n          <Star className=\"w-8 h-8 text-gray-400 dark:text-gray-500\" />\n        </div>\n      )}\n      \n      <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\n        {title}\n      </h3>\n      \n      <p className=\"text-gray-600 dark:text-gray-400 mb-6 max-w-md\">\n        {description}\n      </p>\n      \n      {action && (\n        <ZohoButton\n          variant={action.variant || \"primary\"}\n          onClick={action.onClick}\n          data-testid=\"empty-state-action\"\n        >\n          {action.label}\n        </ZohoButton>\n      )}\n    </div>\n  );\n}\n\n// First Use Prompt\ninterface ZohoFirstUsePromptProps {\n  isVisible: boolean;\n  onDismiss: () => void;\n  title: string;\n  message: string;\n  actions: Array<{\n    label: string;\n    onClick: () => void;\n    variant?: \"primary\" | \"outline\";\n    icon?: string;\n  }>;\n  className?: string;\n}\n\nexport function ZohoFirstUsePrompt({\n  isVisible,\n  onDismiss,\n  title,\n  message,\n  actions,\n  className,\n}: ZohoFirstUsePromptProps) {\n  if (!isVisible) return null;\n\n  return (\n    <div\n      className={cn(\n        \"fixed bottom-4 right-4 w-80 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 p-6 z-40\",\n        className\n      )}\n      data-testid=\"first-use-prompt\"\n    >\n      <div className=\"flex justify-between items-start mb-4\">\n        <div className=\"flex items-center gap-2\">\n          <Lightbulb className=\"w-5 h-5 text-yellow-500\" />\n          <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n            Getting Started\n          </span>\n        </div>\n        <button\n          onClick={onDismiss}\n          className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n          data-testid=\"first-use-dismiss\"\n        >\n          <X className=\"w-4 h-4\" />\n        </button>\n      </div>\n      \n      <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n        {title}\n      </h4>\n      \n      <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n        {message}\n      </p>\n      \n      <div className=\"flex flex-col gap-2\">\n        {actions.map((action, index) => (\n          <ZohoButton\n            key={index}\n            variant={action.variant || \"outline\"}\n            size=\"sm\"\n            onClick={action.onClick}\n            fullWidth\n            data-testid={`first-use-action-${index}`}\n          >\n            {action.label}\n          </ZohoButton>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// Progress Indicator for Onboarding\ninterface ZohoOnboardingProgressProps {\n  steps: Array<{\n    id: string;\n    title: string;\n    completed: boolean;\n  }>;\n  currentStep?: string;\n  className?: string;\n}\n\nexport function ZohoOnboardingProgress({\n  steps,\n  currentStep,\n  className,\n}: ZohoOnboardingProgressProps) {\n  return (\n    <div className={cn(\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6\", className)}>\n      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n        Setup Progress\n      </h3>\n      \n      <div className=\"space-y-4\">\n        {steps.map((step, index) => {\n          const isActive = step.id === currentStep;\n          const isCompleted = step.completed;\n          \n          return (\n            <div\n              key={step.id}\n              className=\"flex items-center gap-3\"\n              data-testid={`onboarding-step-${step.id}`}\n            >\n              <div className={cn(\n                \"w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium\",\n                isCompleted && \"bg-green-600 text-white\",\n                isActive && !isCompleted && \"bg-blue-600 text-white\",\n                !isActive && !isCompleted && \"bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-400\"\n              )}>\n                {isCompleted ? <Check className=\"w-4 h-4\" /> : index + 1}\n              </div>\n              \n              <div className={cn(\n                \"flex-1 text-sm\",\n                isCompleted && \"text-green-600 dark:text-green-400\",\n                isActive && !isCompleted && \"text-blue-600 dark:text-blue-400 font-medium\",\n                !isActive && !isCompleted && \"text-gray-600 dark:text-gray-400\"\n              )}>\n                {step.title}\n              </div>\n              \n              {isCompleted && (\n                <Check className=\"w-4 h-4 text-green-600 dark:text-green-400\" />\n              )}\n            </div>\n          );\n        })}\n      </div>\n      \n      <div className=\"mt-6 pt-4 border-t border-gray-200 dark:border-gray-700\">\n        <div className=\"flex justify-between items-center text-sm\">\n          <span className=\"text-gray-600 dark:text-gray-400\">\n            {steps.filter(s => s.completed).length} of {steps.length} completed\n          </span>\n          <span className=\"text-blue-600 dark:text-blue-400 font-medium\">\n            {Math.round((steps.filter(s => s.completed).length / steps.length) * 100)}%\n          </span>\n        </div>\n        <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mt-2\">\n          <div\n            className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n            style={{ width: `${(steps.filter(s => s.completed).length / steps.length) * 100}%` }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":15494},"FutureHome/client/src/components/ui/zoho-search.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Search, X, Filter, SlidersHorizontal, ArrowUpDown, Calendar, Users, Tag as TagIcon } from \"lucide-react\";\nimport { ZohoButton } from \"./zoho-button\";\nimport { ZohoSelect } from \"./zoho-form\";\n\ninterface ZohoSearchBarProps {\n  value: string;\n  onChange: (value: string) => void;\n  placeholder?: string;\n  suggestions?: string[];\n  recentSearches?: string[];\n  onSearch?: (query: string) => void;\n  loading?: boolean;\n  size?: \"sm\" | \"md\" | \"lg\";\n  showFilters?: boolean;\n  onFilterClick?: () => void;\n  className?: string;\n}\n\nexport function ZohoSearchBar({\n  value,\n  onChange,\n  placeholder = \"Search...\",\n  suggestions = [],\n  recentSearches = [],\n  onSearch,\n  loading = false,\n  size = \"md\",\n  showFilters = false,\n  onFilterClick,\n  className,\n}: ZohoSearchBarProps) {\n  const [isFocused, setIsFocused] = React.useState(false);\n  const [showSuggestions, setShowSuggestions] = React.useState(false);\n  const [focusedIndex, setFocusedIndex] = React.useState(-1);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const allSuggestions = React.useMemo(() => {\n    const filtered = suggestions.filter(suggestion =>\n      suggestion.toLowerCase().includes(value.toLowerCase())\n    );\n    \n    if (!value && recentSearches.length > 0) {\n      return recentSearches.slice(0, 5);\n    }\n    \n    return filtered.slice(0, 8);\n  }, [value, suggestions, recentSearches]);\n\n  const sizeClasses = {\n    sm: \"h-8 text-sm\",\n    md: \"h-10 text-sm\",\n    lg: \"h-12 text-base\",\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      if (focusedIndex >= 0 && allSuggestions[focusedIndex]) {\n        const selectedSuggestion = allSuggestions[focusedIndex];\n        onChange(selectedSuggestion);\n        onSearch?.(selectedSuggestion);\n      } else {\n        onSearch?.(value);\n      }\n      setShowSuggestions(false);\n      inputRef.current?.blur();\n    } else if (e.key === \"ArrowDown\") {\n      e.preventDefault();\n      setFocusedIndex(prev => \n        prev < allSuggestions.length - 1 ? prev + 1 : 0\n      );\n    } else if (e.key === \"ArrowUp\") {\n      e.preventDefault();\n      setFocusedIndex(prev => \n        prev > 0 ? prev - 1 : allSuggestions.length - 1\n      );\n    } else if (e.key === \"Escape\") {\n      setShowSuggestions(false);\n      setFocusedIndex(-1);\n      inputRef.current?.blur();\n    }\n  };\n\n  const handleSuggestionClick = (suggestion: string) => {\n    onChange(suggestion);\n    onSearch?.(suggestion);\n    setShowSuggestions(false);\n    setFocusedIndex(-1);\n  };\n\n  const handleClear = () => {\n    onChange(\"\");\n    setShowSuggestions(false);\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div className={cn(\"relative w-full\", className)}>\n      <div className={cn(\n        \"relative flex items-center border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 transition-all duration-200\",\n        isFocused && \"ring-2 ring-blue-500 border-blue-500\",\n        sizeClasses[size]\n      )}>\n        <Search className=\"absolute left-3 w-4 h-4 text-gray-400\" />\n        \n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n          onKeyDown={handleKeyDown}\n          onFocus={() => {\n            setIsFocused(true);\n            if (allSuggestions.length > 0) {\n              setShowSuggestions(true);\n            }\n          }}\n          onBlur={() => {\n            setIsFocused(false);\n            // Delay hiding suggestions to allow click events\n            setTimeout(() => setShowSuggestions(false), 150);\n          }}\n          placeholder={placeholder}\n          className=\"w-full pl-10 pr-20 py-2 bg-transparent border-0 outline-none text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n          data-testid=\"search-input\"\n        />\n        \n        <div className=\"absolute right-2 flex items-center gap-1\">\n          {value && (\n            <button\n              onClick={handleClear}\n              className=\"p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n              data-testid=\"search-clear\"\n            >\n              <X className=\"w-4 h-4\" />\n            </button>\n          )}\n          \n          {showFilters && (\n            <button\n              onClick={onFilterClick}\n              className=\"p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n              data-testid=\"search-filters\"\n            >\n              <Filter className=\"w-4 h-4\" />\n            </button>\n          )}\n          \n          {loading && (\n            <div className=\"p-1\">\n              <div className=\"w-4 h-4 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\" />\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Suggestions Dropdown */}\n      {showSuggestions && allSuggestions.length > 0 && (\n        <div className=\"absolute z-20 w-full mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg max-h-64 overflow-y-auto\">\n          {!value && recentSearches.length > 0 && (\n            <div className=\"px-3 py-2 text-xs font-medium text-gray-500 dark:text-gray-400 border-b border-gray-200 dark:border-gray-700\">\n              Recent Searches\n            </div>\n          )}\n          \n          {allSuggestions.map((suggestion, index) => (\n            <button\n              key={index}\n              onClick={() => handleSuggestionClick(suggestion)}\n              className={cn(\n                \"w-full px-3 py-2 text-left hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200 flex items-center gap-2\",\n                index === focusedIndex && \"bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400\"\n              )}\n              data-testid={`search-suggestion-${index}`}\n            >\n              <Search className=\"w-4 h-4 text-gray-400\" />\n              <span className=\"truncate\">{suggestion}</span>\n            </button>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Advanced Search Component\ninterface SearchFilter {\n  id: string;\n  label: string;\n  type: \"text\" | \"select\" | \"date\" | \"dateRange\" | \"number\" | \"multiSelect\";\n  options?: Array<{ label: string; value: string }>;\n  value?: any;\n  placeholder?: string;\n}\n\ninterface ZohoAdvancedSearchProps {\n  filters: SearchFilter[];\n  onFiltersChange: (filters: SearchFilter[]) => void;\n  onSearch: () => void;\n  onReset: () => void;\n  loading?: boolean;\n  className?: string;\n}\n\nexport function ZohoAdvancedSearch({\n  filters,\n  onFiltersChange,\n  onSearch,\n  onReset,\n  loading = false,\n  className,\n}: ZohoAdvancedSearchProps) {\n  const updateFilter = (id: string, value: any) => {\n    const updatedFilters = filters.map(filter =>\n      filter.id === id ? { ...filter, value } : filter\n    );\n    onFiltersChange(updatedFilters);\n  };\n\n  const hasActiveFilters = filters.some(filter => \n    filter.value !== undefined && filter.value !== \"\" && filter.value !== null\n  );\n\n  return (\n    <div className={cn(\"bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-6\", className)}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white flex items-center gap-2\">\n          <SlidersHorizontal className=\"w-5 h-5\" />\n          Advanced Search\n        </h3>\n        \n        {hasActiveFilters && (\n          <button\n            onClick={onReset}\n            className=\"text-sm text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300\"\n            data-testid=\"advanced-search-reset\"\n          >\n            Clear all\n          </button>\n        )}\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\">\n        {filters.map((filter) => (\n          <div key={filter.id} className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              {filter.label}\n            </label>\n            \n            {filter.type === \"text\" && (\n              <input\n                type=\"text\"\n                value={filter.value || \"\"}\n                onChange={(e) => updateFilter(filter.id, e.target.value)}\n                placeholder={filter.placeholder}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                data-testid={`filter-${filter.id}`}\n              />\n            )}\n            \n            {filter.type === \"select\" && (\n              <ZohoSelect\n                options={filter.options || []}\n                value={filter.value || \"\"}\n                onChange={(value) => updateFilter(filter.id, value)}\n                placeholder={filter.placeholder}\n              />\n            )}\n            \n            {filter.type === \"number\" && (\n              <input\n                type=\"number\"\n                value={filter.value || \"\"}\n                onChange={(e) => updateFilter(filter.id, e.target.value)}\n                placeholder={filter.placeholder}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                data-testid={`filter-${filter.id}`}\n              />\n            )}\n            \n            {filter.type === \"date\" && (\n              <input\n                type=\"date\"\n                value={filter.value || \"\"}\n                onChange={(e) => updateFilter(filter.id, e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                data-testid={`filter-${filter.id}`}\n              />\n            )}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"flex items-center justify-between\">\n        <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n          {hasActiveFilters && `${filters.filter(f => f.value).length} filter(s) applied`}\n        </div>\n        \n        <div className=\"flex gap-3\">\n          <ZohoButton\n            variant=\"outline\"\n            onClick={onReset}\n            disabled={!hasActiveFilters}\n            data-testid=\"advanced-search-clear\"\n          >\n            Clear\n          </ZohoButton>\n          <ZohoButton\n            variant=\"primary\"\n            onClick={onSearch}\n            loading={loading}\n            data-testid=\"advanced-search-submit\"\n          >\n            Search\n          </ZohoButton>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Quick Filter Bar\ninterface QuickFilter {\n  id: string;\n  label: string;\n  active: boolean;\n  count?: number;\n}\n\ninterface ZohoQuickFiltersProps {\n  filters: QuickFilter[];\n  onFilterToggle: (id: string) => void;\n  showCounts?: boolean;\n  className?: string;\n}\n\nexport function ZohoQuickFilters({\n  filters,\n  onFilterToggle,\n  showCounts = false,\n  className,\n}: ZohoQuickFiltersProps) {\n  return (\n    <div className={cn(\"flex flex-wrap gap-2\", className)}>\n      {filters.map((filter) => (\n        <button\n          key={filter.id}\n          onClick={() => onFilterToggle(filter.id)}\n          className={cn(\n            \"inline-flex items-center px-3 py-1.5 text-sm font-medium rounded-full border transition-colors duration-200\",\n            filter.active\n              ? \"bg-blue-600 text-white border-blue-600\"\n              : \"bg-white text-gray-700 border-gray-300 hover:bg-gray-50 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-600 dark:hover:bg-gray-600\"\n          )}\n          data-testid={`quick-filter-${filter.id}`}\n        >\n          <span>{filter.label}</span>\n          {showCounts && filter.count !== undefined && (\n            <span className={cn(\n              \"ml-2 px-1.5 py-0.5 text-xs rounded-full\",\n              filter.active\n                ? \"bg-white bg-opacity-20\"\n                : \"bg-gray-200 dark:bg-gray-600\"\n            )}>\n              {filter.count}\n            </span>\n          )}\n        </button>\n      ))}\n    </div>\n  );\n}\n\n// Search Result Item\ninterface ZohoSearchResultProps {\n  title: string;\n  description?: string;\n  metadata?: Array<{ label: string; value: string; icon?: React.ReactNode }>;\n  tags?: string[];\n  actions?: Array<{ label: string; onClick: () => void; icon?: React.ReactNode }>;\n  onClick?: () => void;\n  className?: string;\n}\n\nexport function ZohoSearchResult({\n  title,\n  description,\n  metadata = [],\n  tags = [],\n  actions = [],\n  onClick,\n  className,\n}: ZohoSearchResultProps) {\n  return (\n    <div\n      className={cn(\n        \"p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:shadow-md transition-shadow duration-200 cursor-pointer\",\n        className\n      )}\n      onClick={onClick}\n      data-testid=\"search-result\"\n    >\n      <div className=\"flex items-start justify-between gap-4\">\n        <div className=\"flex-1 min-w-0\">\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2 truncate\">\n            {title}\n          </h3>\n          \n          {description && (\n            <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-3 line-clamp-2\">\n              {description}\n            </p>\n          )}\n          \n          {metadata.length > 0 && (\n            <div className=\"flex flex-wrap gap-4 mb-3\">\n              {metadata.map((item, index) => (\n                <div key={index} className=\"flex items-center gap-1 text-sm text-gray-500 dark:text-gray-400\">\n                  {item.icon}\n                  <span className=\"font-medium\">{item.label}:</span>\n                  <span>{item.value}</span>\n                </div>\n              ))}\n            </div>\n          )}\n          \n          {tags.length > 0 && (\n            <div className=\"flex flex-wrap gap-2\">\n              {tags.map((tag, index) => (\n                <span\n                  key={index}\n                  className=\"inline-flex items-center px-2 py-1 text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300 rounded-full\"\n                >\n                  {tag}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n        \n        {actions.length > 0 && (\n          <div className=\"flex items-center gap-2\">\n            {actions.map((action, index) => (\n              <button\n                key={index}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  action.onClick();\n                }}\n                className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n                data-testid={`search-result-action-${index}`}\n              >\n                {action.icon}\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":15197},"FutureHome/client/src/components/ui/zoho-table.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { \n  ChevronUp, \n  ChevronDown, \n  MoreHorizontal, \n  Search,\n  Filter,\n  Download,\n  ArrowUpDown,\n  CheckSquare,\n  Square\n} from \"lucide-react\";\nimport { ZohoButton } from \"./zoho-button\";\n\ninterface Column {\n  key: string;\n  title: string;\n  sortable?: boolean;\n  filterable?: boolean;\n  width?: string;\n  render?: (value: any, record: any) => React.ReactNode;\n}\n\ninterface ZohoTableProps {\n  data: Array<Record<string, any>>;\n  columns: Column[];\n  loading?: boolean;\n  selectable?: boolean;\n  selectedRows?: string[];\n  onRowSelect?: (selectedRowKeys: string[]) => void;\n  onSort?: (key: string, direction: \"asc\" | \"desc\") => void;\n  sortConfig?: { key: string; direction: \"asc\" | \"desc\" };\n  pagination?: {\n    current: number;\n    pageSize: number;\n    total: number;\n    onChange: (page: number, pageSize: number) => void;\n  };\n  actions?: Array<{\n    label: string;\n    onClick: (record: any) => void;\n    icon?: React.ReactNode;\n  }>;\n  className?: string;\n}\n\nexport function ZohoTable({\n  data,\n  columns,\n  loading = false,\n  selectable = false,\n  selectedRows = [],\n  onRowSelect,\n  onSort,\n  sortConfig,\n  pagination,\n  actions,\n  className,\n}: ZohoTableProps) {\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [filters, setFilters] = React.useState<Record<string, string>>({});\n\n  const handleSelectAll = () => {\n    if (!onRowSelect) return;\n    \n    const allSelected = selectedRows.length === data.length;\n    if (allSelected) {\n      onRowSelect([]);\n    } else {\n      onRowSelect(data.map((_, index) => index.toString()));\n    }\n  };\n\n  const handleRowSelect = (rowKey: string) => {\n    if (!onRowSelect) return;\n    \n    const newSelection = selectedRows.includes(rowKey)\n      ? selectedRows.filter(key => key !== rowKey)\n      : [...selectedRows, rowKey];\n    \n    onRowSelect(newSelection);\n  };\n\n  const handleSort = (columnKey: string) => {\n    if (!onSort) return;\n    \n    let direction: \"asc\" | \"desc\" = \"asc\";\n    if (sortConfig?.key === columnKey && sortConfig.direction === \"asc\") {\n      direction = \"desc\";\n    }\n    \n    onSort(columnKey, direction);\n  };\n\n  const filteredData = React.useMemo(() => {\n    return data.filter(item => {\n      // Search filter\n      if (searchTerm) {\n        const searchValue = Object.values(item)\n          .join(\" \")\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n        if (!searchValue) return false;\n      }\n      \n      // Column filters\n      for (const [key, value] of Object.entries(filters)) {\n        if (value && !String(item[key]).toLowerCase().includes(value.toLowerCase())) {\n          return false;\n        }\n      }\n      \n      return true;\n    });\n  }, [data, searchTerm, filters]);\n\n  if (loading) {\n    return (\n      <div className=\"w-full\">\n        <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg\">\n          <div className=\"animate-pulse\">\n            {/* Table header skeleton */}\n            <div className=\"border-b border-gray-200 dark:border-gray-700 p-4\">\n              <div className=\"flex space-x-4\">\n                {columns.map((_, index) => (\n                  <div key={index} className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded flex-1\"></div>\n                ))}\n              </div>\n            </div>\n            {/* Table rows skeleton */}\n            {[...Array(5)].map((_, index) => (\n              <div key={index} className=\"border-b border-gray-200 dark:border-gray-700 p-4\">\n                <div className=\"flex space-x-4\">\n                  {columns.map((_, colIndex) => (\n                    <div key={colIndex} className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded flex-1\"></div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn(\"w-full\", className)}>\n      {/* Table Toolbar */}\n      <div className=\"flex items-center justify-between mb-4 p-4 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-t-lg\">\n        <div className=\"flex items-center gap-4\">\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              data-testid=\"table-search-input\"\n            />\n          </div>\n          <ZohoButton variant=\"outline\" icon=\"filter\" size=\"sm\">\n            Filter\n          </ZohoButton>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          <ZohoButton variant=\"outline\" icon=\"download\" size=\"sm\">\n            Export\n          </ZohoButton>\n          {selectedRows.length > 0 && (\n            <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n              {selectedRows.length} selected\n            </span>\n          )}\n        </div>\n      </div>\n\n      {/* Table */}\n      <div className=\"border border-gray-200 dark:border-gray-700 rounded-b-lg overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full divide-y divide-gray-200 dark:divide-gray-700\">\n            <thead className=\"bg-gray-50 dark:bg-gray-700\">\n              <tr>\n                {selectable && (\n                  <th className=\"px-6 py-3 text-left\">\n                    <button\n                      onClick={handleSelectAll}\n                      className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n                      data-testid=\"select-all-checkbox\"\n                    >\n                      {selectedRows.length === data.length && data.length > 0 ? (\n                        <CheckSquare className=\"w-4 h-4\" />\n                      ) : (\n                        <Square className=\"w-4 h-4\" />\n                      )}\n                    </button>\n                  </th>\n                )}\n                {columns.map((column) => (\n                  <th\n                    key={column.key}\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\"\n                    style={{ width: column.width }}\n                  >\n                    <div className=\"flex items-center gap-2\">\n                      <span>{column.title}</span>\n                      {column.sortable && (\n                        <button\n                          onClick={() => handleSort(column.key)}\n                          className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n                          data-testid={`sort-${column.key}`}\n                        >\n                          {sortConfig?.key === column.key ? (\n                            sortConfig.direction === \"asc\" ? (\n                              <ChevronUp className=\"w-4 h-4\" />\n                            ) : (\n                              <ChevronDown className=\"w-4 h-4\" />\n                            )\n                          ) : (\n                            <ArrowUpDown className=\"w-4 h-4\" />\n                          )}\n                        </button>\n                      )}\n                    </div>\n                  </th>\n                ))}\n                {actions && actions.length > 0 && (\n                  <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                )}\n              </tr>\n            </thead>\n            <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n              {filteredData.map((record, index) => (\n                <tr \n                  key={index}\n                  className=\"hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-150\"\n                  data-testid={`table-row-${index}`}\n                >\n                  {selectable && (\n                    <td className=\"px-6 py-4\">\n                      <button\n                        onClick={() => handleRowSelect(index.toString())}\n                        className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n                        data-testid={`select-row-${index}`}\n                      >\n                        {selectedRows.includes(index.toString()) ? (\n                          <CheckSquare className=\"w-4 h-4\" />\n                        ) : (\n                          <Square className=\"w-4 h-4\" />\n                        )}\n                      </button>\n                    </td>\n                  )}\n                  {columns.map((column) => (\n                    <td key={column.key} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                      {column.render \n                        ? column.render(record[column.key], record)\n                        : record[column.key]\n                      }\n                    </td>\n                  ))}\n                  {actions && actions.length > 0 && (\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <div className=\"flex items-center justify-end gap-2\">\n                        {actions.map((action, actionIndex) => (\n                          <button\n                            key={actionIndex}\n                            onClick={() => action.onClick(record)}\n                            className=\"text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300\"\n                            data-testid={`action-${action.label.toLowerCase().replace(/\\s+/g, '-')}-${index}`}\n                          >\n                            {action.icon || action.label}\n                          </button>\n                        ))}\n                      </div>\n                    </td>\n                  )}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Pagination */}\n        {pagination && (\n          <div className=\"px-6 py-3 bg-gray-50 dark:bg-gray-700 border-t border-gray-200 dark:border-gray-600\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                Showing {((pagination.current - 1) * pagination.pageSize) + 1} to {Math.min(pagination.current * pagination.pageSize, pagination.total)} of {pagination.total} results\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <ZohoButton\n                  variant=\"outline\"\n                  size=\"sm\"\n                  disabled={pagination.current === 1}\n                  onClick={() => pagination.onChange(pagination.current - 1, pagination.pageSize)}\n                >\n                  Previous\n                </ZohoButton>\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  Page {pagination.current} of {Math.ceil(pagination.total / pagination.pageSize)}\n                </span>\n                <ZohoButton\n                  variant=\"outline\"\n                  size=\"sm\"\n                  disabled={pagination.current >= Math.ceil(pagination.total / pagination.pageSize)}\n                  onClick={() => pagination.onChange(pagination.current + 1, pagination.pageSize)}\n                >\n                  Next\n                </ZohoButton>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Empty State */}\n      {filteredData.length === 0 && !loading && (\n        <div className=\"text-center py-12 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg\">\n          <div className=\"text-gray-500 dark:text-gray-400\">\n            <div className=\"text-lg font-medium mb-2\">No data found</div>\n            <div className=\"text-sm\">Try adjusting your search or filter criteria</div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":12318},"FutureHome/client/src/components/ui/zoho-tags.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { X, Plus, Tag as TagIcon, Hash } from \"lucide-react\";\n\ninterface ZohoTagProps {\n  label: string;\n  variant?: \"default\" | \"primary\" | \"success\" | \"warning\" | \"danger\" | \"outline\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  removable?: boolean;\n  onRemove?: () => void;\n  icon?: React.ReactNode;\n  className?: string;\n  onClick?: () => void;\n}\n\nexport function ZohoTag({\n  label,\n  variant = \"default\",\n  size = \"md\",\n  removable = false,\n  onRemove,\n  icon,\n  className,\n  onClick,\n}: ZohoTagProps) {\n  const baseClasses = \"inline-flex items-center font-medium rounded-full transition-colors duration-200\";\n  \n  const variantClasses = {\n    default: \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300\",\n    primary: \"bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-300\",\n    success: \"bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-300\",\n    warning: \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-300\",\n    danger: \"bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-300\",\n    outline: \"bg-transparent border border-gray-300 text-gray-700 dark:border-gray-600 dark:text-gray-300\",\n  };\n\n  const sizeClasses = {\n    sm: \"px-2 py-1 text-xs gap-1\",\n    md: \"px-3 py-1.5 text-sm gap-1.5\",\n    lg: \"px-4 py-2 text-base gap-2\",\n  };\n\n  const handleClick = () => {\n    if (onClick) {\n      onClick();\n    }\n  };\n\n  return (\n    <span\n      className={cn(\n        baseClasses,\n        variantClasses[variant],\n        sizeClasses[size],\n        onClick && \"cursor-pointer hover:opacity-80\",\n        className\n      )}\n      onClick={handleClick}\n      data-testid={`tag-${label.toLowerCase().replace(/\\s+/g, '-')}`}\n    >\n      {icon && (\n        <span className=\"flex-shrink-0\">\n          {icon}\n        </span>\n      )}\n      \n      <span className=\"truncate\">\n        {label}\n      </span>\n      \n      {removable && (\n        <button\n          type=\"button\"\n          onClick={(e) => {\n            e.stopPropagation();\n            onRemove?.();\n          }}\n          className=\"flex-shrink-0 ml-1 hover:bg-black hover:bg-opacity-10 rounded-full p-0.5 transition-colors duration-200\"\n          data-testid={`tag-remove-${label.toLowerCase().replace(/\\s+/g, '-')}`}\n        >\n          <X className=\"w-3 h-3\" />\n        </button>\n      )}\n    </span>\n  );\n}\n\n// Tag Input Component\ninterface ZohoTagInputProps {\n  tags: string[];\n  onTagsChange: (tags: string[]) => void;\n  placeholder?: string;\n  label?: string;\n  error?: string;\n  required?: boolean;\n  disabled?: boolean;\n  maxTags?: number;\n  allowDuplicates?: boolean;\n  tagVariant?: \"default\" | \"primary\" | \"success\" | \"warning\" | \"danger\";\n  className?: string;\n  suggestions?: string[];\n}\n\nexport function ZohoTagInput({\n  tags,\n  onTagsChange,\n  placeholder = \"Add tags...\",\n  label,\n  error,\n  required,\n  disabled,\n  maxTags,\n  allowDuplicates = false,\n  tagVariant = \"default\",\n  className,\n  suggestions = [],\n}: ZohoTagInputProps) {\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [showSuggestions, setShowSuggestions] = React.useState(false);\n  const [focusedSuggestionIndex, setFocusedSuggestionIndex] = React.useState(-1);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const filteredSuggestions = React.useMemo(() => {\n    if (!inputValue || !suggestions.length) return [];\n    return suggestions.filter(\n      suggestion =>\n        suggestion.toLowerCase().includes(inputValue.toLowerCase()) &&\n        (allowDuplicates || !tags.includes(suggestion))\n    );\n  }, [inputValue, suggestions, tags, allowDuplicates]);\n\n  const addTag = (tag: string) => {\n    const trimmedTag = tag.trim();\n    if (!trimmedTag) return;\n    \n    if (!allowDuplicates && tags.includes(trimmedTag)) return;\n    if (maxTags && tags.length >= maxTags) return;\n    \n    onTagsChange([...tags, trimmedTag]);\n    setInputValue(\"\");\n    setShowSuggestions(false);\n    setFocusedSuggestionIndex(-1);\n  };\n\n  const removeTag = (indexToRemove: number) => {\n    onTagsChange(tags.filter((_, index) => index !== indexToRemove));\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" || e.key === \"Tab\") {\n      e.preventDefault();\n      if (focusedSuggestionIndex >= 0 && filteredSuggestions[focusedSuggestionIndex]) {\n        addTag(filteredSuggestions[focusedSuggestionIndex]);\n      } else if (inputValue.trim()) {\n        addTag(inputValue);\n      }\n    } else if (e.key === \"Backspace\" && !inputValue && tags.length > 0) {\n      removeTag(tags.length - 1);\n    } else if (e.key === \"ArrowDown\") {\n      e.preventDefault();\n      setFocusedSuggestionIndex(prev => \n        prev < filteredSuggestions.length - 1 ? prev + 1 : 0\n      );\n    } else if (e.key === \"ArrowUp\") {\n      e.preventDefault();\n      setFocusedSuggestionIndex(prev => \n        prev > 0 ? prev - 1 : filteredSuggestions.length - 1\n      );\n    } else if (e.key === \"Escape\") {\n      setShowSuggestions(false);\n      setFocusedSuggestionIndex(-1);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setInputValue(value);\n    setShowSuggestions(value.length > 0 && filteredSuggestions.length > 0);\n    setFocusedSuggestionIndex(-1);\n  };\n\n  const handleSuggestionClick = (suggestion: string) => {\n    addTag(suggestion);\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      \n      <div className=\"relative\">\n        <div\n          className={cn(\n            \"min-h-[2.5rem] px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500 transition-colors duration-200 cursor-text\",\n            error && \"border-red-500 focus-within:ring-red-500 focus-within:border-red-500\",\n            disabled && \"opacity-50 cursor-not-allowed bg-gray-100 dark:bg-gray-800\",\n            className\n          )}\n          onClick={() => inputRef.current?.focus()}\n          data-testid=\"tag-input-container\"\n        >\n          <div className=\"flex flex-wrap items-center gap-2\">\n            {/* Existing Tags */}\n            {tags.map((tag, index) => (\n              <ZohoTag\n                key={index}\n                label={tag}\n                variant={tagVariant}\n                size=\"sm\"\n                removable={!disabled}\n                onRemove={() => removeTag(index)}\n              />\n            ))}\n            \n            {/* Input */}\n            <input\n              ref={inputRef}\n              type=\"text\"\n              value={inputValue}\n              onChange={handleInputChange}\n              onKeyDown={handleKeyDown}\n              onFocus={() => {\n                if (inputValue && filteredSuggestions.length > 0) {\n                  setShowSuggestions(true);\n                }\n              }}\n              onBlur={() => {\n                // Delay hiding suggestions to allow click events\n                setTimeout(() => setShowSuggestions(false), 150);\n              }}\n              placeholder={tags.length === 0 ? placeholder : \"\"}\n              disabled={disabled || (maxTags && tags.length >= maxTags)}\n              className=\"flex-1 min-w-[100px] bg-transparent border-0 outline-none text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400\"\n              data-testid=\"tag-input-field\"\n            />\n          </div>\n        </div>\n\n        {/* Suggestions Dropdown */}\n        {showSuggestions && filteredSuggestions.length > 0 && (\n          <div className=\"absolute z-20 w-full mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-md shadow-lg max-h-40 overflow-y-auto\">\n            {filteredSuggestions.map((suggestion, index) => (\n              <button\n                key={index}\n                type=\"button\"\n                onClick={() => handleSuggestionClick(suggestion)}\n                className={cn(\n                  \"w-full px-3 py-2 text-left hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200\",\n                  index === focusedSuggestionIndex && \"bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400\"\n                )}\n                data-testid={`tag-suggestion-${index}`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <TagIcon className=\"w-4 h-4 text-gray-400\" />\n                  <span>{suggestion}</span>\n                </div>\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Helper Text */}\n      <div className=\"mt-1 text-sm\">\n        {error && (\n          <div className=\"text-red-600 dark:text-red-400\">\n            {error}\n          </div>\n        )}\n        {!error && maxTags && (\n          <div className=\"text-gray-500 dark:text-gray-400\">\n            {tags.length}/{maxTags} tags\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Tag Group Component\ninterface ZohoTagGroupProps {\n  title?: string;\n  tags: Array<{\n    label: string;\n    value: string;\n    count?: number;\n    variant?: \"default\" | \"primary\" | \"success\" | \"warning\" | \"danger\";\n  }>;\n  selectedTags: string[];\n  onTagToggle: (value: string) => void;\n  maxVisible?: number;\n  showCount?: boolean;\n  className?: string;\n}\n\nexport function ZohoTagGroup({\n  title,\n  tags,\n  selectedTags,\n  onTagToggle,\n  maxVisible,\n  showCount = false,\n  className,\n}: ZohoTagGroupProps) {\n  const [showAll, setShowAll] = React.useState(false);\n  \n  const visibleTags = maxVisible && !showAll ? tags.slice(0, maxVisible) : tags;\n  const hiddenCount = maxVisible ? Math.max(0, tags.length - maxVisible) : 0;\n\n  return (\n    <div className={cn(\"space-y-3\", className)}>\n      {title && (\n        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">\n          {title}\n        </h4>\n      )}\n      \n      <div className=\"flex flex-wrap gap-2\">\n        {visibleTags.map((tag) => {\n          const isSelected = selectedTags.includes(tag.value);\n          \n          return (\n            <ZohoTag\n              key={tag.value}\n              label={`${tag.label}${showCount && tag.count ? ` (${tag.count})` : \"\"}`}\n              variant={isSelected ? (tag.variant || \"primary\") : \"outline\"}\n              onClick={() => onTagToggle(tag.value)}\n              className={cn(\n                \"cursor-pointer transition-all duration-200\",\n                isSelected && \"ring-2 ring-blue-200 dark:ring-blue-800\"\n              )}\n            />\n          );\n        })}\n        \n        {maxVisible && hiddenCount > 0 && (\n          <button\n            onClick={() => setShowAll(!showAll)}\n            className=\"inline-flex items-center px-3 py-1.5 text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors duration-200\"\n            data-testid=\"tag-group-show-more\"\n          >\n            {showAll ? \"Show less\" : `+${hiddenCount} more`}\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\n// Pill Component (similar to tag but more rounded)\ninterface ZohoPillProps {\n  label: string;\n  variant?: \"default\" | \"primary\" | \"success\" | \"warning\" | \"danger\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  icon?: React.ReactNode;\n  badge?: string | number;\n  className?: string;\n  onClick?: () => void;\n}\n\nexport function ZohoPill({\n  label,\n  variant = \"default\",\n  size = \"md\",\n  icon,\n  badge,\n  className,\n  onClick,\n}: ZohoPillProps) {\n  const baseClasses = \"inline-flex items-center font-medium rounded-full transition-colors duration-200\";\n  \n  const variantClasses = {\n    default: \"bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300\",\n    primary: \"bg-blue-600 text-white\",\n    success: \"bg-green-600 text-white\",\n    warning: \"bg-yellow-600 text-white\",\n    danger: \"bg-red-600 text-white\",\n  };\n\n  const sizeClasses = {\n    sm: \"px-3 py-1 text-xs gap-1.5\",\n    md: \"px-4 py-2 text-sm gap-2\",\n    lg: \"px-6 py-3 text-base gap-2.5\",\n  };\n\n  return (\n    <span\n      className={cn(\n        baseClasses,\n        variantClasses[variant],\n        sizeClasses[size],\n        onClick && \"cursor-pointer hover:opacity-80\",\n        className\n      )}\n      onClick={onClick}\n      data-testid={`pill-${label.toLowerCase().replace(/\\s+/g, '-')}`}\n    >\n      {icon && (\n        <span className=\"flex-shrink-0\">\n          {icon}\n        </span>\n      )}\n      \n      <span className=\"truncate\">\n        {label}\n      </span>\n      \n      {badge && (\n        <span className=\"flex-shrink-0 ml-1 px-2 py-0.5 text-xs bg-black bg-opacity-20 rounded-full\">\n          {badge}\n        </span>\n      )}\n    </span>\n  );\n}","size_bytes":12894},"FutureHome/client/src/components/ui/zoho-tooltip.tsx":{"content":"import React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface ZohoTooltipProps {\n  content: string | React.ReactNode;\n  children: React.ReactNode;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\";\n  variant?: \"default\" | \"dark\" | \"light\";\n  delay?: number;\n  disabled?: boolean;\n  className?: string;\n  maxWidth?: string;\n}\n\nexport function ZohoTooltip({\n  content,\n  children,\n  position = \"top\",\n  variant = \"default\",\n  delay = 200,\n  disabled = false,\n  className,\n  maxWidth = \"max-w-xs\",\n}: ZohoTooltipProps) {\n  const [isVisible, setIsVisible] = React.useState(false);\n  const [showTooltip, setShowTooltip] = React.useState(false);\n  const timeoutRef = React.useRef<NodeJS.Timeout>();\n  const tooltipRef = React.useRef<HTMLDivElement>(null);\n  const triggerRef = React.useRef<HTMLDivElement>(null);\n\n  const handleMouseEnter = () => {\n    if (disabled) return;\n    \n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = setTimeout(() => {\n      setIsVisible(true);\n      setTimeout(() => setShowTooltip(true), 10);\n    }, delay);\n  };\n\n  const handleMouseLeave = () => {\n    clearTimeout(timeoutRef.current);\n    setShowTooltip(false);\n    setTimeout(() => setIsVisible(false), 150);\n  };\n\n  const positionClasses = {\n    top: \"bottom-full left-1/2 transform -translate-x-1/2 mb-2\",\n    bottom: \"top-full left-1/2 transform -translate-x-1/2 mt-2\",\n    left: \"right-full top-1/2 transform -translate-y-1/2 mr-2\",\n    right: \"left-full top-1/2 transform -translate-y-1/2 ml-2\",\n  };\n\n  const arrowClasses = {\n    top: \"top-full left-1/2 transform -translate-x-1/2 border-l-4 border-r-4 border-t-4 border-transparent\",\n    bottom: \"bottom-full left-1/2 transform -translate-x-1/2 border-l-4 border-r-4 border-b-4 border-transparent\",\n    left: \"left-full top-1/2 transform -translate-y-1/2 border-t-4 border-b-4 border-l-4 border-transparent\",\n    right: \"right-full top-1/2 transform -translate-y-1/2 border-t-4 border-b-4 border-r-4 border-transparent\",\n  };\n\n  const variantClasses = {\n    default: \"bg-gray-900 text-white border-gray-900\",\n    dark: \"bg-black text-white border-black\",\n    light: \"bg-white text-gray-900 border-gray-200 shadow-lg\",\n  };\n\n  const arrowColors = {\n    default: \"border-t-gray-900\",\n    dark: \"border-t-black\",\n    light: \"border-t-white\",\n  };\n\n  React.useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div \n      className=\"relative inline-block\"\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      ref={triggerRef}\n    >\n      {children}\n      \n      {isVisible && (\n        <div\n          ref={tooltipRef}\n          className={cn(\n            \"absolute z-50 px-3 py-2 text-sm rounded-md border transition-all duration-150\",\n            positionClasses[position],\n            variantClasses[variant],\n            maxWidth,\n            showTooltip ? \"opacity-100 scale-100\" : \"opacity-0 scale-95\",\n            className\n          )}\n          data-testid=\"tooltip\"\n        >\n          <div className=\"relative\">\n            {content}\n            \n            {/* Arrow */}\n            <div\n              className={cn(\n                \"absolute w-0 h-0\",\n                arrowClasses[position],\n                position === \"top\" && arrowColors[variant],\n                position === \"bottom\" && `border-b-gray-900 ${variant === \"light\" ? \"border-b-white\" : variant === \"dark\" ? \"border-b-black\" : \"border-b-gray-900\"}`,\n                position === \"left\" && `border-l-gray-900 ${variant === \"light\" ? \"border-l-white\" : variant === \"dark\" ? \"border-l-black\" : \"border-l-gray-900\"}`,\n                position === \"right\" && `border-r-gray-900 ${variant === \"light\" ? \"border-r-white\" : variant === \"dark\" ? \"border-r-black\" : \"border-r-gray-900\"}`\n              )}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Tooltip with Rich Content\ninterface ZohoRichTooltipProps {\n  title?: string;\n  content: React.ReactNode;\n  children: React.ReactNode;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\";\n  width?: string;\n  trigger?: \"hover\" | \"click\";\n  className?: string;\n}\n\nexport function ZohoRichTooltip({\n  title,\n  content,\n  children,\n  position = \"top\",\n  width = \"w-80\",\n  trigger = \"hover\",\n  className,\n}: ZohoRichTooltipProps) {\n  const [isVisible, setIsVisible] = React.useState(false);\n  const [showTooltip, setShowTooltip] = React.useState(false);\n\n  const handleToggle = () => {\n    if (trigger === \"click\") {\n      if (isVisible) {\n        setShowTooltip(false);\n        setTimeout(() => setIsVisible(false), 150);\n      } else {\n        setIsVisible(true);\n        setTimeout(() => setShowTooltip(true), 10);\n      }\n    }\n  };\n\n  const handleMouseEnter = () => {\n    if (trigger === \"hover\") {\n      setIsVisible(true);\n      setTimeout(() => setShowTooltip(true), 10);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (trigger === \"hover\") {\n      setShowTooltip(false);\n      setTimeout(() => setIsVisible(false), 150);\n    }\n  };\n\n  const positionClasses = {\n    top: \"bottom-full left-1/2 transform -translate-x-1/2 mb-2\",\n    bottom: \"top-full left-1/2 transform -translate-x-1/2 mt-2\",\n    left: \"right-full top-1/2 transform -translate-y-1/2 mr-2\",\n    right: \"left-full top-1/2 transform -translate-y-1/2 ml-2\",\n  };\n\n  React.useEffect(() => {\n    if (trigger === \"click\" && isVisible) {\n      const handleClickOutside = (event: MouseEvent) => {\n        const target = event.target as Element;\n        if (!target.closest('[data-testid=\"rich-tooltip\"]') && !target.closest('[data-testid=\"rich-tooltip-trigger\"]')) {\n          setShowTooltip(false);\n          setTimeout(() => setIsVisible(false), 150);\n        }\n      };\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n  }, [isVisible, trigger]);\n\n  return (\n    <div className=\"relative inline-block\">\n      <div\n        onClick={handleToggle}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        data-testid=\"rich-tooltip-trigger\"\n      >\n        {children}\n      </div>\n      \n      {isVisible && (\n        <div\n          className={cn(\n            \"absolute z-50 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg transition-all duration-150\",\n            positionClasses[position],\n            width,\n            showTooltip ? \"opacity-100 scale-100\" : \"opacity-0 scale-95\",\n            className\n          )}\n          data-testid=\"rich-tooltip\"\n        >\n          {title && (\n            <div className=\"px-4 py-3 border-b border-gray-200 dark:border-gray-700\">\n              <h4 className=\"font-medium text-gray-900 dark:text-white\">\n                {title}\n              </h4>\n            </div>\n          )}\n          \n          <div className=\"p-4\">\n            {content}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Help Tooltip with Icon\ninterface ZohoHelpTooltipProps {\n  content: string | React.ReactNode;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\";\n  className?: string;\n}\n\nexport function ZohoHelpTooltip({\n  content,\n  position = \"top\",\n  className,\n}: ZohoHelpTooltipProps) {\n  return (\n    <ZohoTooltip content={content} position={position} className={className}>\n      <button\n        className=\"inline-flex items-center justify-center w-4 h-4 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors duration-200\"\n        data-testid=\"help-tooltip-trigger\"\n      >\n        <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n        </svg>\n      </button>\n    </ZohoTooltip>\n  );\n}","size_bytes":7935}}}